{
  "methods": [
    {
      "name": "setGirth",
      "description": "(Ljava/math/BigDecimal;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 812,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAllParentCategoryXrefs",
      "description": "(Ljava/util/List;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 716,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 668,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllParentCategoryIds",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 738,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDefaultSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 554,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setHeight",
      "description": "(Ljava/math/BigDecimal;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 792,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCanSellWithoutOptions",
      "description": "()Ljava/lang/Boolean;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 514,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSize",
      "description": "()Lorg/broadleafcommerce/common/vendor/service/type/ContainerSizeType;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 817,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCumulativeCrossSaleProducts",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 879,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllSkuMedia",
      "description": "()Ljava/util/Map;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 699,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOverrideGeneratedUrl",
      "description": "()Ljava/lang/Boolean;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1002,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "null",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLongDescription",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 383,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProductOptions",
      "description": "(Ljava/util/List;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 988,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMedia",
      "description": "()Ljava/util/Map;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 689,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setWidth",
      "description": "(Ljava/math/BigDecimal;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 782,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUrlKey",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1098,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRetailPriceInternal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 472,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductOptionValuesMap",
      "description": "()Ljava/util/Map;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1046,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getActiveStartDate",
      "description": "()Ljava/util/Date;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 393,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUrl",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 993,
      "classification": "tested",
      "detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDimension",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Dimension;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 767,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDepth",
      "description": "()Ljava/math/BigDecimal;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 797,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setName",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 368,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCrossSaleProducts",
      "description": "(Ljava/util/List;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 857,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 489,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setWeight",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Weight;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 847,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMedia",
      "description": "(Ljava/util/Map;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 694,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setActiveStartDate",
      "description": "(Ljava/util/Date;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 398,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getWidth",
      "description": "()Ljava/math/BigDecimal;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 777,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getGeneratedUrl",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getParentCategoryHierarchyIds",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 722,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOverrideGeneratedUrl",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1007,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearDynamicPrices",
      "description": "()V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTaxCode",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1143,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllSkus",
      "description": "(Z)Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 583,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategory",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 643,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1028,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "'\\40'",
        "null",
        "'A'"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "'\\40'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'A'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getWeight",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Weight;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 842,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getGirth",
      "description": "()Ljava/math/BigDecimal;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 807,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProductAttributes",
      "description": "(Ljava/util/Map;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 940,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasRetailPrice",
      "description": "()Z",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 458,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMargin",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 499,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getActiveEndDate",
      "description": "()Ljava/util/Date;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 403,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1038,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMultiValueProductAttributes",
      "description": "()Ljava/util/Map;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 929,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getExternalId",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 509,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 363,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1076,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDescription",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 373,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllSellableSkus",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 578,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDepth",
      "description": "(Ljava/math/BigDecimal;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 802,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setContainer",
      "description": "(Lorg/broadleafcommerce/common/vendor/service/type/ContainerShapeType;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 832,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSalePriceInternal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 480,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setActiveEndDate",
      "description": "(Ljava/util/Date;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 408,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductOptions",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 979,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getHeight",
      "description": "()Ljava/math/BigDecimal;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 787,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductOptionXrefs",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 960,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTaxCode",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 1187,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setLongDescription",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 388,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getContainer",
      "description": "()Lorg/broadleafcommerce/common/vendor/service/type/ContainerShapeType;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 827,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCumulativeUpSaleProducts",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 898,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllSkus",
      "description": "()Ljava/util/List;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 573,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setUpSaleProducts",
      "description": "(Ljava/util/List;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 870,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDimension",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Dimension;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 772,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDescription",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 378,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSize",
      "description": "(Lorg/broadleafcommerce/common/vendor/service/type/ContainerSizeType;)V",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 822,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDimensionString",
      "description": "()Ljava/lang/String;",
      "class": "ProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 837,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTypeFieldName",
      "description": "()Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 323,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductForIndexable",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 314,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategorySortFieldName",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 388,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSolrTaggedFieldString",
      "description": "(Ljava/lang/String;Ljava/lang/String;Lorg/broadleafcommerce/core/search/domain/SearchFacetRange;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 737,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSolrDocumentId",
      "description": "(Lorg/apache/solr/common/SolrInputDocument;Lorg/broadleafcommerce/core/catalog/domain/Indexable;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 333,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDefaultLocale",
      "description": "()Lorg/broadleafcommerce/common/locale/domain/Locale;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 422,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFacetResults",
      "description": "(Ljava/util/Map;Lorg/apache/solr/client/solrj/response/QueryResponse;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 644,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachSortClause",
      "description": "(Lorg/apache/solr/client/solrj/SolrQuery;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;Ljava/lang/String;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 776,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimizeIndex",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 449,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildSolrFacetQuery",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/search/domain/SearchFacetRange;Ljava/lang/Boolean;Ljava/lang/String;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 624,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrentProductId",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;)Ljava/lang/Long;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 305,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPropertyValueInternal",
      "description": "(Ljava/lang/Object;[Ljava/lang/String;I)Ljava/lang/Object;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 955,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildSolrFacetField",
      "description": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 597,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryId",
      "description": "(Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 279,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "0L",
        "1L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSolrFieldKeyMap",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchCriteria;Ljava/util/List;)Ljava/util/Map;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 874,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryId",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/lang/Long;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 269,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertPrefixListToString",
      "description": "(Ljava/util/List;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 258,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryFilterIds",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/util/List;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 1055,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "swapActiveCores",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/SolrConfiguration;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "scrubFacetValue",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 471,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDefaultLocalePrefix",
      "description": "()Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 417,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildSearchFacetDTOs",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 490,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPropertyValue",
      "description": "(Ljava/lang/Object;Lorg/broadleafcommerce/core/search/domain/Field;)Ljava/lang/Object;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 431,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategorySortFieldName",
      "description": "(Ljava/lang/Long;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 397,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPropertyValue",
      "description": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 436,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sanitizeQuery",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 482,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachActiveFacetFilters",
      "description": "(Lorg/apache/solr/client/solrj/SolrQuery;Ljava/util/Map;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 899,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sortFacetResults",
      "description": "(Ljava/util/Map;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 686,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSolrFieldTag",
      "description": "(Ljava/lang/String;Ljava/lang/String;Lorg/broadleafcommerce/core/search/domain/SearchFacetRange;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 577,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFacetAvailable",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchFacet;Ljava/util/Map;)Z",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 508,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLocalePrefix",
      "description": "()Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 406,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getResponseDocuments",
      "description": "(Lorg/apache/solr/client/solrj/response/QueryResponse;)Ljava/util/List;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 744,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSortableFieldTypes",
      "description": "()Ljava/util/List;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 764,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPropertyNameForIndexField",
      "description": "(Lorg/broadleafcommerce/core/search/domain/IndexField;Lorg/broadleafcommerce/core/search/domain/solr/FieldType;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 251,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getNamedFacetMap",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/util/Map;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 886,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSolrRangeString",
      "description": "(Ljava/lang/String;Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 541,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSearchableIndexFields",
      "description": "()Ljava/util/List;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 1042,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachFacets",
      "description": "(Lorg/apache/solr/client/solrj/SolrQuery;Ljava/util/Map;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 711,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSortOrder",
      "description": "([Ljava/lang/String;Ljava/lang/String;)Lorg/apache/solr/client/solrj/SolrQuery$ORDER;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 860,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSolrRangeFunctionString",
      "description": "(Ljava/math/BigDecimal;Ljava/math/BigDecimal;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 565,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "copyPropertyToCollection",
      "description": "(Ljava/util/Collection;Ljava/lang/Object;)V",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 1020,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDocumentType",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 328,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPropertyNameForIndexField",
      "description": "(Lorg/broadleafcommerce/core/search/domain/IndexField;Lorg/broadleafcommerce/core/search/domain/solr/FieldType;Ljava/lang/String;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 231,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIndexableId",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;)Ljava/lang/Long;",
      "class": "SolrHelperServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 290,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupDefaultSku",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 474,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isOnSale",
      "description": "()Z",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 464,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAvailable",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 815,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTaxable",
      "description": "()Ljava/lang/Boolean;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 743,
      "classification": "partially-tested",
      "detected": [
        "false",
        "null"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 225,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 40,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 40,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuMediaXref",
      "description": "()Ljava/util/Map;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 954,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductOptionValuesCollection",
      "description": "()Ljava/util/Set;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1053,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getActiveStartDate",
      "description": "()Ljava/util/Date;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 824,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1252,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIsMachineSortable",
      "description": "()Ljava/lang/Boolean;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "null",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPrimarySkuMedia",
      "description": "()Lorg/broadleafcommerce/common/media/domain/Media;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 982,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSkuAttributes",
      "description": "(Ljava/util/Map;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1222,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductOptionValueAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 483,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProduct",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1033,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProductOptionValuesCollection",
      "description": "(Ljava/util/Set;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1063,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBaseSalePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 595,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 225,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearDynamicPrices",
      "description": "()V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1247,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sortSkuMedia",
      "description": "(Ljava/util/Map;)Ljava/util/Map;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1014,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isOrderedSkuMedia",
      "description": "(Ljava/util/Map;)Z",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1009,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCost",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 658,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMultiValueSkuAttributes",
      "description": "()Ljava/util/Map;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1211,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isDiscountable",
      "description": "()Ljava/lang/Boolean;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 768,
      "classification": "partially-tested",
      "detected": [
        "false",
        "null"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTaxCode",
      "description": "()Ljava/lang/String;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1287,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBaseRetailPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 582,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 39,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInventoryType",
      "description": "()Lorg/broadleafcommerce/core/inventory/service/type/InventoryType;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1150,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1329,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getWeight",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Weight;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 884,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFulfillmentType",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1191,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuMediaXrefIgnoreDefaultSku",
      "description": "()Ljava/util/Map;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 971,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasSalePrice",
      "description": "()Z",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 534,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDescription",
      "description": "()Ljava/lang/String;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 715,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasDefaultSku",
      "description": "()Z",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 470,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 227,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriceData",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuPrices;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 608,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 24,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTaxable",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 759,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRetailPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 636,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 14,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getActiveEndDate",
      "description": "()Ljava/util/Date;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 847,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 701,
      "classification": "tested",
      "detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 49,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 49,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 49,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMargin",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 676,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSalePrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 539,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 898,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDiscountable",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 786,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 11,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setInventoryType",
      "description": "(Lorg/broadleafcommerce/core/inventory/service/type/InventoryType;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1163,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "()Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1233,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 225,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.catalog.domain.TestSkuImplPanktiGen"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSalePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 500,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 641,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isAvailable",
      "description": "()Ljava/lang/Boolean;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 795,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "null",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentType",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1178,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCost",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 671,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRetailPriceInternal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 552,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDimension",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Dimension;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 870,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasRetailPrice",
      "description": "()Z",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 631,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLongDescription",
      "description": "()Ljava/lang/String;",
      "class": "SkuImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 729,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/OfferDiscountType;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 431,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMaxUsesPerOrder",
      "description": "(I)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 630,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isUnlimitedUsePerOrder",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 635,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMaxUsesPerOrder",
      "description": "()I",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 625,
      "classification": "tested",
      "detected": [
        "0",
        "1"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMaxUsesPerCustomer",
      "description": "()Ljava/lang/Long;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 585,
      "classification": "partially-tested",
      "detected": [
        "1L",
        "null"
      ],
      "not-detected": [
        "0L"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "0L",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "1L",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUseListForDiscounts",
      "description": "()Ljava/lang/Boolean;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 709,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "null",
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 9,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 9,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 733,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "'\\40'",
        "'A'"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "'\\40'",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "'A'",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFutureCredit",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 824,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOfferItemQualifierRuleType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/OfferItemRestrictionRuleType;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 441,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriority",
      "description": "()I",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 483,
      "classification": "tested",
      "detected": [
        "1",
        "0"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOfferItemTargetRuleType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/OfferItemRestrictionRuleType;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 456,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAutomaticallyAdded",
      "description": "(Z)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 580,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 27,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAdjustmentType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/OfferAdjustmentType;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 811,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMaxUsesStrategyType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/CustomerMaxUsesStrategyType;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 595,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTargetMinSubTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 781,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isCombinableWithOtherOffers",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 551,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isAutomaticallyAdded",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 571,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getApplyToChildItems",
      "description": "()Ljava/lang/Boolean;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 536,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalitarianOffer",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 690,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 24,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianOffer",
      "description": "()Ljava/lang/Boolean;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 681,
      "classification": "tested",
      "detected": [
        "null",
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 842,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 751,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTargetMinSubTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 776,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMarketingMessage",
      "description": "()Ljava/lang/String;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 645,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "\"A\"",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "\"\"",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setQualifyingItemSubTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 761,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderMinSubTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 771,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAdjustmentType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferAdjustmentType;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 819,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderMinSubTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 766,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCombinableWithOtherOffers",
      "description": "(Z)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 561,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 25,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRequiresRelatedTargetAndQualifiers",
      "description": "()Ljava/lang/Boolean;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 796,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStartDate",
      "description": "()Ljava/util/Date;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 493,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getApplyDiscountToSalePrice",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 526,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 9,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 9,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDiscountType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferDiscountType;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 436,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOfferItemTargetRuleType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferItemRestrictionRuleType;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 466,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isLimitedUsePerCustomer",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 620,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTargetItemCriteriaXref",
      "description": "()Ljava/util/Set;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 665,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isLimitedUsePerOrder",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 640,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/OfferType;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 421,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOfferItemQualifierRuleType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferItemRestrictionRuleType;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 451,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 27,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setApplyToChildItems",
      "description": "(Z)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 541,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 858,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMaxUsesStrategyType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/CustomerMaxUsesStrategyType;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 600,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQualifyingItemSubTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 756,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 743,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isUnlimitedUsePerCustomer",
      "description": "()Z",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 615,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setApplyDiscountToSalePrice",
      "description": "(Z)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 531,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 26,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferType;)V",
      "class": "OfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferImpl.java",
      "line-number": 426,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 11,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getChildCategoryIds",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 802,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getParentCategoryXref",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/CategoryXref;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 677,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCumulativeCrossSaleProducts",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 978,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setParentCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 702,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1317,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createChildCategoryURLMap",
      "description": "()Ljava/util/Map;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 834,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getParentCategoryHierarchy",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 850,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getActiveProductXrefs",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1029,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCategoryAttributesMap",
      "description": "(Ljava/util/Map;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1228,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInventoryType",
      "description": "()Lorg/broadleafcommerce/core/inventory/service/type/InventoryType;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1099,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getGeneratedUrl",
      "description": "()Ljava/lang/String;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 537,
      "classification": "tested",
      "detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildDefaultParentCategoryPath",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 897,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getParentFacets",
      "description": "(Ljava/util/Collection;)Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createChildCategoryIds",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 814,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAllProductXrefs",
      "description": "(Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1045,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAllChildCategoryXrefs",
      "description": "(Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 748,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFulfillmentType",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCumulativeUpSaleProducts",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 992,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCumulativeSearchFacets",
      "description": "(Ljava/util/Set;)Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1156,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOverrideGeneratedUrl",
      "description": "()Ljava/lang/Boolean;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 519,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "null",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1300,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setChildCategoryXrefs",
      "description": "(Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 740,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUrlKey",
      "description": "()Ljava/lang/String;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 529,
      "classification": "tested",
      "detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAllParentCategoryXrefs",
      "description": "(Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 915,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCrossSaleProducts",
      "description": "(Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 965,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUrl",
      "description": "()Ljava/lang/String;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 503,
      "classification": "tested",
      "detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOverrideGeneratedUrl",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 524,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCumulativeSearchFacets",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1150,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getActiveStartDate",
      "description": "()Ljava/util/Date;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 557,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 488,
      "classification": "tested",
      "detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLongDescription",
      "description": "()Ljava/lang/String;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 603,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCumulativeFeaturedProducts",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1006,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1290,
      "classification": "partially-tested",
      "detected": [
        "null",
        "'A'"
      ],
      "not-detected": [
        "'\\40'"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "'A'",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "'\\40'",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getChildCategoryXrefs",
      "description": "()Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 728,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setActiveEndDate",
      "description": "(Ljava/util/Date;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 575,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setInventoryType",
      "description": "(Lorg/broadleafcommerce/core/inventory/service/type/InventoryType;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1104,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "fillInURLMapForCategory",
      "description": "(Ljava/util/Map;Lorg/broadleafcommerce/core/catalog/domain/Category;Ljava/lang/String;Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 144,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryAttributeByName",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/CategoryAttribute;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1259,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setUpSaleProducts",
      "description": "(Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1020,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getParentCategoryHierarchy",
      "description": "(Ljava/util/List;Ljava/lang/Boolean;)Ljava/util/List;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 856,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMappedCategoryAttributes",
      "description": "()Ljava/util/Map;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1269,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1371,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasChildCategories",
      "description": "()Z",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 791,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentType",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDescription",
      "description": "()Ljava/lang/String;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 547,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildLink",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;Z)Ljava/lang/String;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 124,
      "classification": "tested",
      "detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMultiValueCategoryAttributes",
      "description": "()Ljava/util/Map;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1278,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setActiveStartDate",
      "description": "(Ljava/util/Date;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 565,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasAllChildCategories",
      "description": "()Z",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 767,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFeaturedProducts",
      "description": "(Ljava/util/List;)V",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 952,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getParentCategory",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "CategoryImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 671,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.domain.CategoryImplTest.testRecursiveLink(org.broadleafcommerce.core.catalog.domain.CategoryImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isDiscountingAllowed",
      "description": "()Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 642,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderItemType",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/OrderItemType;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 500,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditTotalAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 696,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalAdjustmentValue",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 677,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 893,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 859,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllCandidateItemOffers",
      "description": "()V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 583,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 720,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addCandidateItemOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/CandidateItemOffer;)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 578,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProratedOrderItemAdjustments",
      "description": "()Ljava/util/List;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 472,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderItemType",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/OrderItemType;)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 505,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 33,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRetailPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 289,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 12,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateSaleAndRetailPrices",
      "description": "()Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 528,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTaxable",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 625,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalPrice",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 725,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 672,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriceBeforeAdjustments",
      "description": "(ZZ)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 552,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isRetailPriceOverride",
      "description": "()Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 760,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 24,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSalePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 296,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSalePrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 313,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 9,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getGiftWrapOrderItem",
      "description": "()Lorg/broadleafcommerce/core/order/domain/GiftWrapOrderItem;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 490,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "assignFinalPrice",
      "description": "()V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 541,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDiscountingAllowed",
      "description": "(Z)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 651,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllAdjustments",
      "description": "()I",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 593,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isSalePriceOverride",
      "description": "()Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 774,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 24,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isAParentOf",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 831,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizePrice",
      "description": "()V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 536,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 18,
          "tests": [
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSalePriceOverride",
      "description": "(Z)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 769,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isChildOrderItem",
      "description": "()Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 849,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTaxablePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 333,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 963,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRetailPriceOverride",
      "description": "(Z)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 755,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAveragePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 656,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 323,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkCloneable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 871,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRetailPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 281,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriceBeforeAdjustments",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 547,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertToMoney",
      "description": "(Ljava/math/BigDecimal;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 881,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)V",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 380,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 11,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isInCategory",
      "description": "(Ljava/lang/String;)Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 436,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 1049,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalPriceBeforeAdjustments",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 750,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditTotalAdjustmentValue",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 701,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAverageAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 664,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIsOnSale",
      "description": "()Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 510,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIsDiscounted",
      "description": "()Z",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 519,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getHasValidationError",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 808,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "null",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategory",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "OrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemImpl.java",
      "line-number": 362,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "put",
      "description": "(Ljava/io/Serializable;)V",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 395,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "intializeQueueFolders",
      "description": "()V",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 712,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "toArray",
      "description": "([Ljava/lang/Object;)[Ljava/lang/Object;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 282,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "empty",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "empty",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "remainingCapacity",
      "description": "()I",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 431,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "offer",
      "description": "(Ljava/io/Serializable;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 379,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "poll",
      "description": "()Ljava/io/Serializable;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 201,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readQueueInternal",
      "description": "(IZJ)Ljava/util/Map;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 592,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "size",
      "description": "()I",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 240,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addAll",
      "description": "(Ljava/util/Collection;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 309,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "drainTo",
      "description": "(Ljava/util/Collection;)I",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 482,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "remove",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 443,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "element",
      "description": "()Ljava/io/Serializable;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 215,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAll",
      "description": "(Ljava/util/Collection;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 323,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "containsAll",
      "description": "(Ljava/util/Collection;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 287,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "writeToQueue",
      "description": "(Ljava/util/List;J)I",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 504,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "contains",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 476,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deserialize",
      "description": "([B)Ljava/lang/Object;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 801,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "seMaxCapacity",
      "description": "(I)V",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 903,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLocksFolder",
      "description": "()Ljava/lang/String;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 885,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "offer",
      "description": "(Ljava/io/Serializable;JLjava/util/concurrent/TimeUnit;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 402,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "geMaxCapacity",
      "description": "()I",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 897,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineMaxCapacity",
      "description": "()V",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 754,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "retainAll",
      "description": "(Ljava/util/Collection;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 328,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "drainTo",
      "description": "(Ljava/util/Collection;I)I",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 494,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isEmpty",
      "description": "()Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 264,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "take",
      "description": "()Ljava/io/Serializable;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 409,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "initializeQueueAccessLock",
      "description": "()Lorg/broadleafcommerce/core/util/lock/DistributedLock;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 869,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "serialize",
      "description": "(Ljava/io/Serializable;)[B",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 835,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "empty"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "empty",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "remove",
      "description": "()Ljava/io/Serializable;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 185,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clear",
      "description": "()V",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 333,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQueueEntryFolder",
      "description": "()Ljava/lang/String;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 893,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getConfigsFolder",
      "description": "()Ljava/lang/String;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 889,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "peek",
      "description": "()Ljava/io/Serializable;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 225,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/io/Serializable;)Z",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 362,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "toArray",
      "description": "()[Ljava/lang/Object;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 276,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "empty"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "empty",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "initializeConfigLock",
      "description": "()Lorg/broadleafcommerce/core/util/lock/DistributedLock;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 873,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "executeOperation",
      "description": "(Lorg/broadleafcommerce/common/util/GenericOperation;)Ljava/lang/Object;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 937,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "poll",
      "description": "(JLjava/util/concurrent/TimeUnit;)Ljava/io/Serializable;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 420,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "iterator",
      "description": "()Ljava/util/Iterator;",
      "class": "ZookeeperDistributedQueue",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 271,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBean",
      "description": "(Ljava/lang/String;Ljava/lang/Object;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 204,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(ZZ)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 303,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/lang/String;Ljava/util/Iterator;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 168,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/lang/String;Ljava/util/Collection;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 96,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/lang/String;)Lorg/apache/solr/common/SolrDocument;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 578,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/util/Collection;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 402,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollback",
      "description": "()Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 393,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(Ljava/lang/String;ZZZ)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 312,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 420,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/util/Collection;Lorg/apache/solr/common/params/SolrParams;)Lorg/apache/solr/common/SolrDocumentList;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 632,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/lang/String;Ljava/util/Collection;)Lorg/apache/solr/common/SolrDocumentList;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 605,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByQuery",
      "description": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 474,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/lang/String;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 411,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "queryAndStreamResponse",
      "description": "(Lorg/apache/solr/common/params/SolrParams;Lorg/apache/solr/client/solrj/StreamingResponseCallback;)Lorg/apache/solr/client/solrj/response/QueryResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 560,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByQuery",
      "description": "(Ljava/lang/String;Ljava/lang/String;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 492,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/lang/String;Ljava/lang/String;Lorg/apache/solr/common/params/SolrParams;)Lorg/apache/solr/common/SolrDocument;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 587,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "query",
      "description": "(Ljava/lang/String;Lorg/apache/solr/common/params/SolrParams;)Lorg/apache/solr/client/solrj/response/QueryResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 515,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/lang/String;Ljava/util/List;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 456,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(ZZZ)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 321,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "()Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 285,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimize",
      "description": "(ZZI)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 375,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/util/Iterator;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 177,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBeans",
      "description": "(Ljava/lang/String;Ljava/util/Collection;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 222,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBeans",
      "description": "(Ljava/util/Collection;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 231,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBeans",
      "description": "(Ljava/lang/String;Ljava/util/Iterator;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 258,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBean",
      "description": "(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 186,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/lang/String;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 429,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/lang/String;Ljava/util/List;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 438,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(Ljava/lang/String;ZZ)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 294,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "request",
      "description": "(Lorg/apache/solr/client/solrj/SolrRequest;Ljava/lang/String;)Lorg/apache/solr/common/util/NamedList;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimize",
      "description": "()Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 339,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/util/List;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 465,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "query",
      "description": "(Ljava/lang/String;Lorg/apache/solr/common/params/SolrParams;Lorg/apache/solr/client/solrj/SolrRequest$METHOD;)Lorg/apache/solr/client/solrj/response/QueryResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 533,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBeans",
      "description": "(Ljava/lang/String;Ljava/util/Collection;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 240,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/lang/String;Lorg/apache/solr/common/SolrInputDocument;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 150,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/lang/String;Lorg/apache/solr/common/params/SolrParams;)Lorg/apache/solr/common/SolrDocument;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 596,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimize",
      "description": "(Ljava/lang/String;ZZI)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 366,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/lang/String;Ljava/util/Collection;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBeans",
      "description": "(Ljava/util/Iterator;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 267,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimize",
      "description": "(Ljava/lang/String;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 330,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/lang/String;Ljava/util/Collection;Lorg/apache/solr/common/params/SolrParams;)Lorg/apache/solr/common/SolrDocumentList;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 623,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Lorg/apache/solr/common/SolrInputDocument;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByQuery",
      "description": "(Ljava/lang/String;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 501,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByQuery",
      "description": "(Ljava/lang/String;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 483,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollback",
      "description": "(Ljava/lang/String;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 384,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "query",
      "description": "(Lorg/apache/solr/common/params/SolrParams;)Lorg/apache/solr/client/solrj/response/QueryResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 524,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(Ljava/lang/String;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 276,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "queryAndStreamResponse",
      "description": "(Ljava/lang/String;Lorg/apache/solr/common/params/SolrParams;Lorg/apache/solr/client/solrj/StreamingResponseCallback;)Lorg/apache/solr/client/solrj/response/QueryResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 551,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/util/Collection;)Lorg/apache/solr/common/SolrDocumentList;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 614,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/util/Collection;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getById",
      "description": "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/solr/common/SolrDocument;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 569,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimize",
      "description": "(Ljava/lang/String;ZZ)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 348,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBean",
      "description": "(Ljava/lang/Object;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 213,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBeans",
      "description": "(Ljava/util/Collection;I)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 249,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimize",
      "description": "(ZZ)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 357,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addBean",
      "description": "(Ljava/lang/Object;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 195,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteById",
      "description": "(Ljava/util/List;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 447,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "query",
      "description": "(Lorg/apache/solr/common/params/SolrParams;Lorg/apache/solr/client/solrj/SolrRequest$METHOD;)Lorg/apache/solr/client/solrj/response/QueryResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 542,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Lorg/apache/solr/common/SolrInputDocument;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 141,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/lang/String;Lorg/apache/solr/common/SolrInputDocument;)Lorg/apache/solr/client/solrj/response/UpdateResponse;",
      "class": "DelegatingHttpSolrClient",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "DelegatingHttpSolrClient.java",
      "line-number": 132,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTaxOverride",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 758,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "null",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditItemAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 633,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditOrderAdjustments",
      "description": "()Ljava/util/List;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 505,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setStatus",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/OrderStatus;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 399,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditFulfillmentGroupAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 651,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalFulfillmentCharges",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 469,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentGroupAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 642,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalTax",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 449,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStatus",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/OrderStatus;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 394,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPreview",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 358,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasCategoryItem",
      "description": "(Ljava/lang/String;)Z",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 490,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSubTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 305,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getItemCount",
      "description": "()I",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 768,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 877,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPreview",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 366,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 682,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalFutureCreditAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 690,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updatePrices",
      "description": "()Z",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 698,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 331,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateSubTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 315,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getItemAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 624,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "assignOrderItemsFinalPrice",
      "description": "()V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 324,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscreteOrderItems",
      "description": "()Ljava/util/List;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 537,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 810,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "containsSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)Z",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 565,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getHasOrderAdjustments",
      "description": "()Z",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 782,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 18,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 13,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 660,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getNonDiscreteOrderItems",
      "description": "()Ljava/util/List;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 554,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditOrderAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 671,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 454,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalFulfillmentCharges",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 475,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllFutureCreditAdjustments",
      "description": "()Ljava/util/List;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 516,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addOfferCode",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 734,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSubTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 310,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 14,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalAfterAppliedPayments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 336,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeItemPrices",
      "description": "()Z",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 709,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 18,
          "tests": [
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 353,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 414,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMainEntityName",
      "description": "()Ljava/lang/String;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 791,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 818,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderMessages",
      "description": "()Ljava/util/List;",
      "class": "OrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderImpl.java",
      "line-number": 864,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "mergePriceDetails",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 262,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isPercentOffOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 520,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "chooseSaleOrRetailAdjustments",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 248,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculatePotentialSavingsForOrderItem",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;I)Lorg/broadleafcommerce/common/money/Money;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 427,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeDuplicatePermutations",
      "description": "(Ljava/util/List;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 665,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "offerListStartsWithNonCombinable",
      "description": "(Ljava/util/List;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 561,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCandidateItemOffer",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 149,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markTargets",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/order/domain/OrderItem;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 306,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculatePercent",
      "description": "(Lorg/broadleafcommerce/common/money/Money;Lorg/broadleafcommerce/common/money/Money;)Ljava/math/BigDecimal;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 497,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeTotalitarianAndNonCombinableOffers",
      "description": "(Ljava/util/List;Ljava/util/List;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 597,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAdjustments",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 204,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsQualifyingSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 176,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPermutationByComparator",
      "description": "(Ljava/util/List;Ljava/util/Comparator;)Ljava/util/List;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 614,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertToIdList",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 680,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markQualifiersAndTargets",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 533,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "usePercentOffValue",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 524,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "restPriceDetails",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 620,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasQualifierAndQualifierRestricted",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 528,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyItemOfferExtension",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)Ljava/lang/Boolean;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 218,
      "classification": "partially-tested",
      "detected": [
        "null",
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineBestPermutation",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Ljava/util/List;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 629,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "useCalculatePercent",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 516,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markRelatedQualifiersAndTargets",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 384,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterItemLevelOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Ljava/util/List;Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 81,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 184,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markQualifiers",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 291,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPriceDetailListFromOrderItems",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 275,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianOfferAppliedToAnyItem",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 188,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyItemOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 231,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAndCompareOrderAndItemOffers",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Ljava/util/List;Ljava/util/List;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 693,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterOffers",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 407,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculatePotentialSavings",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 458,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 5,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildItemOfferPermutations",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 580,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateWeightedPercent",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/PromotionDiscount;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;Lorg/broadleafcommerce/common/money/Money;)Ljava/math/BigDecimal;",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 504,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAllItemOffers",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 166,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsTargetSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 180,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markTargets",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/order/domain/OrderItem;Z)Z",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 317,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyItemQualifiersAndTargets",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "ItemOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "ItemOfferProcessorImpl.java",
      "line-number": 270,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeOfferCode",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/offer/domain/OfferCode;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 488,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAutomaticallyMergeLikeItems",
      "description": "()Z",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 873,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeItem",
      "description": "(Ljava/lang/Long;Ljava/lang/Long;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 794,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "reloadOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1078,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCartOperationExceptionRootCause",
      "description": "(Lorg/broadleafcommerce/core/workflow/WorkflowException;)Ljava/lang/Throwable;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 985,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCartForCustomerWithEnhancements",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1173,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createNamedOrderForCustomer",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 219,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItemFromNamedOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/OrderItem;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 579,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeInactiveItems",
      "description": "(Ljava/lang/Long;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 855,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "itemMatches",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/util/Map;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)Z",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1028,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addAllItemsFromNamedOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 547,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllPaymentsFromOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 906,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addOfferCode",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/offer/domain/OfferCode;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 452,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCartForCustomerWithEnhancements",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1163,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 445,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findLastMatchingItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Long;Ljava/lang/Long;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 510,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addGiftWrapItemToOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/service/call/GiftWrapOrderItemRequest;Z)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 630,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findAllChildrenToRemove",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 820,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removePaymentFromOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 958,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalChildOrderItems",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)I",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 710,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addOfferCodes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/List;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 460,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findOrdersForCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Ljava/util/List;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 267,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addDependentOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 753,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addPaymentToOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/payment/domain/OrderPayment;Lorg/broadleafcommerce/core/payment/domain/secure/Referenced;)Lorg/broadleafcommerce/core/payment/domain/OrderPayment;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 298,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItem",
      "description": "(Ljava/lang/Long;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 644,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllOfferCodes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 497,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removePaymentsFromOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/payment/PaymentType;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 912,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "preValidateUpdateQuantityOperation",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateProductOptionsForItem",
      "description": "(Ljava/lang/Long;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1067,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;ZZ)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 312,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findMatchingItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1043,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareAttributes",
      "description": "(Ljava/util/Map;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)Z",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1008,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAutomaticallyMergeLikeItems",
      "description": "(Z)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 882,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Boolean;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 321,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItemFromNamedOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/OrderItem;IZ)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 602,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeCreditCardPaymentsFromOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 935,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItemWithPriceOverrides",
      "description": "(Ljava/lang/Long;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 652,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeItemInternal",
      "description": "(Ljava/lang/Long;Ljava/lang/Long;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 829,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "preValidateCartOperation",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 1136,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateItemQuantity",
      "description": "(Ljava/lang/Long;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 759,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addChildItems",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;IILorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/util/List;)V",
      "class": "OrderServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 719,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "chooseSaleOrRetailAdjustments",
      "description": "()V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 140,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianOfferApplied",
      "description": "()Z",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 87,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQuantityAvailableToBeUsedAsQualifier",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)I",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 428,
      "classification": "tested",
      "detected": [
        "0",
        "1"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllAdjustments",
      "description": "()V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 196,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildDetailKey",
      "description": "()Ljava/lang/String;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 496,
      "classification": "tested",
      "detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeZeroDollarAdjustments",
      "description": "(Z)V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 224,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearAllNonFinalizedQuantities",
      "description": "()V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 400,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateRetailAdjustmentUnitPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 119,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addPromotionDiscount",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;I)V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 379,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addCandidateItemPriceDetailAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetailAdjustment;)V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 63,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addPromotionQualifier",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;I)Lorg/broadleafcommerce/core/offer/service/discount/PromotionQualifier;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 371,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasOrderItemAdjustments",
      "description": "()Z",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 82,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeRetailOnlyAdjustments",
      "description": "()V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 210,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "split",
      "description": "(ILjava/lang/Long;Z)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 549,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "splitIfNecessary",
      "description": "()Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 591,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateAdjustmentsUnitValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 481,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "restrictQualifier",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Z)Z",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 276,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeQuantities",
      "description": "()V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 390,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shallowCopy",
      "description": "()Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 518,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasNonCombinableAdjustments",
      "description": "()Z",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCandidateItemAdjustments",
      "description": "()Ljava/util/List;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 68,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isNonCombinableOfferApplied",
      "description": "()Z",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 97,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateSaleAdjustmentUnitPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 106,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 5,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTotalAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 513,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFinalizedTotalWithAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 507,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "copyWithFinalizedData",
      "description": "()Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 524,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "restrictTarget",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Z)Z",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 265,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupOrCreatePromotionQualifier",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)Lorg/broadleafcommerce/core/offer/service/discount/PromotionQualifier;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 332,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupOrCreatePromotionDiscount",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)Lorg/broadleafcommerce/core/offer/service/discount/PromotionDiscount;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 355,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateItemUnitPriceWithAdjustments",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 459,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeAdjustments",
      "description": "(Z)V",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 201,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPreciseMoneyFromAdjustment",
      "description": "(Lorg/broadleafcommerce/common/money/Money;Lorg/broadleafcommerce/common/money/Money;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 130,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQuantityAvailableToBeUsedAsTarget",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)I",
      "class": "PromotableOrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailImpl.java",
      "line-number": 287,
      "classification": "tested",
      "detected": [
        "1",
        "0"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildIncrementalIndex",
      "description": "(Ljava/lang/String;Ljava/util/List;Lorg/apache/solr/client/solrj/SolrClient;)Ljava/util/Collection;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 402,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(Ljava/lang/String;Lorg/apache/solr/client/solrj/SolrClient;ZZZ)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 759,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByQuery",
      "description": "(Ljava/lang/String;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 803,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllLocales",
      "description": "()Ljava/util/List;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 481,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addDocuments",
      "description": "(Ljava/util/Collection;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 818,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getReindexOperation",
      "description": "()Lorg/broadleafcommerce/core/search/service/solr/index/SolrIndexOperation;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 215,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPageNumberMessage",
      "description": "(ILjava/lang/Long;)Ljava/lang/String;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 294,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildIncrementalIndex",
      "description": "(ILjava/lang/Long;Lorg/broadleafcommerce/core/search/service/solr/index/SolrIndexOperation;)Ljava/lang/Long;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 364,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildIncrementalIndex",
      "description": "(Ljava/util/List;Lorg/apache/solr/client/solrj/SolrClient;)Ljava/util/Collection;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 831,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "afterPropertiesSet",
      "description": "()V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachAdditionalDocumentFields",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Lorg/apache/solr/common/SolrInputDocument;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 565,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPropertyValues",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Lorg/broadleafcommerce/core/search/domain/Field;Lorg/broadleafcommerce/core/search/domain/solr/FieldType;Ljava/util/List;)Ljava/util/Map;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 668,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "preBuildIndex",
      "description": "()V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 193,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteAllDocuments",
      "description": "(Ljava/lang/String;Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 354,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 841,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;ZZZ)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 846,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildFullCategoryHierarchy",
      "description": "(Lorg/apache/solr/common/SolrInputDocument;Lorg/broadleafcommerce/core/search/dao/CatalogStructure;Ljava/lang/Long;Ljava/util/Set;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 632,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertDisplayOrderToLong",
      "description": "(Lorg/broadleafcommerce/core/search/dao/CatalogStructure;Ljava/lang/String;)Ljava/lang/Long;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 792,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commit",
      "description": "(Ljava/lang/String;Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 749,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveIndexables",
      "description": "(ILjava/lang/Long;)Ljava/util/List;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 476,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachIndexableDocumentFields",
      "description": "(Lorg/apache/solr/common/SolrInputDocument;Lorg/broadleafcommerce/core/catalog/domain/Indexable;Ljava/util/List;Ljava/util/List;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 517,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "restoreState",
      "description": "([Ljava/lang/Object;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 736,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "performCachedOperation",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/SolrIndexCachedOperation$CacheOperation;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 171,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "optimizeIndex",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 836,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteAllNamespaceDocuments",
      "description": "(Ljava/lang/String;Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 336,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildIndex",
      "description": "()V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 198,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "executeSolrIndexOperation",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/SolrIndexOperation;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 236,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteAllReindexCoreDocuments",
      "description": "()V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 330,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteAllNamespaceDocuments",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 851,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildDocument",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Ljava/util/List;Ljava/util/List;)Lorg/apache/solr/common/SolrInputDocument;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 502,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteAllDocuments",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 856,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalPageCount",
      "description": "(Ljava/lang/Long;)J",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 287,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveState",
      "description": "()[Ljava/lang/Object;",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 725,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "empty",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "empty",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "postBuildIndex",
      "description": "()V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 203,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachBasicDocumentFields",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Lorg/apache/solr/common/SolrInputDocument;)V",
      "class": "SolrIndexServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 569,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getShippingOverride",
      "description": "()Ljava/lang/Boolean;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 770,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalFulfillmentGroupTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 639,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalFeeTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 628,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditFulfillmentGroupAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 527,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllCandidateOffers",
      "description": "()V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 489,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSaleFulfillmentPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 551,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRetailFulfillmentPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 442,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 572,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentGroupAdjustmentsValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 516,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addFulfillmentGroupItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 393,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getType",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 463,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalItemTax",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 613,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "cloneTaxDetails",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 821,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setStatus",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentGroupStatusType;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 700,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRetailFulfillmentPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 448,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 22,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFulfillmentPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 578,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 28,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalFeeTax",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 623,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalFulfillmentGroupTax",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 633,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMerchandiseTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 674,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditFulfillmentGroupAdjustments",
      "description": "()Ljava/util/List;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 504,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 608,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscreteOrderItems",
      "description": "()Ljava/util/List;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 370,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStatus",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/FulfillmentGroupStatusType;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 695,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 690,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllAdjustments",
      "description": "()V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 536,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addFulfillmentGroupFee",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupFee;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 715,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMerchandiseTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 680,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 468,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 28,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalItemTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 618,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 762,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllFulfillmentGroupFees",
      "description": "()V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 723,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalTax",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 603,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 829,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSaleFulfillmentPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 557,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addCandidateFulfillmentGroupOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/CandidateFulfillmentGroupOffer;)V",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 473,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 685,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "FulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupImpl.java",
      "line-number": 789,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateAdjustmentIfChangesDetected",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OrderAdjustment;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderAdjustment;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 339,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToOrder",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Z",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 164,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPromotableOrderAdjustmentsMap",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Ljava/util/Map;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 297,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsQualifyingSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;)Z",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 252,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "syncFulfillmentPrice",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 534,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeItemPriceDetails",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 374,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAllOrderOffers",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 221,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeOrderAdjustments",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 305,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "processMatchingDetails",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 455,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeItemQualifiers",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 414,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyOrderOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 282,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeAdjustmentsAndPrices",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 589,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPromFulfillmentAdjMap",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Ljava/util/Map;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 550,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPromotableFulfillmentGroupMap",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Ljava/util/Map;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 542,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToOrder",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Z",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 150,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeFulfillmentGroupAdjustments",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 558,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildItemPriceDetailKey",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;)Ljava/lang/String;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 472,
      "classification": "tested",
      "detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeTrailingNotCombinableOrderOffers",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 202,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCandidateOrderOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Ljava/util/List;Lorg/broadleafcommerce/core/offer/domain/Offer;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 194,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "fgContainsFutureCreditAdjustment",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Z",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 530,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPromotableDetailsMap",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Ljava/util/Map;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 482,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareAndAdjustOrderAndItemOffers",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 265,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterOrderLevelOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Ljava/util/List;Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 87,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToOrder",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Z",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 124,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeOrderItems",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 357,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPromotableQualifiersMap",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Ljava/util/Map;",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 490,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;)Z",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 256,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeFulfillmentGroups",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 505,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToOrder",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Z",
      "class": "OrderOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OrderOfferProcessorImpl.java",
      "line-number": 137,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductsByName",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 150,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductsByCategory",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 455,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveProductsInternal",
      "description": "(Ljava/lang/Integer;Ljava/util/Date;Ljava/lang/Long;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 601,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveProducts",
      "description": "(Ljava/lang/Integer;Ljava/lang/Long;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 540,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveProducts",
      "description": "()Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 611,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductsByIds",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachOrderBy",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchCriteria;Ljavax/persistence/criteria/From;Ljavax/persistence/criteria/Path;Ljavax/persistence/criteria/CriteriaQuery;)V",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 313,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFilteredActiveProductsByQueryInternal",
      "description": "(Ljava/lang/String;Ljava/util/Date;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 206,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachSearchCriteria",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchCriteria;Ljavax/persistence/criteria/From;Ljavax/persistence/criteria/From;Ljava/util/List;)V",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 353,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveProducts",
      "description": "(II)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 534,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAutomaticProductBundles",
      "description": "()Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 488,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFilteredActiveProductsByCategoryInternal",
      "description": "(Ljava/lang/Long;Ljava/util/Date;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 261,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 102,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readActiveProductsByCategory",
      "description": "(Ljava/lang/Long;II)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 431,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCriteriaForActiveProducts",
      "description": "(Ljava/util/Date;Ljava/lang/Long;)Ljavax/persistence/criteria/CriteriaQuery;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 676,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveProductsInternal",
      "description": "(IILjava/util/Date;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 591,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "(Lorg/broadleafcommerce/core/catalog/service/type/ProductType;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 483,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCriteriaForActiveProducts",
      "description": "(Ljava/util/Date;)Ljavax/persistence/criteria/CriteriaQuery;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 671,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)V",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 477,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveProductIds",
      "description": "(Ljava/lang/Long;I)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 552,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readActiveProductsByCategoryInternal",
      "description": "(Ljava/lang/Long;Ljava/util/Date;II)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 442,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachActiveRestriction",
      "description": "(Ljava/util/Date;Ljavax/persistence/criteria/Path;Ljavax/persistence/criteria/Path;Ljava/util/List;)V",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 297,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductsByCategory",
      "description": "(Ljava/lang/Long;II)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 465,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductsByName",
      "description": "(Ljava/lang/String;II)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 160,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFilteredActiveProductsByQuery",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 194,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readActiveProductsByCategory",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 172,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCountAllActiveProducts",
      "description": "()Ljava/lang/Long;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 632,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findProductByURI",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 510,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFilteredActiveProductsByCategory",
      "description": "(Ljava/lang/Long;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 247,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readActiveProductsByCategoryInternal",
      "description": "(Ljava/lang/Long;Ljava/util/Date;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 183,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductByExternalId",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveProductsInternal",
      "description": "(Ljava/util/Date;)Ljava/util/List;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 622,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCountAllActiveProductsInternal",
      "description": "(Ljava/util/Date;)Ljava/lang/Long;",
      "class": "ProductDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductDaoImpl.java",
      "line-number": 644,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrdersForCustomer",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 204,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readBatchOrders",
      "description": "(IILjava/util/List;)Ljava/util/List;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 139,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "releaseLock",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Z",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 416,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderByOrderNumber",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 315,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrdersForCustomersInDateRange",
      "description": "(Ljava/util/List;Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 343,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "refresh",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 276,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderById",
      "description": "(Ljava/lang/Long;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDatabaseOrderLockSessionAffinity",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 445,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readNamedOrderForCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Ljava/lang/String;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 284,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 164,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrdersByIds",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderByIdIgnoreCache",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCartForCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 211,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderLockKey",
      "description": "()Ljava/lang/String;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 441,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readNumberOfOrders",
      "description": "()Ljava/lang/Long;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 465,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1L",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updatePrices",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 365,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrdersForCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Lorg/broadleafcommerce/core/order/service/type/OrderStatus;)Ljava/util/List;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 191,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrdersByEmail",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 454,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createNewCartForCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 227,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrdersByDateRange",
      "description": "(Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 327,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "acquireLock",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Z",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 374,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "submitOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 263,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDatabaseOrderLockTimeToLive",
      "description": "()Ljava/lang/Long;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 449,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1L",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 269,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderByExternalId",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 171,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isSolrCloudMode",
      "description": "()Z",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 289,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAdminServer",
      "description": "()Lorg/apache/solr/client/solrj/SolrClient;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 253,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getReindexCollectionName",
      "description": "()Ljava/lang/String;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 747,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSiteCollectionName",
      "description": "(Lorg/broadleafcommerce/common/site/domain/Site;)Ljava/lang/String;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 673,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCollectionIfNotExist",
      "description": "(Lorg/apache/solr/client/solrj/impl/CloudSolrClient;Ljava/lang/String;)V",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 630,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineCoreName",
      "description": "(Lorg/apache/solr/client/solrj/impl/HttpSolrClient;)Ljava/lang/String;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 758,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createAliasIfNotExist",
      "description": "(Lorg/apache/solr/client/solrj/impl/CloudSolrClient;Ljava/lang/String;Ljava/lang/String;)V",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 643,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setServer",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSiteAliasName",
      "description": "(Lorg/broadleafcommerce/common/site/domain/Site;)Ljava/lang/String;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 661,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSiteServer",
      "description": "()Lorg/apache/solr/client/solrj/SolrClient;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 594,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getReindexServer",
      "description": "()Lorg/apache/solr/client/solrj/SolrClient;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 274,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQueryCollectionName",
      "description": "()Ljava/lang/String;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 736,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getServer",
      "description": "()Lorg/apache/solr/client/solrj/SolrClient;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 264,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSiteReindexServer",
      "description": "()Lorg/apache/solr/client/solrj/SolrClient;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 612,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSiteReindexCollectionName",
      "description": "(Lorg/broadleafcommerce/common/site/domain/Site;)Ljava/lang/String;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 697,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "destroy",
      "description": "()V",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 767,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "afterPropertiesSet",
      "description": "()V",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 480,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setReindexServer",
      "description": "(Lorg/apache/solr/client/solrj/SolrClient;)V",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 192,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSiteReindexAliasName",
      "description": "(Lorg/broadleafcommerce/common/site/domain/Site;)Ljava/lang/String;",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 685,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isSingleCoreMode",
      "description": "()Z",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 285,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSolrCloudNumShards",
      "description": "(I)V",
      "class": "SolrConfiguration",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrConfiguration.java",
      "line-number": 732,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addAddedOfferCode",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 337,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAdditionalOfferInformation",
      "description": "(Ljava/util/Map;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 282,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 112,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setEmailAddress",
      "description": "(Ljava/lang/String;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 272,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateSubTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 376,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCurrency",
      "description": "(Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 362,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCandidateOrderOffers",
      "description": "(Ljava/util/List;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSubmitDate",
      "description": "(Ljava/util/Date;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 177,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAuditable",
      "description": "(Lorg/broadleafcommerce/common/audit/Auditable;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setStatus",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/OrderStatus;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 132,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderAttributes",
      "description": "(Ljava/util/Map;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 347,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSubTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeItemPrices",
      "description": "()Z",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 391,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updatePrices",
      "description": "()Z",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 322,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTaxOverride",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 416,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSubTotal",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 92,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 187,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setId",
      "description": "(Ljava/lang/Long;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 62,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalFulfillmentCharges",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 386,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 122,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTaxOverride",
      "description": "()Ljava/lang/Boolean;",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 411,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "null",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFulfillmentGroups",
      "description": "(Ljava/util/List;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalShipping",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 197,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderMessages",
      "description": "(Ljava/util/List;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 406,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addOfferCode",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 332,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderNumber",
      "description": "(Ljava/lang/String;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 262,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderItems",
      "description": "(Ljava/util/List;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 142,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "assignOrderItemsFinalPrice",
      "description": "()V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPayments",
      "description": "(Ljava/util/List;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 207,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setName",
      "description": "(Ljava/lang/String;)V",
      "class": "NullOrderImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "NullOrderImpl.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findRelatedQualifierRoot",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 106,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPromotableItemMap",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Ljava/util/Map;",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 386,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeUnmatchedQualifiers",
      "description": "(Ljava/util/Map;Ljava/util/Iterator;)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 499,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeUnmatchedPriceDetails",
      "description": "(Ljava/util/Map;Ljava/util/Iterator;)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 488,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "itemOfferCanBeApplied",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Ljava/util/List;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 119,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updatePriceDetail",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 423,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sortQualifierItemDetails",
      "description": "(Ljava/util/List;Z)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 87,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAdjustmentsForItemPriceDetails",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Ljava/util/List;)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 296,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildOrderItemList",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 365,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markTargetsForOfferPriceData",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/order/domain/OrderItem;ZLorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/offer/domain/OfferPriceData;Ljava/util/List;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 200,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markQualifiersForCriteria",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Ljava/util/List;)I",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 139,
      "classification": "tested",
      "detected": [
        "0",
        "1"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markTargetsForCriteria",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/order/domain/OrderItem;ZLorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Ljava/util/List;I)I",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 168,
      "classification": "tested",
      "detected": [
        "0",
        "1"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyOrderItemAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 358,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildItemDetailAdjustmentMap",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;)Ljava/util/Map;",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 395,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "adjustmentIsNotGoodEnoughToBeApplied",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 341,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsQualifyingSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/util/HashMap;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 509,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isAddOnOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 321,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markRelatedQualifiersAndTargetsForItemCriteria",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/order/domain/dto/OrderItemHolder;Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/processor/ItemOfferMarkTargets;)I",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 238,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPromotableItemComparator",
      "description": "(Z)Ljava/util/Comparator;",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 91,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsTargetSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/util/HashMap;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 518,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateItemAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OrderItemPriceDetailAdjustment;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetailAdjustment;)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 479,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sortTargetItemDetails",
      "description": "(Ljava/util/List;Z)V",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 82,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsProvidedSubtotalRequirement",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/util/HashMap;Lorg/broadleafcommerce/common/money/Money;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 526,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/domain/Offer;)Z",
      "class": "OfferServiceUtilitiesImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 549,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "meetsItemQualifierSubtotal",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/CandidatePromotionItems;)Z",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 145,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findQualifyingItemForPriceData",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferPriceData;Ljava/util/List;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeOutOfDateOffers",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 457,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "executeExpression",
      "description": "(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/Boolean;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 292,
      "classification": "tested",
      "detected": [
        "null",
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "usePriceBeforeAdjustments",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 302,
      "classification": "tested",
      "detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeInvalidRequestOffers",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 356,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterOffers",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/profile/core/domain/Customer;)Ljava/util/List;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 345,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToOrderItems",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/util/List;)Lorg/broadleafcommerce/core/offer/service/discount/CandidatePromotionItems;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 87,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeTimePeriodOffers",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 407,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeQuantities",
      "description": "(Ljava/util/List;)V",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 323,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeInvalidCustomerOffers",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/profile/core/domain/Customer;)Ljava/util/List;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 526,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkForItemRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/CandidatePromotionItems;Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Ljava/util/List;Z)V",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 211,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToRequestDTO",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/common/RequestDTO;)Z",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 376,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isEmpty",
      "description": "(Ljava/util/Collection;)Z",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 137,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOrderItemMeetOfferRequirement",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Z",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 262,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToCustomer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/profile/core/domain/Customer;)Z",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 548,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addChildOrderItemsToCandidates",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/CandidatePromotionItems;Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)V",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 240,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearAllNonFinalizedQuantities",
      "description": "(Ljava/util/List;)V",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 312,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "dateToCalendar",
      "description": "(Ljava/util/Date;Ljava/util/TimeZone;)Ljava/util/Calendar;",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 500,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "splitDetailsIfNecessary",
      "description": "(Ljava/util/List;)V",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 335,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasPositiveValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)Z",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 141,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToTimePeriod",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Z",
      "class": "AbstractBaseProcessor",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 422,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPromotableOrderItemsList",
      "description": "()Ljava/util/List;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 131,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountableOrderItems",
      "description": "()Ljava/util/List;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 104,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateSubtotalWithAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 324,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllPromotableOrderItemPriceDetails",
      "description": "()Ljava/util/List;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 275,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateItemAdjustmentTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 266,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllCandidateFulfillmentOfferAdjustments",
      "description": "()V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 205,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllCandidateOfferAdjustments",
      "description": "()V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 186,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateSubtotalWithoutAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 315,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderSubTotalToPriceWithAdjustments",
      "description": "()V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 85,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllOrderItems",
      "description": "()Ljava/util/List;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 91,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createExistingOrderAdjustments",
      "description": "()V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 66,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isHasOrderAdjustments",
      "description": "()Z",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 171,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountableOrderItems",
      "description": "(Z)Ljava/util/List;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 110,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateRuleVariables",
      "description": "(Ljava/util/Map;)V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 211,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianItemOfferApplied",
      "description": "()Z",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 237,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianOrderOfferApplied",
      "description": "()Z",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 227,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllCandidateItemOfferAdjustments",
      "description": "()V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 198,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addPromotableOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Ljava/util/List;)V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 154,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addCandidateOrderAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderAdjustment;)V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 181,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrderSubTotalToPriceWithoutAdjustments",
      "description": "()V",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 79,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianFgOfferApplied",
      "description": "()Z",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 247,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianOfferApplied",
      "description": "()Z",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 222,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canApplyOrderOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;)Z",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 301,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isNotCombinableOrderOfferApplied",
      "description": "()Z",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 291,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentGroups",
      "description": "()Ljava/util/List;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 160,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateOrderAdjustmentTotal",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderImpl.java",
      "line-number": 257,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupStateRate",
      "description": "(Ljava/util/Map;Lorg/broadleafcommerce/profile/core/domain/State;)Ljava/lang/Double;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 197,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1.0",
        "0.0",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleFulfillmentGroupFeeTaxes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)V",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isItemTaxable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;)Z",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 273,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineTaxRateForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Ljava/math/BigDecimal;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 339,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleFulfillmentGroupItemTaxes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)V",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 100,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupCountryRate",
      "description": "(Ljava/util/Map;Lorg/broadleafcommerce/profile/core/domain/Country;)Ljava/lang/Double;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 236,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0.0",
        "1.0",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineItemTaxRate",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Address;)Ljava/math/BigDecimal;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 290,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findExistingTaxDetail",
      "description": "(Ljava/util/List;)Lorg/broadleafcommerce/core/order/domain/TaxDetail;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 137,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupCityRate",
      "description": "(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 180,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1.0",
        "0.0",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupStateRate",
      "description": "(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 220,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1.0",
        "0.0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyTaxFactor",
      "description": "(Ljava/util/List;Ljava/math/BigDecimal;Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFeeTaxable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupFee;)Z",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 277,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canRespond",
      "description": "(Lorg/broadleafcommerce/common/config/domain/ModuleConfiguration;)Z",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupPostalCodeRate",
      "description": "(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Double;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 164,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "0.0",
        "1.0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTaxForOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/config/domain/ModuleConfiguration;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleFulfillmentGroupTaxes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)V",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupCountryRate",
      "description": "(Ljava/util/Map;Lorg/broadleafcommerce/common/i18n/domain/ISOCountry;)Ljava/lang/Double;",
      "class": "SimpleTaxProvider",
      "package": "org/broadleafcommerce/core/pricing/service/tax/provider",
      "file-name": "SimpleTaxProvider.java",
      "line-number": 259,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "0.0",
        "1.0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLocalePrefix",
      "description": "()Ljava/lang/String;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 319,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildQueryFieldsString",
      "description": "(Lorg/apache/solr/client/solrj/SolrQuery;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/lang/String;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 329,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSearchFacets",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/util/List;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 426,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createSearchContextDTO",
      "description": "()Lorg/broadleafcommerce/core/search/service/solr/SearchContextDTO;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 393,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryFilter",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/lang/String;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 308,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPagingAttributes",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchResult;ILorg/broadleafcommerce/core/search/domain/SearchCriteria;)V",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 529,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProducts",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 543,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryFacets",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/util/List;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 442,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSearchResults",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Lorg/broadleafcommerce/core/search/domain/SearchResult;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 156,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findExplicitSearchResultsByCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Lorg/broadleafcommerce/core/search/domain/SearchResult;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 127,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDefaultSort",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/lang/String;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 300,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSolrQueryMethod",
      "description": "()Lorg/apache/solr/client/solrj/SolrRequest$METHOD;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 650,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSearchResults",
      "description": "(Ljava/lang/String;Ljava/util/List;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;Ljava/lang/String;[Ljava/lang/String;)Lorg/broadleafcommerce/core/search/domain/SearchResult;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 186,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachSortClause",
      "description": "(Lorg/apache/solr/client/solrj/SolrQuery;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;Ljava/lang/String;)V",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 462,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 660,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSearchFacets",
      "description": "()Ljava/util/List;",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 414,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterEmptyFacets",
      "description": "(Ljava/util/List;)V",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 283,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQueryFields",
      "description": "(Lorg/apache/solr/client/solrj/SolrQuery;Ljava/util/List;Lorg/broadleafcommerce/core/search/domain/IndexField;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)V",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 353,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldShowDebugQuery",
      "description": "()Z",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 122,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "modifySolrQuery",
      "description": "(Lorg/apache/solr/client/solrj/SolrQuery;Ljava/lang/String;Ljava/util/List;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;Ljava/lang/String;)V",
      "class": "SolrSearchServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 389,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPaymentGatewayType",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentGatewayType;)V",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 236,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 378,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSuccessfulTransactionAmountForType",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentTransactionType;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 299,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getGatewayType",
      "description": "()Lorg/broadleafcommerce/common/payment/PaymentGatewayType;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 231,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 176,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isConfirmed",
      "description": "()Z",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 321,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAuthorizeTransaction",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 277,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 365,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTransactionsForType",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentTransactionType;)Ljava/util/List;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 256,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTransactionAmountForType",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentTransactionType;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 288,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 401,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentType;)V",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 226,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "()Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 338,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStatus",
      "description": "()Lorg/broadleafcommerce/core/payment/service/type/OrderPaymentStatus;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 310,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 346,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addTransaction",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)V",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 251,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInitialTransaction",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 267,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 373,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 171,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFinalPayment",
      "description": "()Z",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 333,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getType",
      "description": "()Lorg/broadleafcommerce/common/payment/PaymentType;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 221,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "OrderPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "OrderPaymentImpl.java",
      "line-number": 355,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "'A'",
        "'\\40'",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "'A'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'\\40'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTaxable",
      "description": "()Ljava/lang/Boolean;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 164,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBaseRetailPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 361,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertToMoney",
      "description": "(Ljava/math/BigDecimal;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 391,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 205,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setBaseRetailPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 366,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 422,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 396,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateRetailPrice",
      "description": "()Z",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 305,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProduct",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 169,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateSaleAndRetailPrices",
      "description": "()Z",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 337,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateSalePrice",
      "description": "()Z",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 256,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSku",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 131,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isDiscountingAllowed",
      "description": "()Z",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 469,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrder",
      "description": "()Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 247,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setBundleOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/BundleOrderItem;)V",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 197,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findParentItem",
      "description": "()Lorg/broadleafcommerce/core/order/domain/BundleOrderItem;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 478,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)V",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 149,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOffers(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setBaseSalePrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 376,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 238,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 493,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBaseSalePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "DiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemImpl.java",
      "line-number": 371,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "incrementInventory",
      "description": "(Ljava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "decrementInventory",
      "description": "(Ljava/util/Map;Ljava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 189,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "retrieveQuantityAvailable",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)Ljava/lang/Integer;",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 85,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "incrementInventory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;I)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 113,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "incrementInventory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;ILjava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 229,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "decrementInventory",
      "description": "(Ljava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkSkuAvailability",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/catalog/domain/Sku;Ljava/lang/Integer;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 382,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildSkuInventoryMap",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/Map;",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 282,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "reconcileChangeOrderInventory",
      "description": "(Ljava/util/Map;Ljava/util/Map;Ljava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 267,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isAvailable",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;I)Z",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 95,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "incrementSku",
      "description": "(Ljava/util/Map;Ljava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 244,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "incrementInventory",
      "description": "(Ljava/util/Map;Ljava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 237,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkBasicAvailablility",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)Z",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "retrieveQuantitiesAvailable",
      "description": "(Ljava/util/Collection;)Ljava/util/Map;",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 90,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "decrementSku",
      "description": "(Ljava/util/Map;Ljava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 196,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "retrieveQuantitiesAvailable",
      "description": "(Ljava/util/Collection;Ljava/util/Map;)Ljava/util/Map;",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isAvailable",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;ILjava/util/Map;)Z",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "retrieveQuantityAvailable",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;Ljava/util/Map;)Ljava/lang/Integer;",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 129,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "decrementInventory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;I)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "decrementInventory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;ILjava/util/Map;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 181,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "invalidateSkuInventory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)V",
      "class": "InventoryServiceImpl",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 328,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllProducts",
      "description": "()Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 197,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllCategories",
      "description": "(II)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 174,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllSubCategories",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;II)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 224,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCategoriesByName",
      "description": "(Ljava/lang/String;II)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 140,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCategoriesByName",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readTotalCategoryCount",
      "description": "()Ljava/lang/Long;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 185,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "null",
        "1L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllSubCategories",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 214,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCountAllActiveProductsByCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/lang/Long;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 307,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCategoriesByIds",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCategoriesByNames",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 153,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllCategories",
      "description": "()Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 166,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readActiveSubCategoriesByCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 236,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrentDateAfterFactoringInDateResolution",
      "description": "()Ljava/util/Date;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 61,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)V",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 270,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllProducts",
      "description": "(II)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 204,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 276,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCategoryByExternalId",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCategoryById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readActiveSubCategoriesByCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;II)Ljava/util/List;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 247,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCategoryByURI",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "CategoryDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryDaoImpl.java",
      "line-number": 281,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertFieldName",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 244,
      "classification": "tested",
      "detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isProductRule",
      "description": "(Ljava/lang/String;)Z",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 86,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCustomFieldPropertyName",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 284,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "\"\"",
        "\"A\""
      ],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryIds",
      "description": "(Ljava/lang/String;)[Ljava/lang/Long;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 100,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "empty",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "empty",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertRuleToFilters",
      "description": "(Ljava/lang/String;)Ljava/util/Collection;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 121,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isWildCardSearch",
      "description": "(Ljava/lang/String;)Z",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 280,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convert",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/domain/SearchCriteria;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 70,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCustomFieldValue",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 337,
      "classification": "tested",
      "detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "parseMethod",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 264,
      "classification": "tested",
      "detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)",
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvertGetTypeFieldName(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isCategoryTargetingRule",
      "description": "(Ljava/lang/String;)Z",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 95,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRuleOrPropertyFromFunction",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "MvelToSearchCriteriaConversionServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "MvelToSearchCriteriaConversionServiceImpl.java",
      "line-number": 307,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "\"\"",
        "\"A\""
      ],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSkuByExternalId",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllSkus",
      "description": "()Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSkuByURI",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 245,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveSkusInternal",
      "description": "(IILjava/util/Date;)Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 270,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFirstSku",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 122,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveSkus",
      "description": "(II)Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 223,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)V",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 174,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCountAllActiveSkus",
      "description": "()Ljava/lang/Long;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 187,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCriteriaForActiveSkus",
      "description": "(Ljava/util/Date;Ljava/lang/Long;)Ljavax/persistence/criteria/CriteriaQuery;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 294,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCriteriaForActiveSkus",
      "description": "(Ljava/util/Date;)Ljavax/persistence/criteria/CriteriaQuery;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 289,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSkuByUpc",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 110,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveSkuFee",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/SkuFee;)Lorg/broadleafcommerce/core/catalog/domain/SkuFee;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCountAllActiveSkusInternal",
      "description": "(Ljava/util/Date;)Ljava/lang/Long;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 193,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSkuById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 92,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllSkus",
      "description": "(II)Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 135,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveSkusInternal",
      "description": "(Ljava/lang/Integer;Ljava/util/Date;Ljava/lang/Long;)Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 280,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSkusByIds",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 145,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllActiveSkus",
      "description": "(Ljava/lang/Integer;Ljava/lang/Long;)Ljava/util/List;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 229,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "SkuDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuDaoImpl.java",
      "line-number": 182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "verifyMaxCustomerUsageThreshold",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/offer/domain/Offer;)Z",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 514,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffersRetrievedFromCodes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/Map;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 607,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffersRetrievedFromCodes",
      "description": "(Ljava/util/List;Ljava/util/Set;)Ljava/util/Map;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 612,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveOfferCode",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)Lorg/broadleafcommerce/core/offer/domain/OfferCode;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 143,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeOutOfDateOfferCodes",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 299,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAndSaveFulfillmentGroupOffersToOrder",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 486,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUniqueOffersFromOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/Set;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 572,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildOfferCodeListForCustomer",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 228,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupAutomaticDeliveryOffers",
      "description": "()Ljava/util/List;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 283,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "duplicate",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 642,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteOfferCode",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)Ljava/lang/Boolean;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 631,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildOfferListForOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 197,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "verifyMaxCustomerUsageThreshold",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/offer/domain/OfferCode;)Z",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 548,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAndSaveOffersToOrder",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 383,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "verifyAdjustments",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Z",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 424,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupOfferByCode",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupAllOffersByCode",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 172,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "refreshOfferCodesIfApplicable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 320,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupOfferCustomerByCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Ljava/util/List;",
      "class": "OfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 273,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testBuildOfferListForOrder(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countUsesByCustomer",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 117,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countUsesByAccountOrCustomer",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 121,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1L",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOfferAuditsByOrderId",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 238,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferAudit;)V",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAuditById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/offer/domain/OfferAudit;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countUsesByCustomer",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 102,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countUsesByAccount",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "0L",
        "1L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countOfferCodeUses",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 192,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrentDateAfterFactoringInDateResolution",
      "description": "()Ljava/util/Date;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countUsesByAccount",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/lang/Long;Ljava/lang/Long;Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 112,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/OfferAudit;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferAudit;)Lorg/broadleafcommerce/core/offer/domain/OfferAudit;",
      "class": "OfferAuditDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferAuditDaoImpl.java",
      "line-number": 92,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalItemTaxableAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 212,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getHasProratedOrderAdjustments",
      "description": "()Z",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 330,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 338,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 262,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalItemAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 192,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 302,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertToMoney",
      "description": "(Ljava/math/BigDecimal;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 187,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setStatus",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentGroupStatusType;)V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 228,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProratedOrderAdjustmentAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 202,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStatus",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/FulfillmentGroupStatusType;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 223,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 257,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAssociations",
      "description": "()V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 233,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalTax",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 252,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalItemTaxableAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 217,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "cloneTaxDetails",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;)V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 322,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 278,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkCloneable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;)V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 266,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalItemAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 197,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProratedOrderAdjustmentAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupItemImpl.java",
      "line-number": 207,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionType;)V",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 208,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getType",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionType;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 203,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getErrorMessage",
      "description": "()Ljava/lang/String;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 341,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProductOptionValidationType",
      "description": "(Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionValidationType;)V",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 316,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLabel",
      "description": "()Ljava/lang/String;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 223,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 193,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUseInSkuGeneration",
      "description": "()Ljava/lang/Boolean;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 287,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductOptionValidationStrategyType",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionValidationStrategyType;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 297,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductOptionValidationType",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionValidationType;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 307,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProductOptionValidationStrategyType",
      "description": "(Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionValidationStrategyType;)V",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 302,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 387,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProducts",
      "description": "()Ljava/util/List;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 263,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 356,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProducts",
      "description": "(Ljava/util/List;)V",
      "class": "ProductOptionImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionImpl.java",
      "line-number": 272,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTags",
      "description": "(Ljava/lang/String;)V",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 178,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUrl",
      "description": "()Ljava/lang/String;",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 136,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "unwrap",
      "description": "(Ljava/lang/Class;)Ljava/lang/Object;",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 195,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 226,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isUnwrappableAs",
      "description": "(Ljava/lang/Class;)Z",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 190,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAltText",
      "description": "(Ljava/lang/String;)V",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 166,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTitle",
      "description": "()Ljava/lang/String;",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 148,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setUrl",
      "description": "(Ljava/lang/String;)V",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 142,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 203,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTags",
      "description": "()Ljava/lang/String;",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 172,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createEntityInstance",
      "description": "()V",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 183,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTitle",
      "description": "(Ljava/lang/String;)V",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 154,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAltText",
      "description": "()Ljava/lang/String;",
      "class": "CategoryMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryMediaXrefImpl.java",
      "line-number": 160,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasSkuOrIsNonDiscreteOI",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)Z",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 262,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "validateIfParentOrderItemExists",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)V",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 305,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "validate",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 102,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineProduct",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 151,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addSkuToCart",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/catalog/domain/Product;Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;)V",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 249,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canSellDefaultSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)Z",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 188,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasPrice",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/NonDiscreteOrderItemRequestDTO;)Z",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 289,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldValidateWithException",
      "description": "(ZZLjava/lang/String;Z)Z",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 225,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/lang/Long;Ljava/util/Map;Lorg/broadleafcommerce/core/workflow/ActivityMessages;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 166,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasSameCurrency",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;Lorg/broadleafcommerce/core/catalog/domain/Sku;)Z",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 293,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findMatchingSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/util/Map;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 229,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleIfNonDiscreteOI",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)V",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 279,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleIfNoSku",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/catalog/domain/Product;)V",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 266,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasQuantity",
      "description": "(Ljava/lang/Integer;)Z",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findMatchingSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/util/Map;Lorg/broadleafcommerce/core/workflow/ActivityMessages;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "ValidateAddRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "ValidateAddRequestActivity.java",
      "line-number": 192,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isUnwrappableAs",
      "description": "(Ljava/lang/Class;)Z",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 199,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAltText",
      "description": "()Ljava/lang/String;",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 169,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 212,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setUrl",
      "description": "(Ljava/lang/String;)V",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 151,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTags",
      "description": "(Ljava/lang/String;)V",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 187,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUrl",
      "description": "()Ljava/lang/String;",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 145,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createEntityInstance",
      "description": "()V",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 192,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTags",
      "description": "()Ljava/lang/String;",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 181,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "unwrap",
      "description": "(Ljava/lang/Class;)Ljava/lang/Object;",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 204,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAltText",
      "description": "(Ljava/lang/String;)V",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 175,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTitle",
      "description": "()Ljava/lang/String;",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTitle",
      "description": "(Ljava/lang/String;)V",
      "class": "SkuMediaXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuMediaXrefImpl.java",
      "line-number": 163,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateNumShippableFulfillmentGroups",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/lang/Integer;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 538,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItemToFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/FulfillmentGroupItemRequest;Z)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "collapseToOneShippableFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 233,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllFulfillmentGroupsFromOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 449,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getKey",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Address;Lorg/broadleafcommerce/core/order/domain/FulfillmentOption;Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;)Ljava/lang/String;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 432,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createFulfillmentGroupItemFromOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;I)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 439,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentGroupItemsForOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/OrderItem;)Ljava/util/List;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 183,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isShippable",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;)Z",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 498,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "matchFulfillmentGroupsToMultishipOptions",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 300,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllShippableFulfillmentGroups",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 524,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeOrderItemFromFullfillmentGroups",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 208,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFirstShippableFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 511,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItemToFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/FulfillmentGroupItemRequest;ZZ)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 127,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addFulfillmentGroupToOrder",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/FulfillmentGroupRequest;Z)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "FulfillmentGroupServiceImpl.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateProductOptionAttributes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Ljava/util/Map;)V",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "mergeOrderItemRequest",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/ConfigurableOrderItemRequest;Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 626,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createDynamicPriceDiscreteOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/DiscreteOrderItemRequest;Ljava/util/HashMap;)Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 267,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAdditionalOrderItemProperties",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 605,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createDiscreteOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/DiscreteOrderItemRequest;)Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 213,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildOrderItemFromDTO",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 493,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createBundleOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/BundleOrderItemRequest;)Lorg/broadleafcommerce/core/order/domain/BundleOrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 343,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateDiscreteOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItem;Lorg/broadleafcommerce/core/order/service/call/AbstractOrderItemRequest;)V",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 103,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequest;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 142,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createBundleOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/ProductBundleOrderItemRequest;)Lorg/broadleafcommerce/core/order/domain/BundleOrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 439,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createConfigurableOrderItemRequestFromProduct",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)Lorg/broadleafcommerce/core/order/service/call/ConfigurableOrderItemRequest;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 610,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findAllProductsInRequest",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/ConfigurableOrderItemRequest;)Ljava/util/Set;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 583,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "modifyOrderItemRequest",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/ConfigurableOrderItemRequest;)V",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 621,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createGiftWrapOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/GiftWrapOrderItemRequest;)Lorg/broadleafcommerce/core/order/domain/GiftWrapOrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 305,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "priceOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 578,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findAllChildProductsInRequest",
      "description": "(Ljava/util/List;)Ljava/util/Set;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 589,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createDiscreteOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/AbstractOrderItemRequest;)Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 250,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateDiscreteOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/order/service/call/DiscreteOrderItemRequest;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildOrderItemRequestDTOFromOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 445,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createBundleOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/ProductBundleOrderItemRequest;Z)Lorg/broadleafcommerce/core/order/domain/BundleOrderItem;",
      "class": "OrderItemServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderItemServiceImpl.java",
      "line-number": 380,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateTaxableAmountsOnItems",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 241,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderSavingsToDistribute",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 66,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUnitAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 285,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "fixItemTotalRoundingIssues",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/Map;)V",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 149,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sumTaxAmount",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 267,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "fixOrderSavingsRoundingIssues",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 212,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyDifferenceToAmount",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;JLorg/broadleafcommerce/common/money/Money;)J",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 296,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "0L",
        "1L"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "0L",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "1L",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateItemTotalAmount",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/Map;)V",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 112,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTotalPriceForAllFulfillmentItems",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 174,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countNumberOfUnits",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)J",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 275,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "1L",
        "0L"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "1L",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "0L",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 85,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sumItemAmount",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 259,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyTaxDifference",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;JLorg/broadleafcommerce/common/money/Money;)J",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 316,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyDifferenceToProratedAdj",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;JLorg/broadleafcommerce/common/money/Money;)J",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 306,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "distributeOrderSavingsToItems",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/math/BigDecimal;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentItemPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentItemPricingActivity.java",
      "line-number": 190,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateBillingAddressOnRequest",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)V",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 207,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transactionIsDetachedCreditRequest",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)Z",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 170,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCustomerOnRequest",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)V",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 214,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "enablePendingPaymentsOnCheckoutConfirmation",
      "description": "()Z",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 261,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "constructPendingTransaction",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentType;Lorg/broadleafcommerce/common/payment/PaymentGatewayType;Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 175,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "constructExpirationDate",
      "description": "(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/String;",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 235,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "confirmPendingTransaction",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "confirmTransaction",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getGatewayExpirationDateFormat",
      "description": "()Ljava/lang/String;",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 244,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCreditCardOnRequest",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)V",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 189,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderContainsMultipleFinalPayments",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Z",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 153,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "confirmTransactionInternal",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;Lorg/broadleafcommerce/core/workflow/ProcessContext;Z)Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateShippingAddressOnRequest",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)V",
      "class": "OrderPaymentConfirmationStrategyImpl",
      "package": "org/broadleafcommerce/core/checkout/service/strategy",
      "file-name": "OrderPaymentConfirmationStrategyImpl.java",
      "line-number": 221,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)V",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMinQuantity",
      "description": "()Ljava/lang/Integer;",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 90,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIsMultiSelect",
      "description": "()Ljava/lang/Boolean;",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProduct",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)V",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountsAllowed",
      "description": "()Ljava/lang/Boolean;",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 144,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "null",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQuantity",
      "description": "()Ljava/lang/Integer;",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getHasOverridenPrice",
      "description": "()Ljava/lang/Boolean;",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 122,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getHasConfigurationError",
      "description": "()Ljava/lang/Boolean;",
      "class": "ConfigurableOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "ConfigurableOrderItemRequest.java",
      "line-number": 133,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountableOrderItems",
      "description": "()Ljava/util/List;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 64,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateSaleAdjustmentPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 106,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeAdjustments",
      "description": "(Z)V",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 149,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSalePriceBeforeAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 97,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCandidateFulfillmentGroupAdjustments",
      "description": "()Ljava/util/List;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 209,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculatePriceWithAdjustments",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 230,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarianOfferApplied",
      "description": "()Z",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 239,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "chooseSaleOrRetailAdjustments",
      "description": "()V",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 127,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeZeroDollarAdjustments",
      "description": "(Z)V",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 172,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canApplyOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;)Z",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 214,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateRetailAdjustmentPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 114,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeRetailOnlyAdjustments",
      "description": "()V",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 158,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateRuleVariables",
      "description": "(Ljava/util/Map;)V",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 59,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculatePriceWithoutAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 195,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFinalizedPriceWithAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 189,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addCandidateFulfillmentGroupAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroupAdjustment;)V",
      "class": "PromotableFulfillmentGroupImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupImpl.java",
      "line-number": 204,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildRelativeCategoryURL",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/lang/String;",
      "class": "CatalogURLServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogURLServiceImpl.java",
      "line-number": 54,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildRelativeUrlWithParam",
      "description": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
      "class": "CatalogURLServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogURLServiceImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLastFragment",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "CatalogURLServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogURLServiceImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildRelativeProductURL",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/catalog/domain/Product;)Ljava/lang/String;",
      "class": "CatalogURLServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogURLServiceImpl.java",
      "line-number": 48,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryUrlFragment",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/lang/String;",
      "class": "CatalogURLServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogURLServiceImpl.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductUrlFragment",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)Ljava/lang/String;",
      "class": "CatalogURLServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogURLServiceImpl.java",
      "line-number": 78,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "toString",
      "description": "(I)Ljava/lang/String;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getString",
      "description": "(Ljava/lang/String;Ljava/lang/Object;I)Ljava/lang/String;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBuckets",
      "description": "()Ljava/util/List;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "get",
      "description": "(Ljava/lang/String;)Ljava/lang/Object;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 37,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInteger",
      "description": "(Ljava/lang/String;)Ljava/lang/Integer;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSubFacet",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/service/solr/SolrJSONFacet;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getString",
      "description": "(Ljava/lang/String;)Ljava/lang/String;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 62,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDouble",
      "description": "(Ljava/lang/String;)Ljava/lang/Double;",
      "class": "SolrJSONFacet",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacet.java",
      "line-number": 54,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1.0",
        "0.0",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "satisfiesMinQuantityCondition",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/workflow/ProcessContext;)Z",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 62,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMinQuantity",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/workflow/ProcessContext;)Ljava/lang/Integer;",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findMatchingSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/util/Map;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 184,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/lang/Long;Ljava/util/Map;Lorg/broadleafcommerce/core/workflow/ActivityMessages;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findMatchingSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/util/Map;Lorg/broadleafcommerce/core/workflow/ActivityMessages;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldValidateWithException",
      "description": "(ZZLjava/lang/String;Z)Z",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 180,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldUseSku",
      "description": "()Z",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 207,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineSku",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/workflow/ActivityMessages;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 111,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "minOrderQuantityCheckIsEnabled",
      "description": "()Z",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 203,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineProduct",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 95,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canSellDefaultSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)Z",
      "class": "OrderItemRequestValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service/workflow/service",
      "file-name": "OrderItemRequestValidationServiceImpl.java",
      "line-number": 143,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferInfo;)Lorg/broadleafcommerce/core/offer/domain/OfferInfo;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 143,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createFulfillmentGroupAdjustment",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/FulfillmentGroupAdjustment;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/ProratedOrderItemAdjustment;)Lorg/broadleafcommerce/core/offer/domain/ProratedOrderItemAdjustment;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 148,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderItemAdjustment",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/OrderItemAdjustment;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 104,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferInfo;)V",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 130,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 124,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCandidateFulfillmentGroupOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/CandidateFulfillmentGroupOffer;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 99,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOfferById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 138,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCandidateItemOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/CandidateItemOffer;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCandidateOrderOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/CandidateOrderOffer;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOfferInfo",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/OfferInfo;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllOffers",
      "description": "()Ljava/util/List;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 153,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrentDateAfterFactoringInDateResolution",
      "description": "()Ljava/util/Date;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 68,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderAdjustment",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/OrderAdjustment;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOffersByAutomaticDeliveryType",
      "description": "()Ljava/util/List;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 164,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderItemPriceDetailAdjustment",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/OrderItemPriceDetailAdjustment;",
      "class": "OfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferDaoImpl.java",
      "line-number": 109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getEntityType",
      "description": "()Lorg/broadleafcommerce/core/search/domain/FieldEntity;",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 139,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOverrideGeneratedPropertyName",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 164,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setEntityType",
      "description": "(Lorg/broadleafcommerce/core/search/domain/FieldEntity;)V",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 144,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTranslatable",
      "description": "()Ljava/lang/Boolean;",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 189,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false",
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 217,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQualifiedFieldName",
      "description": "()Ljava/lang/String;",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 124,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFriendlyName",
      "description": "()Ljava/lang/String;",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 179,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 232,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOverrideGeneratedPropertyName",
      "description": "()Ljava/lang/Boolean;",
      "class": "FieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldImpl.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMaxUses",
      "description": "()I",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 201,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 274,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "'\\40'",
        "'A'"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'\\40'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'A'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isUnlimitedUse",
      "description": "()Z",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 211,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 314,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 167,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 295,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 330,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 185,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMaxUses",
      "description": "(I)V",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 206,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isLimitedUse",
      "description": "()Z",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 216,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "OfferCodeImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferCodeImpl.java",
      "line-number": 284,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDefaultPageSize",
      "description": "()I",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "constructImageURLs",
      "description": "(Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/common/sitemap/wrapper/SiteMapURLWrapper;Lorg/broadleafcommerce/core/catalog/domain/Category;)V",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 137,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "constructSiteMapURLs",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/CategorySiteMapGeneratorConfiguration;Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/core/catalog/domain/Category;)V",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 113,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateUrl",
      "description": "(Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/core/catalog/domain/Category;I)Ljava/lang/String;",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 153,
      "classification": "tested",
      "detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canHandleSiteMapConfiguration",
      "description": "(Lorg/broadleafcommerce/common/sitemap/domain/SiteMapGeneratorConfiguration;)Z",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 69,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPageCountForCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/lang/Integer;",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 147,
      "classification": "partially-tested",
      "detected": [
        "0",
        "null"
      ],
      "not-detected": [
        "1"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateDate",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/util/Date;",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 162,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addSiteMapEntries",
      "description": "(Lorg/broadleafcommerce/common/sitemap/domain/SiteMapGeneratorConfiguration;Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;)V",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 75,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCategoryPaginationParam",
      "description": "()Ljava/lang/String;",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 186,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addCategorySiteMapEntries",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;ILorg/broadleafcommerce/core/catalog/domain/CategorySiteMapGeneratorConfiguration;Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;)V",
      "class": "CategorySiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CategorySiteMapGenerator.java",
      "line-number": 87,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsQualifyingSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;)Z",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 257,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterFulfillmentGroupLevelOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Ljava/util/List;Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 65,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "couldOfferApplyToFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Z",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 135,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateFulfillmentGroupTotal",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)V",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 119,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeTrailingNotCombinableFulfillmentGroupOffers",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 302,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCandidateFulfillmentGroupOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 158,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAllFulfillmentGroupOffers",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Z",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 168,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareAndAdjustFulfillmentGroupOffers",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Z)Z",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 265,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderMeetsSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;)Z",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 261,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQualifyGroupAcrossAllOrderItems",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Z",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterOffersByQualifyingAndSubtotalRequirements",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Ljava/util/List;)V",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 245,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyFulfillmentGroupOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;)V",
      "class": "FulfillmentGroupOfferProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "FulfillmentGroupOfferProcessorImpl.java",
      "line-number": 294,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRetailPriceValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 249,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFutureCredit",
      "description": "(Z)V",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 291,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 275,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFutureCredit",
      "description": "()Z",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 283,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 359,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 218,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/lang/String;)V",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 134,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 159,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setReason",
      "description": "(Ljava/lang/String;)V",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 187,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 200,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSalesPriceValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 262,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 308,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "()Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 213,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 234,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterCandidateSkusForArchivedStatus",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 179,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getProductIdsUsingProductOptionByIdQuery",
      "description": "(Ljava/lang/Long;Z)Ljavax/persistence/TypedQuery;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 245,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findAssignedProductOptionsByProductId",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countProductsUsingProductOptionById",
      "description": "(Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 228,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "0L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductOptionById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/catalog/domain/ProductOption;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachArchivalConditionIfPossible",
      "description": "(Ljava/lang/Class;Ljavax/persistence/criteria/Path;Ljavax/persistence/criteria/CriteriaBuilder;Ljava/util/List;)V",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 196,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findAssignedProductOptionsByProduct",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)Ljava/util/List;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSkuIdsForProductOptionValues",
      "description": "(Ljava/lang/Long;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)Ljava/util/List;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 139,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countAllowedValuesForProductOptionById",
      "description": "(Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findProductIdsUsingProductOptionById",
      "description": "(Ljava/lang/Long;II)Ljava/util/List;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 235,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readProductOptionValueById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/catalog/domain/ProductOptionValue;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllProductOptions",
      "description": "()Ljava/util/List;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveProductOption",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;)Lorg/broadleafcommerce/core/catalog/domain/ProductOption;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildSkuDomainPredicate",
      "description": "(Ljavax/persistence/criteria/CriteriaBuilder;Ljavax/persistence/criteria/Path;Ljava/util/List;)Ljavax/persistence/criteria/Predicate;",
      "class": "ProductOptionDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "ProductOptionDaoImpl.java",
      "line-number": 208,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "validateWithoutException",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;Ljava/lang/String;Lorg/broadleafcommerce/core/workflow/ActivityMessages;)V",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 126,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isAddOrNoneType",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;)Z",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isRequiredAttributeNotProvided",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;Ljava/lang/String;)Z",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "validate",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;Ljava/lang/String;)Ljava/lang/Boolean;",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 61,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isSubmitType",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;)Z",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 111,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "validateRegex",
      "description": "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "requiresValidation",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;Ljava/lang/String;)Z",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasProductOptionValidationStrategy",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOption;)Z",
      "class": "ProductOptionValidationServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "ProductOptionValidationServiceImpl.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lockInterruptibly",
      "description": "()V",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 337,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "tryLock",
      "description": "(JLjava/util/concurrent/TimeUnit;)Z",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 356,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "initialize",
      "description": "()V",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 537,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "tryLock",
      "description": "()Z",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 347,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canParticipate",
      "description": "()Z",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 577,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrentThreadLockPermits",
      "description": "()I",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 599,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "unlock",
      "description": "()V",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 291,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "newCondition",
      "description": "()Ljava/util/concurrent/locks/Condition;",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 370,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lockInternally",
      "description": "(J)Z",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 381,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lock",
      "description": "()V",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 281,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "currentThreadHoldsLock",
      "description": "()Z",
      "class": "ReentrantDistributedZookeeperLock",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 593,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMinimumRequiredTargetQuantity",
      "description": "()I",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 308,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "0",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateMaximumNumberOfUses",
      "description": "()I",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 169,
      "classification": "tested",
      "detected": [
        "1",
        "0"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasQualifyingItemCriteria",
      "description": "()Z",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 160,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resetUses",
      "description": "()V",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 253,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPotentialSavingsQtyOne",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 147,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getWeightedPercentSaved",
      "description": "()Ljava/math/BigDecimal;",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 268,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTargetQuantityForTieredOffer",
      "description": "()I",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 87,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "0",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addUse",
      "description": "()V",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 248,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMinimumTargetsRequired",
      "description": "(Ljava/lang/Integer;)V",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 293,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPotentialSavings",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 134,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateMaxUsesForItemCriteria",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Lorg/broadleafcommerce/core/offer/domain/Offer;)I",
      "class": "PromotableCandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateItemOfferImpl.java",
      "line-number": 187,
      "classification": "tested",
      "detected": [
        "0",
        "1"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "SearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetImpl.java",
      "line-number": 215,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetImpl.java",
      "line-number": 334,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRequiresAllDependentFacets",
      "description": "()Ljava/lang/Boolean;",
      "class": "SearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetImpl.java",
      "line-number": 289,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "null",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLabel",
      "description": "()Ljava/lang/String;",
      "class": "SearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetImpl.java",
      "line-number": 225,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getField",
      "description": "()Lorg/broadleafcommerce/core/search/domain/Field;",
      "class": "SearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetImpl.java",
      "line-number": 205,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFacetFieldType",
      "description": "()Ljava/lang/String;",
      "class": "SearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetImpl.java",
      "line-number": 210,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "SearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetImpl.java",
      "line-number": 309,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "mergeDetails",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)V",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 188,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateRuleVariables",
      "description": "(Ljava/util/Map;)V",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 103,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "()Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 164,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 7,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAllItemAdjustments",
      "description": "()V",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 169,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createNewDetail",
      "description": "(I)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 247,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resetPriceDetails",
      "description": "()V",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 62,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTotalAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 239,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "initializePriceDetails",
      "description": "()V",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 67,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrentBasePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 146,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "mergeLikeDetails",
      "description": "()V",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 200,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isOrderItemContainer",
      "description": "()Z",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 115,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderItemContainer",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderItemContainer;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriceBeforeAdjustments",
      "description": "(Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 139,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTotalWithoutAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 234,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTotalWithAdjustments",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOrderItemImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemImpl.java",
      "line-number": 225,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isSaveToken",
      "description": "()Z",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 265,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 294,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 276,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "'\\40'",
        "'A'"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'\\40'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'A'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 203,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 300,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSaveToken",
      "description": "(Z)V",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 270,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderPayment",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/OrderPayment;",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 170,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 286,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentTransactionType;)V",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 198,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 208,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getType",
      "description": "()Lorg/broadleafcommerce/common/payment/PaymentTransactionType;",
      "class": "PaymentTransactionImpl",
      "package": "org/broadleafcommerce/core/payment/domain",
      "file-name": "PaymentTransactionImpl.java",
      "line-number": 193,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readNextFulfillmentGroupSequnceForOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/lang/Integer;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createDefault",
      "description": "()Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readPartiallyFulfilledFulfillmentGroups",
      "description": "(II)Ljava/util/List;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 102,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createFulfillmentGroupFee",
      "description": "()Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupFee;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 85,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readUnfulfilledFulfillmentGroups",
      "description": "(II)Ljava/util/List;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 92,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFulfillmentGroupById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFulfillmentGroupsByStatus",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentGroupStatusType;II)Ljava/util/List;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 140,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)V",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFulfillmentGroupsByStatus",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentGroupStatusType;IIZ)Ljava/util/List;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 124,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readDefaultFulfillmentGroupForOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupImpl;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 55,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readUnprocessedFulfillmentGroups",
      "description": "(II)Ljava/util/List;",
      "class": "FulfillmentGroupDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupDaoImpl.java",
      "line-number": 113,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "executeCommandInternalNoDefaultCommandType",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/indexer/SolrUpdateCommand;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByIds",
      "description": "(Ljava/lang/String;Ljava/util/List;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 249,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addDocument",
      "description": "(Ljava/lang/String;Lorg/apache/solr/common/SolrInputDocument;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 175,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByQuery",
      "description": "(Ljava/lang/String;Ljava/lang/String;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 213,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "executeCommandInternal",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/indexer/IncrementalUpdateCommand;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollback",
      "description": "(Ljava/lang/String;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "executeCommandInternal",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/indexer/IncrementalUpdateCommand;Ljava/lang/String;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteByQueries",
      "description": "(Ljava/lang/String;Ljava/util/List;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 233,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBackgroundCollectionName",
      "description": "()Ljava/lang/String;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 267,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getForegroundCollectionName",
      "description": "()Ljava/lang/String;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 262,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addDocuments",
      "description": "(Ljava/lang/String;Ljava/util/List;)V",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 193,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditOrderItemPriceDetailAdjustments",
      "description": "()Ljava/util/List;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 243,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "()Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 178,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 22,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 283,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setUseSalePrice",
      "description": "(Z)V",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 270,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 183,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUseSalePrice",
      "description": "()Z",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 261,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 22,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 275,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalAdjustedPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 255,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRoundingModeForAdj",
      "description": "()Ljava/math/RoundingMode;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 220,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.order.domain.TestOrderImplPanktiGen",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditTotalAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 249,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFutureCreditAdjustmentValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemPriceDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemPriceDetailImpl.java",
      "line-number": 202,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "containsSuccessfulType",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;Lorg/broadleafcommerce/common/payment/PaymentTransactionType;)Z",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineComplete",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Z",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determinePartiallyComplete",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Z",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineUnconfirmed",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Z",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 115,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determinePending",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Z",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineFullyCaptured",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Z",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineAuthorized",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Z",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineOrderPaymentStatus",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Lorg/broadleafcommerce/core/payment/service/type/OrderPaymentStatus;",
      "class": "OrderPaymentStatusServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentStatusServiceImpl.java",
      "line-number": 35,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearThreadCache",
      "description": "()V",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeFromThreadCache",
      "description": "(Ljava/lang/Long;)V",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 92,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSingleField",
      "description": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 132,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getThreadCache",
      "description": "()Ljava/util/Map;",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDynamicSkuPrices",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuPrices;",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 96,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasDynamicPricing",
      "description": "()Z",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 76,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 24,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuPricingConsiderationContext",
      "description": "()Ljava/util/HashMap;",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 48,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 24,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "endPricingConsideration",
      "description": "()V",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 68,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "startPricingConsideration",
      "description": "()V",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuPricingService",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuPricingService;",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isPricingConsiderationActive",
      "description": "()Z",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSkuPricingService",
      "description": "(Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuPricingService;)V",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 60,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSkuPricingConsiderationContext",
      "description": "(Ljava/util/HashMap;)V",
      "class": "SkuPricingConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuPricingConsiderationContext.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getEmailForCart",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/lang/String;",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 274,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCartsToPurgeLength",
      "description": "(Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CartPurgeParams;Ljava/util/List;)Ljava/lang/Long;",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 240,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1L",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCartsToPurge",
      "description": "(Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CartPurgeParams;IILjava/util/List;)Ljava/util/List;",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 222,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCustomersToPurge",
      "description": "(Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CustomerPurgeParams;IILjava/util/List;)Ljava/util/List;",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 315,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCustomersInErrorToIgnore",
      "description": "(Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CustomerPurgeParams;)Ljava/util/Set;",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 302,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "notifyCart",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 256,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCartsInErrorToIgnore",
      "description": "(Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CartPurgeParams;)Ljava/util/Set;",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 209,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCustomersToPurgeLength",
      "description": "(Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CustomerPurgeParams;Ljava/util/List;)Ljava/lang/Long;",
      "class": "ResourcePurgeServiceImpl",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 330,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readNumberOfOrderItems",
      "description": "()Ljava/lang/Long;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderItemQualifier",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderItemQualifier;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 115,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readBatchOrderItems",
      "description": "(IILjava/util/List;)Ljava/util/List;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 160,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPersonalMessage",
      "description": "()Lorg/broadleafcommerce/core/order/domain/PersonalMessage;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 98,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "initializeOrderItemPriceDetails",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/OrderItemType;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderItemsForCustomersInDateRange",
      "description": "(Ljava/util/List;Ljava/util/Date;Ljava/util/Date;)Ljava/util/List;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 130,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 75,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderItemPriceDetail",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 110,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderItemById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "OrderItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderItemDaoImpl.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeRetailAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 88,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 98,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeRetailAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 68,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "itemMatchesOfferPriceData",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferPriceData;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Z",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineOfferUnitValue",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/lang/Integer;)Ljava/math/BigDecimal;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 189,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findMatchingOfferPriceData",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Lorg/broadleafcommerce/core/offer/domain/OfferPriceData;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 138,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeSalesAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 93,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;Z)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 78,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;Ljava/math/BigDecimal;Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;Lorg/broadleafcommerce/core/offer/service/type/OfferDiscountType;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotionRounding;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 148,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateSavingsForOrderItem",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;I)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 107,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeDiscountVariables",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;I)Lorg/broadleafcommerce/common/util/Tuple;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 123,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeSalesAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableOfferUtilityImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOfferUtilityImpl.java",
      "line-number": 73,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableCandidateOrderOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/domain/Offer;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 87,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableCandidateFulfillmentGroupOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;Lorg/broadleafcommerce/core/offer/domain/Offer;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 158,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableOrderAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/common/money/Money;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderAdjustment;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "()V",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableOrderItemPriceDetailAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetailAdjustment;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 143,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Z)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 112,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 152,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToFulfillmentGroup(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 82,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableCandidateItemOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/domain/Offer;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 123,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableFulfillmentGroupAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateFulfillmentGroupOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroup;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableFulfillmentGroupAdjustment;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 165,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableOrderItemPriceDetail",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;I)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 118,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 18,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableOrderAdjustment",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderAdjustment;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 99,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPromotableCandidateOrderOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/domain/Offer;Lorg/broadleafcommerce/common/money/Money;)Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;",
      "class": "PromotableItemFactoryImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableItemFactoryImpl.java",
      "line-number": 93,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 168,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 189,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 194,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 151,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 227,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFutureCredit",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 202,
      "classification": "partially-tested",
      "detected": [
        "true",
        "null"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 184,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testRoundingRequired(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveEqualItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/lang/String;)V",
      "class": "OrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderAdjustmentImpl.java",
      "line-number": 121,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildCartQuery",
      "description": "([Ljava/lang/String;[Lorg/broadleafcommerce/core/order/service/type/OrderStatus;Ljava/util/Date;Ljava/lang/Boolean;Ljava/lang/Class;Ljava/util/List;)Ljavax/persistence/TypedQuery;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 163,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCustomers",
      "description": "(Ljava/util/Date;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/util/List;)Ljava/util/List;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 80,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCustomers",
      "description": "(Ljava/util/Date;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;IILjava/util/List;)Ljava/util/List;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCustomersCount",
      "description": "(Ljava/util/Date;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/util/List;)Ljava/lang/Long;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 95,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCartsCount",
      "description": "([Ljava/lang/String;[Lorg/broadleafcommerce/core/order/service/type/OrderStatus;Ljava/util/Date;Ljava/lang/Boolean;Ljava/util/List;)Ljava/lang/Long;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 74,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildCustomerQuery",
      "description": "(Ljava/util/Date;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Boolean;Ljava/lang/Class;Ljava/util/List;)Ljavax/persistence/TypedQuery;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCarts",
      "description": "([Ljava/lang/String;[Lorg/broadleafcommerce/core/order/service/type/OrderStatus;Ljava/util/Date;Ljava/lang/Boolean;Ljava/util/List;)Ljava/util/List;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyLimitedInClause",
      "description": "(Ljava/util/List;Ljavax/persistence/criteria/CriteriaBuilder;Ljavax/persistence/criteria/Root;Ljava/util/List;)V",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 153,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCarts",
      "description": "([Ljava/lang/String;[Lorg/broadleafcommerce/core/order/service/type/OrderStatus;Ljava/util/Date;Ljava/lang/Boolean;IILjava/util/List;)Ljava/util/List;",
      "class": "ResourcePurgeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "ResourcePurgeDaoImpl.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/OfferDiscountType;",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 225,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 325,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 269,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIdentifierType",
      "description": "()Lorg/broadleafcommerce/core/offer/service/type/OfferPriceDataIdentifierType;",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 202,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setIdentifierType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferPriceDataIdentifierType;)V",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 210,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDiscountType",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferDiscountType;)V",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 233,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 280,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 290,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "OfferPriceDataImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferPriceDataImpl.java",
      "line-number": 259,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "'A'",
        "'\\40'"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'A'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'\\40'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 136,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalTax",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 186,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 141,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 229,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 196,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 201,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTotalTax",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 191,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTaxable",
      "description": "()Ljava/lang/Boolean;",
      "class": "FulfillmentGroupFeeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentGroupFeeImpl.java",
      "line-number": 166,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStartDate",
      "description": "()Ljava/util/Date;",
      "class": "PromotionMessageImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/domain",
      "file-name": "PromotionMessageImpl.java",
      "line-number": 258,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "PromotionMessageImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/domain",
      "file-name": "PromotionMessageImpl.java",
      "line-number": 352,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriority",
      "description": "()I",
      "class": "PromotionMessageImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/domain",
      "file-name": "PromotionMessageImpl.java",
      "line-number": 248,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "PromotionMessageImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/domain",
      "file-name": "PromotionMessageImpl.java",
      "line-number": 300,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "'\\40'",
        "'A'",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "'\\40'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'A'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "PromotionMessageImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/domain",
      "file-name": "PromotionMessageImpl.java",
      "line-number": 310,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "PromotionMessageImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/domain",
      "file-name": "PromotionMessageImpl.java",
      "line-number": 337,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "PromotionMessageImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/domain",
      "file-name": "PromotionMessageImpl.java",
      "line-number": 318,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQuantity",
      "description": "()Ljava/lang/Integer;",
      "class": "OfferQualifyingCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferQualifyingCriteriaXrefImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMatchRule",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferQualifyingCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferQualifyingCriteriaXrefImpl.java",
      "line-number": 137,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferQualifyingCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferQualifyingCriteriaXrefImpl.java",
      "line-number": 172,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferQualifyingCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferQualifyingCriteriaXrefImpl.java",
      "line-number": 158,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setQuantity",
      "description": "(Ljava/lang/Integer;)V",
      "class": "OfferQualifyingCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferQualifyingCriteriaXrefImpl.java",
      "line-number": 125,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMatchRule",
      "description": "()Ljava/lang/String;",
      "class": "OfferQualifyingCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferQualifyingCriteriaXrefImpl.java",
      "line-number": 131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createEntityInstance",
      "description": "()V",
      "class": "OfferQualifyingCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferQualifyingCriteriaXrefImpl.java",
      "line-number": 142,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 230,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 178,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 246,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSalesPriceValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 217,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRetailPriceValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 204,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 189,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 184,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/lang/String;)V",
      "class": "OrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OrderItemAdjustmentImpl.java",
      "line-number": 124,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMatchRule",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferTargetCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferTargetCriteriaXrefImpl.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferTargetCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferTargetCriteriaXrefImpl.java",
      "line-number": 167,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMatchRule",
      "description": "()Ljava/lang/String;",
      "class": "OfferTargetCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferTargetCriteriaXrefImpl.java",
      "line-number": 140,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createEntityInstance",
      "description": "()V",
      "class": "OfferTargetCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferTargetCriteriaXrefImpl.java",
      "line-number": 151,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferTargetCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferTargetCriteriaXrefImpl.java",
      "line-number": 182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setQuantity",
      "description": "(Ljava/lang/Integer;)V",
      "class": "OfferTargetCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferTargetCriteriaXrefImpl.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getQuantity",
      "description": "()Ljava/lang/Integer;",
      "class": "OfferTargetCriteriaXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferTargetCriteriaXrefImpl.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDimensionUnitOfMeasure",
      "description": "(Lorg/broadleafcommerce/common/util/DimensionUnitOfMeasureType;)V",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 150,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 177,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDimensionString",
      "description": "()Ljava/lang/String;",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setContainer",
      "description": "(Lorg/broadleafcommerce/common/vendor/service/type/ContainerShapeType;)V",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 140,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDimensionUnitOfMeasure",
      "description": "()Lorg/broadleafcommerce/common/util/DimensionUnitOfMeasureType;",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getContainer",
      "description": "()Lorg/broadleafcommerce/common/vendor/service/type/ContainerShapeType;",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 136,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSize",
      "description": "()Lorg/broadleafcommerce/common/vendor/service/type/ContainerSizeType;",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 126,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSize",
      "description": "(Lorg/broadleafcommerce/common/vendor/service/type/ContainerSizeType;)V",
      "class": "Dimension",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Dimension.java",
      "line-number": 130,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readIndexStatus",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 305,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleUpdateIndexStatus",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;Z)V",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateDeadEventSegment",
      "description": "(Lorg/w3c/dom/Document;Lorg/w3c/dom/Element;Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;Z)V",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 250,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateIndexSegment",
      "description": "(Lorg/w3c/dom/Document;Lorg/w3c/dom/Element;Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)V",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 180,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleUpdateIndexStatus",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)V",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 99,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearNode",
      "description": "(Lorg/w3c/dom/Element;Ljava/lang/String;)V",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 284,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "purgeDeadEvents",
      "description": "(Lorg/w3c/dom/Document;Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)V",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 363,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStatusFile",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/SolrSearchServiceImpl;)Ljava/io/File;",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 394,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStatusDirectory",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/SolrSearchServiceImpl;)Ljava/lang/String;",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 400,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateErrorSegment",
      "description": "(Lorg/w3c/dom/Document;Lorg/w3c/dom/Element;Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)V",
      "class": "FileSystemSolrIndexStatusProviderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "FileSystemSolrIndexStatusProviderImpl.java",
      "line-number": 219,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "validateResponseAndConfig",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/common/payment/service/PaymentGatewayConfiguration;)V",
      "class": "DefaultCustomerPaymentGatewayService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultCustomerPaymentGatewayService.java",
      "line-number": 124,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteCustomerPaymentFromResponseDTO",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/common/payment/service/PaymentGatewayConfiguration;)V",
      "class": "DefaultCustomerPaymentGatewayService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultCustomerPaymentGatewayService.java",
      "line-number": 115,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateCustomerPaymentFromResponseDTO",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/common/payment/service/PaymentGatewayConfiguration;)Ljava/lang/Long;",
      "class": "DefaultCustomerPaymentGatewayService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultCustomerPaymentGatewayService.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCustomerPayment",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/CustomerPayment;Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/common/payment/service/PaymentGatewayConfiguration;)V",
      "class": "DefaultCustomerPaymentGatewayService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultCustomerPaymentGatewayService.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCustomerPaymentFromResponseDTO",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/common/payment/service/PaymentGatewayConfiguration;)Ljava/lang/Long;",
      "class": "DefaultCustomerPaymentGatewayService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultCustomerPaymentGatewayService.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isNewDefaultPaymentMethod",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;)Z",
      "class": "DefaultCustomerPaymentGatewayService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultCustomerPaymentGatewayService.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIndexFieldTypesByAbbreviation",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 143,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIndexFieldTypes",
      "description": "(Lorg/broadleafcommerce/core/search/domain/solr/FieldType;)Ljava/util/List;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 201,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllIndexFieldsByFieldId",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readIndexFieldByAbbreviationAndEntityType",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/search/domain/FieldEntity;)Lorg/broadleafcommerce/core/search/domain/IndexField;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 225,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFieldsByEntityType",
      "description": "(Lorg/broadleafcommerce/core/search/domain/FieldEntity;)Ljava/util/List;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIndexFieldTypesByAbbreviationAndEntityType",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/search/domain/FieldEntity;)Ljava/util/List;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 148,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readIndexFieldByFieldId",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/search/domain/IndexField;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSearchableFieldsByEntityType",
      "description": "(Lorg/broadleafcommerce/core/search/domain/FieldEntity;)Ljava/util/List;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readIndexFieldForField",
      "description": "(Lorg/broadleafcommerce/core/search/domain/Field;)Lorg/broadleafcommerce/core/search/domain/IndexField;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readIndexFieldByAbbreviation",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/domain/IndexField;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 220,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIndexFieldTypesByAbbreviationOrPropertyName",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "IndexFieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "IndexFieldDaoImpl.java",
      "line-number": 177,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)V",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/OfferCode;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOfferCodeById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/offer/domain/OfferCode;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllOfferCodesByCode",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "offerCodeIsUsed",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)Ljava/lang/Boolean;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;)Lorg/broadleafcommerce/core/offer/domain/OfferCode;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOfferCodesByIds",
      "description": "(Ljava/util/Collection;)Ljava/util/List;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOfferCodesQuery",
      "description": "(Ljava/lang/String;)Ljavax/persistence/Query;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOfferCodeByCode",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/domain/OfferCode;",
      "class": "OfferCodeDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "OfferCodeDaoImpl.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resetAverageRating",
      "description": "()V",
      "class": "RatingSummaryImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "RatingSummaryImpl.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getReviews",
      "description": "()Ljava/util/List;",
      "class": "RatingSummaryImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "RatingSummaryImpl.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getNumberOfRatings",
      "description": "()Ljava/lang/Integer;",
      "class": "RatingSummaryImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "RatingSummaryImpl.java",
      "line-number": 132,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRatingType",
      "description": "(Lorg/broadleafcommerce/core/rating/service/type/RatingType;)V",
      "class": "RatingSummaryImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "RatingSummaryImpl.java",
      "line-number": 147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRatings",
      "description": "()Ljava/util/List;",
      "class": "RatingSummaryImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "RatingSummaryImpl.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRatingType",
      "description": "()Lorg/broadleafcommerce/core/rating/service/type/RatingType;",
      "class": "RatingSummaryImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "RatingSummaryImpl.java",
      "line-number": 142,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getNumberOfReviews",
      "description": "()Ljava/lang/Integer;",
      "class": "RatingSummaryImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "RatingSummaryImpl.java",
      "line-number": 137,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "null",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "initiateCheckout",
      "description": "(Ljava/lang/Long;)Ljava/lang/String;",
      "class": "DefaultPaymentGatewayCheckoutService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultPaymentGatewayCheckoutService.java",
      "line-number": 253,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markPaymentAsInvalid",
      "description": "(Ljava/lang/Long;)V",
      "class": "DefaultPaymentGatewayCheckoutService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultPaymentGatewayCheckoutService.java",
      "line-number": 233,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleUnsuccessfulTransaction",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)V",
      "class": "DefaultPaymentGatewayCheckoutService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultPaymentGatewayCheckoutService.java",
      "line-number": 228,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyPaymentToOrder",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/common/payment/service/PaymentGatewayConfiguration;)Ljava/lang/Long;",
      "class": "DefaultPaymentGatewayCheckoutService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultPaymentGatewayCheckoutService.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "null",
        "0L"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupOrderNumberFromOrderId",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;)Ljava/lang/String;",
      "class": "DefaultPaymentGatewayCheckoutService",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "DefaultPaymentGatewayCheckoutService.java",
      "line-number": 275,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findOriginalProductByURI",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 394,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findAutomaticProductBundles",
      "description": "()Ljava/util/List;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 133,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findProductsForCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/util/List;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 291,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCategoryByURI",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 364,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findProductsForCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;II)Ljava/util/List;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 296,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findProductByURI",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 381,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findActiveProductsByCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;II)Ljava/util/List;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 104,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findFilteredActiveProductsByCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;Lorg/broadleafcommerce/core/search/domain/SearchCriteria;)Ljava/util/List;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCatalogContextDTO",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/CatalogContextDTO;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 350,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSkuByURI",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/Sku;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 421,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findActiveProductsByCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Category;)Ljava/util/List;",
      "class": "CatalogServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogServiceImpl.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countMaximumApplications",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/catalog/domain/SkuBundleItem;Ljava/util/Set;)I",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 339,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateItemMatchesForSku",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/List;Ljava/lang/Long;)I",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 317,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleAutomaticBundling",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "unBundleItems",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 145,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeAutomaticBundles",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 117,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "bundleItems",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;Ljava/lang/Integer;Ljava/util/List;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "countExistingUsesOfBundle",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;)I",
      "class": "AutoBundleActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AutoBundleActivity.java",
      "line-number": 302,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderItemPriceDetailAdjustment",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionResultHolder;Lorg/broadleafcommerce/core/order/domain/OrderItemPriceDetail;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 167,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAdditionalRuleVariablesForItemOfferEvaluation",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;Ljava/util/HashMap;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 172,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildOfferCodeListForCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 137,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculatePotentialSavings",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;ILjava/util/Map;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 142,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resetPriceDetails",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "chooseSaleOrRetailAdjustments",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyItemOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Ljava/util/Map;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "applyAdditionalFilters",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 132,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeOfferCodeFromOrder",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferCode;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "synchronizeAdjustmentsAndPrices",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrder;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addAdditionalOffersForCode",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/offer/domain/OfferCode;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 177,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createSummary",
      "description": "()Lorg/broadleafcommerce/core/rating/domain/RatingSummary;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 51,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readRatingSummary",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/rating/service/type/RatingType;)Lorg/broadleafcommerce/core/rating/domain/RatingSummary;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createDetail",
      "description": "(Lorg/broadleafcommerce/core/rating/domain/RatingSummary;Ljava/lang/Double;Ljava/util/Date;Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/core/rating/domain/RatingDetail;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createSummary",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/rating/service/type/RatingType;)Lorg/broadleafcommerce/core/rating/domain/RatingSummary;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveRatingSummary",
      "description": "(Lorg/broadleafcommerce/core/rating/domain/RatingSummary;)Lorg/broadleafcommerce/core/rating/domain/RatingSummary;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readRatingSummaries",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/rating/service/type/RatingType;)Ljava/util/List;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readReview",
      "description": "(Ljava/lang/Long;Ljava/lang/Long;)Lorg/broadleafcommerce/core/rating/domain/ReviewDetail;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 141,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createDetail",
      "description": "()Lorg/broadleafcommerce/core/rating/domain/RatingDetail;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readRating",
      "description": "(Ljava/lang/Long;Ljava/lang/Long;)Lorg/broadleafcommerce/core/rating/domain/RatingDetail;",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteRatingSummary",
      "description": "(Lorg/broadleafcommerce/core/rating/domain/RatingSummary;)V",
      "class": "RatingSummaryDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "RatingSummaryDaoImpl.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRoutingNumber",
      "description": "(Ljava/lang/String;)V",
      "class": "BankAccountPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "BankAccountPaymentImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "BankAccountPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "BankAccountPaymentImpl.java",
      "line-number": 144,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAccountNumber",
      "description": "(Ljava/lang/String;)V",
      "class": "BankAccountPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "BankAccountPaymentImpl.java",
      "line-number": 109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRoutingNumber",
      "description": "()Ljava/lang/String;",
      "class": "BankAccountPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "BankAccountPaymentImpl.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAccountNumber",
      "description": "()Ljava/lang/String;",
      "class": "BankAccountPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "BankAccountPaymentImpl.java",
      "line-number": 104,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPan",
      "description": "(Ljava/lang/String;)V",
      "class": "GiftCardPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "GiftCardPaymentImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPin",
      "description": "()Ljava/lang/String;",
      "class": "GiftCardPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "GiftCardPaymentImpl.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "GiftCardPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "GiftCardPaymentImpl.java",
      "line-number": 141,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPin",
      "description": "(Ljava/lang/String;)V",
      "class": "GiftCardPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "GiftCardPaymentImpl.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPan",
      "description": "()Ljava/lang/String;",
      "class": "GiftCardPaymentImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "GiftCardPaymentImpl.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentLog;)Lorg/broadleafcommerce/core/payment/domain/PaymentLog;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readTransactionById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 85,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)V",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 95,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readPaymentsForOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 68,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createTransaction",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 80,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/OrderPayment;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 75,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readPaymentById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/payment/domain/OrderPayment;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 62,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/OrderPayment;)Lorg/broadleafcommerce/core/payment/domain/OrderPayment;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createLog",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/PaymentLog;",
      "class": "OrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "OrderPaymentDaoImpl.java",
      "line-number": 90,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateBillTo",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)V",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 241,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateTotals",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)V",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "translateOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "refreshTransaction",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 149,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "translatePaymentTransaction",
      "description": "(Lorg/broadleafcommerce/common/money/Money;Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;Z)Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Address;)Lorg/broadleafcommerce/core/payment/service/OrderToPaymentRequestDTOServiceImpl$NameResponse;",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 288,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "translatePaymentTransaction",
      "description": "(Lorg/broadleafcommerce/common/money/Money;Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateDefaultLineItemsAndSubtotal",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)V",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 337,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCustomerInfo",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)V",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 181,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateShipTo",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)V",
      "class": "OrderToPaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 194,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "FulfillmentGroupAdjustmentImpl.java",
      "line-number": 189,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "FulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "FulfillmentGroupAdjustmentImpl.java",
      "line-number": 173,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "FulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "FulfillmentGroupAdjustmentImpl.java",
      "line-number": 199,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "FulfillmentGroupAdjustmentImpl.java",
      "line-number": 226,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "FulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "FulfillmentGroupAdjustmentImpl.java",
      "line-number": 156,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/lang/String;)V",
      "class": "FulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "FulfillmentGroupAdjustmentImpl.java",
      "line-number": 121,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "FulfillmentGroupAdjustmentImpl.java",
      "line-number": 194,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Ljava/lang/String;",
      "class": "ProductAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductAttributeImpl.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"\"",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "ProductAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductAttributeImpl.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductAttributeImpl.java",
      "line-number": 151,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "ProductAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductAttributeImpl.java",
      "line-number": 183,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupCategory",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/RelatedProductDTO;)Lorg/broadleafcommerce/core/catalog/domain/Category;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 214,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupProduct",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/RelatedProductDTO;)Lorg/broadleafcommerce/core/catalog/domain/Product;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 206,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildUpSaleProductsList",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Lorg/broadleafcommerce/core/catalog/domain/Category;Lorg/broadleafcommerce/core/catalog/domain/RelatedProductDTO;)Ljava/util/List;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 137,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resizeList",
      "description": "(Ljava/util/List;Ljava/lang/Integer;)Ljava/util/List;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 198,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findRelatedProducts",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/RelatedProductDTO;)Ljava/util/List;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 54,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildFeaturedProductsList",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Lorg/broadleafcommerce/core/catalog/domain/Category;Lorg/broadleafcommerce/core/catalog/domain/RelatedProductDTO;)Ljava/util/List;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeDuplicatesFromList",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeCurrentProductFromReturnList",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Ljava/util/List;)V",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildCrossSaleProductsList",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Lorg/broadleafcommerce/core/catalog/domain/Category;Lorg/broadleafcommerce/core/catalog/domain/RelatedProductDTO;)Ljava/util/List;",
      "class": "RelatedProductsServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "RelatedProductsServiceImpl.java",
      "line-number": 167,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 112,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDiscountedPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountedPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 141,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 232,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkCloneable",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/CandidateItemOffer;)V",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 150,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/CandidateItemOffer;",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CandidateItemOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateItemOfferImpl.java",
      "line-number": 191,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIdentifyFieldValue",
      "description": "(Ljava/lang/Object;Ljava/lang/String;)Ljava/io/Serializable;",
      "class": "EntityIdentifierUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "EntityIdentifierUtil.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIdentifierFieldName",
      "description": "(Ljava/lang/Class;)Ljava/lang/String;",
      "class": "EntityIdentifierUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "EntityIdentifierUtil.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIdentifierFieldValue",
      "description": "(Ljava/lang/Object;)Ljava/io/Serializable;",
      "class": "EntityIdentifierUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "EntityIdentifierUtil.java",
      "line-number": 68,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIdentifierFieldName",
      "description": "(Ljava/lang/Object;)Ljava/lang/String;",
      "class": "EntityIdentifierUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "EntityIdentifierUtil.java",
      "line-number": 43,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findIdentifierField",
      "description": "(Ljava/lang/Class;)Ljava/lang/reflect/Field;",
      "class": "EntityIdentifierUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "EntityIdentifierUtil.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "()V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "registerState",
      "description": "(Lorg/broadleafcommerce/core/workflow/state/RollbackHandler;Ljava/util/Map;)V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRollbackStateLocal",
      "description": "()Lorg/broadleafcommerce/core/workflow/state/RollbackStateLocal;",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 127,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearRegionState",
      "description": "(Ljava/lang/String;)V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "registerState",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/lang/String;Lorg/broadleafcommerce/core/workflow/state/RollbackHandler;Ljava/util/Map;)V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackRegionState",
      "description": "(Ljava/lang/String;)V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "registerState",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Lorg/broadleafcommerce/core/workflow/state/RollbackHandler;Ljava/util/Map;)V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 78,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearAllState",
      "description": "()V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackAllState",
      "description": "()V",
      "class": "ActivityStateManagerImpl",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "ActivityStateManagerImpl.java",
      "line-number": 102,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriceAdjustmentSkipDynamicPricing",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "ProductOptionValueImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionValueImpl.java",
      "line-number": 156,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "ProductOptionValueImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionValueImpl.java",
      "line-number": 209,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAttributeValue",
      "description": "()Ljava/lang/String;",
      "class": "ProductOptionValueImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionValueImpl.java",
      "line-number": 112,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPriceAdjustment",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "ProductOptionValueImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionValueImpl.java",
      "line-number": 161,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductOptionValueImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionValueImpl.java",
      "line-number": 176,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriceAdjustment",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "ProductOptionValueImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionValueImpl.java",
      "line-number": 137,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "onItemUpdated",
      "description": "(Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;)Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 217,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "onItemRemoved",
      "description": "(Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;)Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 299,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItemToFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 203,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resolveFulfillmentType",
      "description": "(Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItem;)Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 189,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateItemQuantity",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/OrderItem;Ljava/lang/Integer;)Ljava/util/List;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 249,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resolveFulfillmentType",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 193,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addItemToFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/OrderItem;ILorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 207,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "verify",
      "description": "(Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;)Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 316,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "onItemAdded",
      "description": "(Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;)Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;",
      "class": "FulfillmentGroupItemStrategyImpl",
      "package": "org/broadleafcommerce/core/order/strategy",
      "file-name": "FulfillmentGroupItemStrategyImpl.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStartResult",
      "description": "()Ljava/lang/Integer;",
      "class": "SearchResult",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchResult.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "null",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTotalPages",
      "description": "()Ljava/lang/Integer;",
      "class": "SearchResult",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchResult.java",
      "line-number": 90,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getEndResult",
      "description": "()Ljava/lang/Integer;",
      "class": "SearchResult",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchResult.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "null",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildFullCategoryHierarchy",
      "description": "(Lorg/apache/solr/common/SolrInputDocument;Lorg/broadleafcommerce/core/search/dao/CatalogStructure;Ljava/lang/Long;Ljava/util/Set;)V",
      "class": "CatalogDocumentBuilderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 205,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachBasicDocumentFields",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Lorg/apache/solr/common/SolrInputDocument;)V",
      "class": "CatalogDocumentBuilderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 150,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertDisplayOrderToLong",
      "description": "(Lorg/broadleafcommerce/core/search/dao/CatalogStructure;Ljava/lang/String;)Ljava/lang/Long;",
      "class": "CatalogDocumentBuilderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 251,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0L",
        "1L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachIndexableDocumentFields",
      "description": "(Lorg/apache/solr/common/SolrInputDocument;Lorg/broadleafcommerce/core/catalog/domain/Indexable;Ljava/util/List;Ljava/util/List;)V",
      "class": "CatalogDocumentBuilderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 104,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildDocument",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Ljava/util/List;Ljava/util/List;)Lorg/apache/solr/common/SolrInputDocument;",
      "class": "CatalogDocumentBuilderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPropertyValues",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Lorg/broadleafcommerce/core/search/domain/Field;Lorg/broadleafcommerce/core/search/domain/solr/FieldType;Ljava/util/List;)Ljava/util/Map;",
      "class": "CatalogDocumentBuilderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 224,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachAdditionalDocumentFields",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Lorg/apache/solr/common/SolrInputDocument;)V",
      "class": "CatalogDocumentBuilderImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "SkuAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuAttributeImpl.java",
      "line-number": 143,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SkuAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuAttributeImpl.java",
      "line-number": 190,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Ljava/lang/String;",
      "class": "SkuAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuAttributeImpl.java",
      "line-number": 127,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "SkuAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuAttributeImpl.java",
      "line-number": 222,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CategoryAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryAttributeImpl.java",
      "line-number": 180,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "CategoryAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryAttributeImpl.java",
      "line-number": 113,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Ljava/lang/String;",
      "class": "CategoryAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryAttributeImpl.java",
      "line-number": 103,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryAttributeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryAttributeImpl.java",
      "line-number": 148,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getName",
      "description": "()Ljava/lang/String;",
      "class": "FulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentOptionImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFulfillmentType",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;",
      "class": "FulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentOptionImpl.java",
      "line-number": 149,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFulfillmentType",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;)V",
      "class": "FulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentOptionImpl.java",
      "line-number": 154,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLongDescription",
      "description": "()Ljava/lang/String;",
      "class": "FulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentOptionImpl.java",
      "line-number": 129,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "FulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "FulfillmentOptionImpl.java",
      "line-number": 189,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateUri",
      "description": "(Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/core/catalog/domain/Product;)Ljava/lang/String;",
      "class": "ProductSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "ProductSiteMapGenerator.java",
      "line-number": 104,
      "classification": "tested",
      "detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "constructImageURLs",
      "description": "(Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/common/sitemap/wrapper/SiteMapURLWrapper;Lorg/broadleafcommerce/core/catalog/domain/Product;)V",
      "class": "ProductSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "ProductSiteMapGenerator.java",
      "line-number": 94,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addSiteMapEntries",
      "description": "(Lorg/broadleafcommerce/common/sitemap/domain/SiteMapGeneratorConfiguration;Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;)V",
      "class": "ProductSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "ProductSiteMapGenerator.java",
      "line-number": 62,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateDate",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;)Ljava/util/Date;",
      "class": "ProductSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "ProductSiteMapGenerator.java",
      "line-number": 108,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canHandleSiteMapConfiguration",
      "description": "(Lorg/broadleafcommerce/common/sitemap/domain/SiteMapGeneratorConfiguration;)Z",
      "class": "ProductSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "ProductSiteMapGenerator.java",
      "line-number": 56,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "reconstructCart",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Z)Lorg/broadleafcommerce/core/order/service/call/ReconstructCartResponse;",
      "class": "MergeCartServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "MergeCartServiceImpl.java",
      "line-number": 129,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "mergeCart",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/core/order/service/call/MergeCartResponse;",
      "class": "MergeCartServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "MergeCartServiceImpl.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "reconstructCart",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/core/order/service/call/ReconstructCartResponse;",
      "class": "MergeCartServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "MergeCartServiceImpl.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "mergeCart",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/service/call/MergeCartResponse;",
      "class": "MergeCartServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "MergeCartServiceImpl.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkActive",
      "description": "(Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItem;)Z",
      "class": "MergeCartServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "MergeCartServiceImpl.java",
      "line-number": 198,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSavedCartAttributes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "MergeCartServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "MergeCartServiceImpl.java",
      "line-number": 175,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setNewCartOwnership",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/profile/core/domain/Customer;)V",
      "class": "MergeCartServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "MergeCartServiceImpl.java",
      "line-number": 183,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rebuildIndex",
      "description": "()V",
      "class": "AbstractSolrIndexUpdateServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 246,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shutdownAll",
      "description": "()V",
      "class": "AbstractSolrIndexUpdateServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 113,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "destroy",
      "description": "()V",
      "class": "AbstractSolrIndexUpdateServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 100,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "scheduleCommand",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/indexer/SolrUpdateCommand;)V",
      "class": "AbstractSolrIndexUpdateServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 136,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isRunning",
      "description": "(Ljava/lang/String;)Z",
      "class": "AbstractSolrIndexUpdateServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 238,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateIndex",
      "description": "(Ljava/util/List;)V",
      "class": "AbstractSolrIndexUpdateServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 251,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateIndex",
      "description": "(Ljava/util/List;Ljava/util/List;)V",
      "class": "AbstractSolrIndexUpdateServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 256,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateUri",
      "description": "(Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/core/catalog/domain/Sku;)Ljava/lang/String;",
      "class": "SkuSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuSiteMapGenerator.java",
      "line-number": 114,
      "classification": "tested",
      "detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addSiteMapEntries",
      "description": "(Lorg/broadleafcommerce/common/sitemap/domain/SiteMapGeneratorConfiguration;Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;)V",
      "class": "SkuSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuSiteMapGenerator.java",
      "line-number": 65,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateDate",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)Ljava/util/Date;",
      "class": "SkuSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuSiteMapGenerator.java",
      "line-number": 124,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "constructImageURLs",
      "description": "(Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/common/sitemap/wrapper/SiteMapURLWrapper;Lorg/broadleafcommerce/core/catalog/domain/Sku;)V",
      "class": "SkuSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuSiteMapGenerator.java",
      "line-number": 104,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canHandleSiteMapConfiguration",
      "description": "(Lorg/broadleafcommerce/common/sitemap/domain/SiteMapGeneratorConfiguration;)Z",
      "class": "SkuSiteMapGenerator",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuSiteMapGenerator.java",
      "line-number": 59,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest.testSkuSiteMapGenerator(org.broadleafcommerce.core.catalog.service.SkuSiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addIndexStatus",
      "description": "(Ljava/lang/Long;Ljava/util/Date;)V",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 51,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearErrorStatus",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)V",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setIndexStatus",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)V",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSeedStatusInstance",
      "description": "()Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 98,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addIndexErrorStatus",
      "description": "(Ljava/lang/Long;Ljava/lang/Integer;Ljava/util/Date;)V",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 75,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateIndexStatus",
      "description": "(Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)V",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isEventIdInError",
      "description": "(Ljava/util/Collection;Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;)Ljava/util/List;",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 135,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getIndexStatus",
      "description": "()Lorg/broadleafcommerce/core/search/service/solr/index/IndexStatusInfo;",
      "class": "SolrIndexStatusServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexStatusServiceImpl.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrencyCode",
      "description": "()Ljava/lang/String;",
      "class": "ProratedOrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "ProratedOrderItemAdjustmentImpl.java",
      "line-number": 177,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;Lorg/broadleafcommerce/core/offer/domain/Offer;Ljava/lang/String;)V",
      "class": "ProratedOrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "ProratedOrderItemAdjustmentImpl.java",
      "line-number": 111,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProratedOrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "ProratedOrderItemAdjustmentImpl.java",
      "line-number": 193,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValue",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "ProratedOrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "ProratedOrderItemAdjustmentImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "ProratedOrderItemAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "ProratedOrderItemAdjustmentImpl.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "nullCheckCompare",
      "description": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Integer;",
      "class": "ItemOfferWeightedPercentComparator",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "ItemOfferWeightedPercentComparator.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "nullDetected",
      "description": "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;",
      "class": "ItemOfferWeightedPercentComparator",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "ItemOfferWeightedPercentComparator.java",
      "line-number": 59,
      "classification": "partially-tested",
      "detected": [
        "null"
      ],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)I",
      "class": "ItemOfferWeightedPercentComparator",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "ItemOfferWeightedPercentComparator.java",
      "line-number": 34,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "0",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/domain/BundleOrderItemFeePrice;",
      "class": "BundleOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "BundleOrderItemFeePriceImpl.java",
      "line-number": 175,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "BundleOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "BundleOrderItemFeePriceImpl.java",
      "line-number": 222,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "BundleOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "BundleOrderItemFeePriceImpl.java",
      "line-number": 207,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkCloneable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/BundleOrderItemFeePrice;)V",
      "class": "BundleOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "BundleOrderItemFeePriceImpl.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "BundleOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "BundleOrderItemFeePriceImpl.java",
      "line-number": 125,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertToMoney",
      "description": "(Ljava/math/BigDecimal;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "BundleOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "BundleOrderItemFeePriceImpl.java",
      "line-number": 167,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "BundleOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "BundleOrderItemFeePriceImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "DiscreteOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemFeePriceImpl.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "DiscreteOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemFeePriceImpl.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertToMoney",
      "description": "(Ljava/math/BigDecimal;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "DiscreteOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemFeePriceImpl.java",
      "line-number": 155,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "DiscreteOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemFeePriceImpl.java",
      "line-number": 182,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItemFeePrice;",
      "class": "DiscreteOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemFeePriceImpl.java",
      "line-number": 163,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "DiscreteOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemFeePriceImpl.java",
      "line-number": 208,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkCloneable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItemFeePrice;)V",
      "class": "DiscreteOrderItemFeePriceImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DiscreteOrderItemFeePriceImpl.java",
      "line-number": 147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderMultishipOptionsFromDTOs",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/List;)Ljava/util/List;",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 173,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrGenerateOrderMultishipOptions",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 138,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteAllOrderMultishipOptions",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 95,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveOrderMultishipOptions",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/List;)V",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteOrderItemOrderMultishipOptions",
      "description": "(Ljava/lang/Long;I)V",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createPopulatedOrderMultishipOption",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/domain/DiscreteOrderItem;Ljava/lang/Integer;)Ljava/util/List;",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 201,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteOrderItemOrderMultishipOptions",
      "description": "(Ljava/lang/Long;)V",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateOrderMultishipOptions",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OrderMultishipOptionServiceImpl",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderMultishipOptionServiceImpl.java",
      "line-number": 192,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCreditCardPayment",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/payment/domain/secure/CreditCardPayment;",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createBankAccountPayment",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/secure/BankAccountPayment;",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 51,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/secure/Referenced;)V",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createGiftCardPayment",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/secure/GiftCardPayment;",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCreditCardPayment",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/secure/CreditCardPayment;",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findBankAccountPayment",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/payment/domain/secure/BankAccountPayment;",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/secure/Referenced;)Lorg/broadleafcommerce/core/payment/domain/secure/Referenced;",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findGiftCardPayment",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/payment/domain/secure/GiftCardPayment;",
      "class": "SecureOrderPaymentDaoImpl",
      "package": "org/broadleafcommerce/core/payment/dao",
      "file-name": "SecureOrderPaymentDaoImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "startBatchEvent",
      "description": "(Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "I18nSolrIndexServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "I18nSolrIndexServiceExtensionHandler.java",
      "line-number": 161,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addPropertyValues",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Indexable;Lorg/broadleafcommerce/core/search/domain/Field;Lorg/broadleafcommerce/core/search/domain/solr/FieldType;Ljava/util/Map;Ljava/lang/String;Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "I18nSolrIndexServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "I18nSolrIndexServiceExtensionHandler.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addEntitiesToTranslationCache",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/common/i18n/domain/TranslatedEntity;)V",
      "class": "I18nSolrIndexServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "I18nSolrIndexServiceExtensionHandler.java",
      "line-number": 197,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "endBatchEvent",
      "description": "(Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "I18nSolrIndexServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "I18nSolrIndexServiceExtensionHandler.java",
      "line-number": 203,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTranslationEnabled",
      "description": "()Z",
      "class": "I18nSolrIndexServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "I18nSolrIndexServiceExtensionHandler.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "()V",
      "class": "I18nSolrIndexServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "I18nSolrIndexServiceExtensionHandler.java",
      "line-number": 78,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLocalePrefix",
      "description": "(Lorg/broadleafcommerce/core/search/domain/Field;Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "I18nSolrIndexServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "I18nSolrIndexServiceExtensionHandler.java",
      "line-number": 139,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCartForCustomerWithEnhancements",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/extension/ExtensionResultHolder;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachAdditionalDataToNewNamedCart",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "preValidateCartOperation",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/common/extension/ExtensionResultHolder;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 106,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "preValidateUpdateQuantityOperation",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/common/extension/ExtensionResultHolder;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 111,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findCartForCustomerWithEnhancements",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Lorg/broadleafcommerce/common/extension/ExtensionResultHolder;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 126,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachAdditionalDataToOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addOfferCodes",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/List;Z)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 121,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUses",
      "description": "()I",
      "class": "WeaveLegacyOfferUses",
      "package": "org/broadleafcommerce/core/offer/weave",
      "file-name": "WeaveLegacyOfferUses.java",
      "line-number": 43,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMaxUses",
      "description": "()I",
      "class": "WeaveLegacyOfferUses",
      "package": "org/broadleafcommerce/core/offer/weave",
      "file-name": "WeaveLegacyOfferUses.java",
      "line-number": 38,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getEmbeddableLegacyOfferUses",
      "description": "(Z)Lorg/broadleafcommerce/core/offer/domain/LegacyOfferUsesImpl;",
      "class": "WeaveLegacyOfferUses",
      "package": "org/broadleafcommerce/core/offer/weave",
      "file-name": "WeaveLegacyOfferUses.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setUses",
      "description": "(I)V",
      "class": "WeaveLegacyOfferUses",
      "package": "org/broadleafcommerce/core/offer/weave",
      "file-name": "WeaveLegacyOfferUses.java",
      "line-number": 48,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMaxUses",
      "description": "(I)V",
      "class": "WeaveLegacyOfferUses",
      "package": "org/broadleafcommerce/core/offer/weave",
      "file-name": "WeaveLegacyOfferUses.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "copy",
      "description": "()Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetailAdjustment;",
      "class": "PromotableOrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 132,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarian",
      "description": "()Z",
      "class": "PromotableOrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 101,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "()Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "PromotableOrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 80,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isCombinable",
      "description": "()Z",
      "class": "PromotableOrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 95,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeAdjustment",
      "description": "(Z)V",
      "class": "PromotableOrderItemPriceDetailAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderItemPriceDetailAdjustmentImpl.java",
      "line-number": 122,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FieldEntity",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldEntity.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "FieldEntity",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldEntity.java",
      "line-number": 100,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllLookupTypes",
      "description": "()Ljava/util/List;",
      "class": "FieldEntity",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldEntity.java",
      "line-number": 90,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAdditionalLookupTypes",
      "description": "()Ljava/util/List;",
      "class": "FieldEntity",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldEntity.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addAditionalLookupType",
      "description": "(Ljava/lang/String;)V",
      "class": "FieldEntity",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldEntity.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/domain/FieldEntity;",
      "class": "FieldEntity",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "FieldEntity.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "CandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateFulfillmentGroupOfferImpl.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountedPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "CandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateFulfillmentGroupOfferImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateFulfillmentGroupOfferImpl.java",
      "line-number": 155,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "CandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateFulfillmentGroupOfferImpl.java",
      "line-number": 112,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDiscountedPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "CandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateFulfillmentGroupOfferImpl.java",
      "line-number": 124,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)V",
      "class": "CandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateFulfillmentGroupOfferImpl.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "CandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateOrderOfferImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "CandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateOrderOfferImpl.java",
      "line-number": 141,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountedPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "CandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateOrderOfferImpl.java",
      "line-number": 126,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "CandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateOrderOfferImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateOrderOfferImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setDiscountedPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "CandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CandidateOrderOfferImpl.java",
      "line-number": 131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "finalizeAdjustment",
      "description": "(Z)V",
      "class": "PromotableFulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupAdjustmentImpl.java",
      "line-number": 140,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarian",
      "description": "()Z",
      "class": "PromotableFulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupAdjustmentImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrency",
      "description": "()Lorg/broadleafcommerce/common/currency/domain/BroadleafCurrency;",
      "class": "PromotableFulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupAdjustmentImpl.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isCombinable",
      "description": "()Z",
      "class": "PromotableFulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupAdjustmentImpl.java",
      "line-number": 113,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeAdjustmentValue",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableFulfillmentGroupAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableFulfillmentGroupAdjustmentImpl.java",
      "line-number": 55,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchFacet;)Lorg/broadleafcommerce/core/search/domain/SearchFacet;",
      "class": "SearchFacetDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchFacetDaoImpl.java",
      "line-number": 125,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readDistinctValuesForField",
      "description": "(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List;",
      "class": "SearchFacetDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchFacetDaoImpl.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllSearchFacets",
      "description": "(Lorg/broadleafcommerce/core/search/domain/FieldEntity;)Ljava/util/List;",
      "class": "SearchFacetDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchFacetDaoImpl.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isSearchFacetRangeArchivable",
      "description": "()Z",
      "class": "SearchFacetDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchFacetDaoImpl.java",
      "line-number": 184,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSearchFacetRangesForSearchFacet",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchFacet;)Ljava/util/List;",
      "class": "SearchFacetDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchFacetDaoImpl.java",
      "line-number": 153,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSearchFacetForField",
      "description": "(Lorg/broadleafcommerce/core/search/domain/Field;)Lorg/broadleafcommerce/core/search/domain/SearchFacet;",
      "class": "SearchFacetDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchFacetDaoImpl.java",
      "line-number": 130,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FieldType",
      "package": "org/broadleafcommerce/core/search/domain/solr",
      "file-name": "FieldType.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/domain/solr/FieldType;",
      "class": "FieldType",
      "package": "org/broadleafcommerce/core/search/domain/solr",
      "file-name": "FieldType.java",
      "line-number": 76,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "FieldType",
      "package": "org/broadleafcommerce/core/search/domain/solr",
      "file-name": "FieldType.java",
      "line-number": 102,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isMultiValued",
      "description": "(Lorg/broadleafcommerce/core/search/domain/solr/FieldType;)Z",
      "class": "FieldType",
      "package": "org/broadleafcommerce/core/search/domain/solr",
      "file-name": "FieldType.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/StackabilityType;",
      "class": "StackabilityType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "StackabilityType.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "StackabilityType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "StackabilityType.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "StackabilityType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "StackabilityType.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareTo",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/StackabilityType;)I",
      "class": "StackabilityType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "StackabilityType.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "PromotionMessagePlacementType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessagePlacementType.java",
      "line-number": 61,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/promotionMessage/domain/type/PromotionMessagePlacementType;",
      "class": "PromotionMessagePlacementType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessagePlacementType.java",
      "line-number": 43,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "PromotionMessagePlacementType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessagePlacementType.java",
      "line-number": 93,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareTo",
      "description": "(Lorg/broadleafcommerce/core/promotionMessage/domain/type/PromotionMessagePlacementType;)I",
      "class": "PromotionMessagePlacementType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessagePlacementType.java",
      "line-number": 110,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertPromotionMessagesToDTOs",
      "description": "(Ljava/util/Set;Lorg/broadleafcommerce/core/offer/domain/Offer;)Ljava/util/Map;",
      "class": "PromotionMessageDTOServiceImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/dto/service",
      "file-name": "PromotionMessageDTOServiceImpl.java",
      "line-number": 51,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "convertPromotionMessagesToDTOs",
      "description": "(Ljava/util/Set;)Ljava/util/Map;",
      "class": "PromotionMessageDTOServiceImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/dto/service",
      "file-name": "PromotionMessageDTOServiceImpl.java",
      "line-number": 46,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCustomerRule",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Ljava/lang/String;",
      "class": "PromotionMessageDTOServiceImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/dto/service",
      "file-name": "PromotionMessageDTOServiceImpl.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildCustomerRuleHolder",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Lorg/broadleafcommerce/profile/core/dto/CustomerRuleHolder;",
      "class": "PromotionMessageDTOServiceImpl",
      "package": "org/broadleafcommerce/core/promotionMessage/dto/service",
      "file-name": "PromotionMessageDTOServiceImpl.java",
      "line-number": 66,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCodeTypeByKey",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "CodeTypeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "CodeTypeDaoImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCodeTypeById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/util/domain/CodeType;",
      "class": "CodeTypeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "CodeTypeDaoImpl.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/util/domain/CodeType;",
      "class": "CodeTypeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "CodeTypeDaoImpl.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/util/domain/CodeType;)V",
      "class": "CodeTypeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "CodeTypeDaoImpl.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllCodeTypes",
      "description": "()Ljava/util/List;",
      "class": "CodeTypeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "CodeTypeDaoImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/util/domain/CodeType;)Lorg/broadleafcommerce/core/util/domain/CodeType;",
      "class": "CodeTypeDaoImpl",
      "package": "org/broadleafcommerce/core/util/dao",
      "file-name": "CodeTypeDaoImpl.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMainEntityName",
      "description": "()Ljava/lang/String;",
      "class": "IndexFieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "IndexFieldImpl.java",
      "line-number": 187,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "IndexFieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "IndexFieldImpl.java",
      "line-number": 167,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "IndexFieldImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "IndexFieldImpl.java",
      "line-number": 151,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "comparePriorities",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;)I",
      "class": "ProductBundleComparator",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductBundleComparator.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareSavings",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;)I",
      "class": "ProductBundleComparator",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductBundleComparator.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;Lorg/broadleafcommerce/core/catalog/domain/ProductBundle;)I",
      "class": "ProductBundleComparator",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductBundleComparator.java",
      "line-number": 31,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPan",
      "description": "(Ljava/lang/String;)V",
      "class": "CreditCardPaymentInfoImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "CreditCardPaymentInfoImpl.java",
      "line-number": 136,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CreditCardPaymentInfoImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "CreditCardPaymentInfoImpl.java",
      "line-number": 220,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPan",
      "description": "()Ljava/lang/String;",
      "class": "CreditCardPaymentInfoImpl",
      "package": "org/broadleafcommerce/core/payment/domain/secure",
      "file-name": "CreditCardPaymentInfoImpl.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setArchived",
      "description": "(Ljava/lang/Character;)V",
      "class": "StoreImpl",
      "package": "org/broadleafcommerce/core/store/domain",
      "file-name": "StoreImpl.java",
      "line-number": 204,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getArchived",
      "description": "()Ljava/lang/Character;",
      "class": "StoreImpl",
      "package": "org/broadleafcommerce/core/store/domain",
      "file-name": "StoreImpl.java",
      "line-number": 194,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "'A'",
        "'\\40'"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'A'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "'\\40'",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "StoreImpl",
      "package": "org/broadleafcommerce/core/store/domain",
      "file-name": "StoreImpl.java",
      "line-number": 212,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "gatherMessagesByPlacementType",
      "description": "(Ljava/util/Map;Lorg/broadleafcommerce/core/promotionMessage/domain/type/PromotionMessagePlacementType;)Ljava/util/List;",
      "class": "BLCPromotionMessageUtils",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "gatherMessagesFromDTOs",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "BLCPromotionMessageUtils",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sortMessagesByPriority",
      "description": "(Ljava/util/List;)V",
      "class": "BLCPromotionMessageUtils",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 90,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "gatherMessages",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "BLCPromotionMessageUtils",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sortMessagesByPriority",
      "description": "(Ljava/util/Map;)V",
      "class": "BLCPromotionMessageUtils",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 78,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "filterPromotionMessageDTOsByTypes",
      "description": "(Ljava/util/Map;Ljava/util/List;)Ljava/util/List;",
      "class": "BLCPromotionMessageUtils",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 132,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "SkuFeeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuFeeImpl.java",
      "line-number": 156,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFeeType",
      "description": "(Lorg/broadleafcommerce/core/catalog/service/type/SkuFeeType;)V",
      "class": "SkuFeeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuFeeImpl.java",
      "line-number": 186,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "SkuFeeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuFeeImpl.java",
      "line-number": 151,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFeeType",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/type/SkuFeeType;",
      "class": "SkuFeeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuFeeImpl.java",
      "line-number": 181,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SkuFeeImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuFeeImpl.java",
      "line-number": 211,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CrossSaleProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CrossSaleProductImpl.java",
      "line-number": 184,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPromotionMessage",
      "description": "()Ljava/lang/String;",
      "class": "CrossSaleProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CrossSaleProductImpl.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CrossSaleProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CrossSaleProductImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "copy",
      "description": "()Lorg/broadleafcommerce/core/offer/service/discount/PromotionDiscount;",
      "class": "PromotionDiscount",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionDiscount.java",
      "line-number": 105,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 5,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "incrementQuantity",
      "description": "(I)V",
      "class": "PromotionDiscount",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionDiscount.java",
      "line-number": 76,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "split",
      "description": "(I)Lorg/broadleafcommerce/core/offer/service/discount/PromotionDiscount;",
      "class": "PromotionDiscount",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionDiscount.java",
      "line-number": 88,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFinalized",
      "description": "()Z",
      "class": "PromotionDiscount",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionDiscount.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resetQty",
      "description": "(I)V",
      "class": "PromotionDiscount",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionDiscount.java",
      "line-number": 115,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "PromotionMessageType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessageType.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareTo",
      "description": "(Lorg/broadleafcommerce/core/promotionMessage/domain/type/PromotionMessageType;)I",
      "class": "PromotionMessageType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessageType.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/promotionMessage/domain/type/PromotionMessageType;",
      "class": "PromotionMessageType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessageType.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "PromotionMessageType",
      "package": "org/broadleafcommerce/core/promotionMessage/domain/type",
      "file-name": "PromotionMessageType.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readXrefsBySubCategoryId",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "CategoryXrefDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryXrefDaoImpl.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/CategoryXref;)V",
      "class": "CategoryXrefDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryXrefDaoImpl.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readXrefByIds",
      "description": "(Ljava/lang/Long;Ljava/lang/Long;)Lorg/broadleafcommerce/core/catalog/domain/CategoryXref;",
      "class": "CategoryXrefDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryXrefDaoImpl.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/CategoryProductXref;)Lorg/broadleafcommerce/core/catalog/domain/CategoryProductXref;",
      "class": "CategoryXrefDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryXrefDaoImpl.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readXrefsByCategoryId",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "CategoryXrefDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryXrefDaoImpl.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/CategoryXrefImpl;)Lorg/broadleafcommerce/core/catalog/domain/CategoryXref;",
      "class": "CategoryXrefDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "CategoryXrefDaoImpl.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferType.java",
      "line-number": 91,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 12,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferType;",
      "class": "OfferType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferType.java",
      "line-number": 41,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaximumNumberOfUses(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferType.java",
      "line-number": 59,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareTo",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferType;)I",
      "class": "OfferType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferType.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "blFrameworkSecurityData",
      "description": "()Lorg/broadleafcommerce/common/demo/AutoImportSql;",
      "class": "ImportSQLConfig",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "blApproverOnlySecurityData",
      "description": "()Lorg/broadleafcommerce/common/demo/AutoImportSql;",
      "class": "ImportSQLConfig",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 51,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "blFrameworkLateData",
      "description": "()Lorg/broadleafcommerce/common/demo/AutoImportSql;",
      "class": "ImportSQLConfig",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "blAssetFolderData",
      "description": "()Lorg/broadleafcommerce/common/demo/AutoImportSql;",
      "class": "ImportSQLConfig",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "blFrameworkPreBasicData",
      "description": "()Lorg/broadleafcommerce/common/demo/AutoImportSql;",
      "class": "ImportSQLConfig",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "blAssetFolderGiftCardData",
      "description": "()Lorg/broadleafcommerce/common/demo/AutoImportSql;",
      "class": "ImportSQLConfig",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 76,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferPriceDataIdentifierType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferPriceDataIdentifierType.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferPriceDataIdentifierType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferPriceDataIdentifierType.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferPriceDataIdentifierType;",
      "class": "OfferPriceDataIdentifierType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferPriceDataIdentifierType.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compareTo",
      "description": "(Lorg/broadleafcommerce/core/offer/service/type/OfferPriceDataIdentifierType;)I",
      "class": "OfferPriceDataIdentifierType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferPriceDataIdentifierType.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readStoreByStoreCode",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/store/domain/Store;",
      "class": "StoreDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "StoreDaoImpl.java",
      "line-number": 55,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllStoresByState",
      "description": "(Ljava/lang/String;)Ljava/util/List;",
      "class": "StoreDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "StoreDaoImpl.java",
      "line-number": 74,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllStores",
      "description": "()Ljava/util/List;",
      "class": "StoreDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "StoreDaoImpl.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readStoreById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/store/domain/Store;",
      "class": "StoreDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "StoreDaoImpl.java",
      "line-number": 39,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readStoreByStoreName",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/store/domain/Store;",
      "class": "StoreDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "StoreDaoImpl.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/store/domain/Store;)Lorg/broadleafcommerce/core/store/domain/Store;",
      "class": "StoreDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "StoreDaoImpl.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateOrderItemCartMessages",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "CartMessageOrderItemServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "CartMessageOrderItemServiceExtensionHandler.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "gatherProductCartMessages",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Ljava/util/List;",
      "class": "CartMessageOrderItemServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "CartMessageOrderItemServiceExtensionHandler.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "attachAdditionalDataToOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Z)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "CartMessageOrderItemServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "CartMessageOrderItemServiceExtensionHandler.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addPromotionMessagesForType",
      "description": "(Ljava/util/List;Ljava/util/List;)V",
      "class": "CartMessageOrderItemServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "CartMessageOrderItemServiceExtensionHandler.java",
      "line-number": 113,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "gatherOrderItemCartMessages",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Ljava/util/List;",
      "class": "CartMessageOrderItemServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "CartMessageOrderItemServiceExtensionHandler.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "()V",
      "class": "CartMessageOrderItemServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "CartMessageOrderItemServiceExtensionHandler.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "makePath",
      "description": "(Ljava/lang/String;Lorg/apache/zookeeper/ZooKeeper;)V",
      "class": "ZookeeperUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ZookeeperUtil.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "makePath",
      "description": "(Ljava/lang/String;[BLorg/apache/zookeeper/ZooKeeper;)V",
      "class": "ZookeeperUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ZookeeperUtil.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "makePath",
      "description": "(Ljava/lang/String;[BLorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/CreateMode;)V",
      "class": "ZookeeperUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ZookeeperUtil.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "makePath",
      "description": "(Ljava/lang/String;[BLorg/apache/zookeeper/ZooKeeper;Lorg/apache/zookeeper/CreateMode;Ljava/util/List;)V",
      "class": "ZookeeperUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ZookeeperUtil.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "exists",
      "description": "(Ljava/lang/String;Lorg/apache/zookeeper/ZooKeeper;)Z",
      "class": "ZookeeperUtil",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ZookeeperUtil.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getUnencodedValueKey",
      "description": "()Ljava/lang/String;",
      "class": "SearchFacetResultDTO",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetResultDTO.java",
      "line-number": 99,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getValueKey",
      "description": "()Ljava/lang/String;",
      "class": "SearchFacetResultDTO",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetResultDTO.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isFinalized",
      "description": "()Z",
      "class": "PromotionQualifier",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionQualifier.java",
      "line-number": 103,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "copy",
      "description": "()Lorg/broadleafcommerce/core/offer/service/discount/PromotionQualifier;",
      "class": "PromotionQualifier",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionQualifier.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "incrementQuantity",
      "description": "(I)V",
      "class": "PromotionQualifier",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionQualifier.java",
      "line-number": 68,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resetQty",
      "description": "(I)V",
      "class": "PromotionQualifier",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionQualifier.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "split",
      "description": "(I)Lorg/broadleafcommerce/core/offer/service/discount/PromotionQualifier;",
      "class": "PromotionQualifier",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "PromotionQualifier.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMatchRule",
      "description": "()Ljava/lang/String;",
      "class": "OfferOfferRuleXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferOfferRuleXrefImpl.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "\"\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createEntityInstance",
      "description": "()V",
      "class": "OfferOfferRuleXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferOfferRuleXrefImpl.java",
      "line-number": 145,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferOfferRuleXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferOfferRuleXrefImpl.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setMatchRule",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferOfferRuleXrefImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferOfferRuleXrefImpl.java",
      "line-number": 140,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isMissingRequiredAttribute",
      "description": "(ZZZZLjava/lang/String;)Z",
      "class": "ValidateProductOptionsActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateProductOptionsActivity.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrderItems",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "ValidateProductOptionsActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateProductOptionsActivity.java",
      "line-number": 109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldValidateWithException",
      "description": "(ZZZZ)Z",
      "class": "ValidateProductOptionsActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateProductOptionsActivity.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateProductOptionsActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateProductOptionsActivity.java",
      "line-number": 67,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSkuActiveDatesService",
      "description": "(Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuActiveDatesService;)V",
      "class": "SkuActiveDateConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuActiveDateConsiderationContext.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasDynamicActiveDates",
      "description": "()Z",
      "class": "SkuActiveDateConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuActiveDateConsiderationContext.java",
      "line-number": 54,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuActiveDatesService",
      "description": "()Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuActiveDatesService;",
      "class": "SkuActiveDateConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuActiveDateConsiderationContext.java",
      "line-number": 46,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuActiveDateConsiderationContext",
      "description": "()Ljava/util/HashMap;",
      "class": "SkuActiveDateConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuActiveDateConsiderationContext.java",
      "line-number": 38,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSkuActiveDateConsiderationContext",
      "description": "(Ljava/util/HashMap;)V",
      "class": "SkuActiveDateConsiderationContext",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "SkuActiveDateConsiderationContext.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineSubmitDate",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/Date;",
      "class": "CompleteOrderActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CompleteOrderActivity.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CompleteOrderActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CompleteOrderActivity.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "determineOrderNumber",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/lang/String;",
      "class": "CompleteOrderActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CompleteOrderActivity.java",
      "line-number": 61,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getWeightUnitOfMeasure",
      "description": "()Lorg/broadleafcommerce/common/util/WeightUnitOfMeasureType;",
      "class": "Weight",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Weight.java",
      "line-number": 58,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "Weight",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Weight.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setWeightUnitOfMeasure",
      "description": "(Lorg/broadleafcommerce/common/util/WeightUnitOfMeasureType;)V",
      "class": "Weight",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Weight.java",
      "line-number": 62,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "Weight",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "Weight.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "AddWorkflowPriceOrderIfNecessaryActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "AddWorkflowPriceOrderIfNecessaryActivity.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateChildOrderItem",
      "description": "(Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "AddWorkflowPriceOrderIfNecessaryActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "AddWorkflowPriceOrderIfNecessaryActivity.java",
      "line-number": 204,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOiFgiMap",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Ljava/util/Map;Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "AddWorkflowPriceOrderIfNecessaryActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "AddWorkflowPriceOrderIfNecessaryActivity.java",
      "line-number": 245,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkAndUpdateChildren",
      "description": "(Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;Lorg/broadleafcommerce/core/order/domain/OrderItem;)Z",
      "class": "AddWorkflowPriceOrderIfNecessaryActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "AddWorkflowPriceOrderIfNecessaryActivity.java",
      "line-number": 227,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFulfillmentGroupItemById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;",
      "class": "FulfillmentGroupItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupItemDaoImpl.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;",
      "class": "FulfillmentGroupItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupItemDaoImpl.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;",
      "class": "FulfillmentGroupItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupItemDaoImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroupItem;)V",
      "class": "FulfillmentGroupItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupItemDaoImpl.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFulfillmentGroupItemsForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Ljava/util/List;",
      "class": "FulfillmentGroupItemDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentGroupItemDaoImpl.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "()V",
      "class": "I18nSolrSearchServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "I18nSolrSearchServiceExtensionHandler.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTranslationEnabled",
      "description": "()Z",
      "class": "I18nSolrSearchServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "I18nSolrSearchServiceExtensionHandler.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPrefixListForIndexField",
      "description": "(Lorg/broadleafcommerce/core/search/domain/IndexField;Lorg/broadleafcommerce/core/search/domain/solr/FieldType;Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "I18nSolrSearchServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "I18nSolrSearchServiceExtensionHandler.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLocalePrefix",
      "description": "(Lorg/broadleafcommerce/core/search/domain/Field;Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "I18nSolrSearchServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "I18nSolrSearchServiceExtensionHandler.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllProductFields",
      "description": "()Ljava/util/List;",
      "class": "FieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "FieldDaoImpl.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFieldsByEntityType",
      "description": "(Lorg/broadleafcommerce/core/search/domain/FieldEntity;)Ljava/util/List;",
      "class": "FieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "FieldDaoImpl.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllSkuFields",
      "description": "()Ljava/util/List;",
      "class": "FieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "FieldDaoImpl.java",
      "line-number": 78,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/search/domain/Field;)Lorg/broadleafcommerce/core/search/domain/Field;",
      "class": "FieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "FieldDaoImpl.java",
      "line-number": 102,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFieldByAbbreviation",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/domain/Field;",
      "class": "FieldDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "FieldDaoImpl.java",
      "line-number": 48,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isCombinable",
      "description": "()Z",
      "class": "PromotableCandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateOrderOfferImpl.java",
      "line-number": 106,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculatePotentialSavings",
      "description": "()V",
      "class": "PromotableCandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateOrderOfferImpl.java",
      "line-number": 70,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarian",
      "description": "()Z",
      "class": "PromotableCandidateOrderOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateOrderOfferImpl.java",
      "line-number": 112,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "putLock",
      "description": "(Ljava/lang/Long;)Ljava/lang/Object;",
      "class": "CheckoutServiceImpl",
      "package": "org/broadleafcommerce/core/checkout/service",
      "file-name": "CheckoutServiceImpl.java",
      "line-number": 121,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "performCheckout",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/checkout/service/workflow/CheckoutResponse;",
      "class": "CheckoutServiceImpl",
      "package": "org/broadleafcommerce/core/checkout/service",
      "file-name": "CheckoutServiceImpl.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasOrderBeenCompleted",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Z",
      "class": "CheckoutServiceImpl",
      "package": "org/broadleafcommerce/core/checkout/service",
      "file-name": "CheckoutServiceImpl.java",
      "line-number": 110,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeLock",
      "description": "(Ljava/lang/Long;)V",
      "class": "CheckoutServiceImpl",
      "package": "org/broadleafcommerce/core/checkout/service",
      "file-name": "CheckoutServiceImpl.java",
      "line-number": 130,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getType",
      "description": "()Lorg/broadleafcommerce/core/order/domain/TaxType;",
      "class": "TaxDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxDetailImpl.java",
      "line-number": 129,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Lorg/broadleafcommerce/core/order/domain/TaxType;)V",
      "class": "TaxDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxDetailImpl.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "TaxDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxDetailImpl.java",
      "line-number": 219,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "TaxDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxDetailImpl.java",
      "line-number": 139,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setAmount",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "TaxDetailImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxDetailImpl.java",
      "line-number": 144,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readReviewByCustomerAndItem",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;Ljava/lang/String;)Lorg/broadleafcommerce/core/rating/domain/ReviewDetail;",
      "class": "ReviewDetailDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "ReviewDetailDaoImpl.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readReviewDetailById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/rating/domain/ReviewDetail;",
      "class": "ReviewDetailDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "ReviewDetailDaoImpl.java",
      "line-number": 43,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/rating/domain/ReviewDetail;",
      "class": "ReviewDetailDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "ReviewDetailDaoImpl.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createFeedback",
      "description": "()Lorg/broadleafcommerce/core/rating/domain/ReviewFeedback;",
      "class": "ReviewDetailDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "ReviewDetailDaoImpl.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveReviewDetail",
      "description": "(Lorg/broadleafcommerce/core/rating/domain/ReviewDetail;)Lorg/broadleafcommerce/core/rating/domain/ReviewDetail;",
      "class": "ReviewDetailDaoImpl",
      "package": "org/broadleafcommerce/core/rating/dao",
      "file-name": "ReviewDetailDaoImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "FixedPriceFulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FixedPriceFulfillmentOptionImpl.java",
      "line-number": 67,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "FixedPriceFulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FixedPriceFulfillmentOptionImpl.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FixedPriceFulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FixedPriceFulfillmentOptionImpl.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setPrice",
      "description": "(Lorg/broadleafcommerce/common/money/Money;)V",
      "class": "FixedPriceFulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FixedPriceFulfillmentOptionImpl.java",
      "line-number": 72,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getMinOrderQuantity",
      "description": "()Ljava/lang/Integer;",
      "class": "WeaveSkuMinOrderQuantity",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "WeaveSkuMinOrderQuantity.java",
      "line-number": 60,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "hasMinOrderQuantity",
      "description": "()Z",
      "class": "WeaveSkuMinOrderQuantity",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "WeaveSkuMinOrderQuantity.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "delete",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/CustomerOffer;)V",
      "class": "CustomerOfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "CustomerOfferDaoImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/CustomerOffer;",
      "class": "CustomerOfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "CustomerOfferDaoImpl.java",
      "line-number": 43,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCustomerOfferById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/offer/domain/CustomerOffer;",
      "class": "CustomerOfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "CustomerOfferDaoImpl.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/CustomerOffer;)Lorg/broadleafcommerce/core/offer/domain/CustomerOffer;",
      "class": "CustomerOfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "CustomerOfferDaoImpl.java",
      "line-number": 54,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readCustomerOffersByCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Ljava/util/List;",
      "class": "CustomerOfferDaoImpl",
      "package": "org/broadleafcommerce/core/offer/dao",
      "file-name": "CustomerOfferDaoImpl.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderMultishipOption;)Lorg/broadleafcommerce/core/order/domain/OrderMultishipOption;",
      "class": "OrderMultishipOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderMultishipOptionDaoImpl.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderMultishipOptions",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "OrderMultishipOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderMultishipOptionDaoImpl.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readOrderItemOrderMultishipOptions",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "OrderMultishipOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderMultishipOptionDaoImpl.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "deleteAll",
      "description": "(Ljava/util/List;)V",
      "class": "OrderMultishipOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderMultishipOptionDaoImpl.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderMultishipOption;",
      "class": "OrderMultishipOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderMultishipOptionDaoImpl.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderItemAttributeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemAttributeImpl.java",
      "line-number": 174,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderItemAttributeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemAttributeImpl.java",
      "line-number": 158,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkCloneable",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItemAttribute;)V",
      "class": "OrderItemAttributeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemAttributeImpl.java",
      "line-number": 122,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderItemAttribute;",
      "class": "OrderItemAttributeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemAttributeImpl.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferProrationType;",
      "class": "OfferProrationType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferProrationType.java",
      "line-number": 38,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferProrationType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferProrationType.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferProrationType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferProrationType.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTypes",
      "description": "()Ljava/util/List;",
      "class": "OfferProrationType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferProrationType.java",
      "line-number": 54,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "markReviewHelpful",
      "description": "(Ljava/lang/Long;Lorg/broadleafcommerce/profile/core/domain/Customer;Ljava/lang/Boolean;)V",
      "class": "RatingServiceImpl",
      "package": "org/broadleafcommerce/core/rating/service",
      "file-name": "RatingServiceImpl.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "reviewItem",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/rating/service/type/RatingType;Lorg/broadleafcommerce/profile/core/domain/Customer;Ljava/lang/Double;Ljava/lang/String;)V",
      "class": "RatingServiceImpl",
      "package": "org/broadleafcommerce/core/rating/service",
      "file-name": "RatingServiceImpl.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readReviews",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/rating/service/type/RatingType;IILorg/broadleafcommerce/core/rating/service/type/RatingSortType;)Ljava/util/List;",
      "class": "RatingServiceImpl",
      "package": "org/broadleafcommerce/core/rating/service",
      "file-name": "RatingServiceImpl.java",
      "line-number": 113,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rateItem",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/core/rating/service/type/RatingType;Lorg/broadleafcommerce/profile/core/domain/Customer;Ljava/lang/Double;)V",
      "class": "RatingServiceImpl",
      "package": "org/broadleafcommerce/core/rating/service",
      "file-name": "RatingServiceImpl.java",
      "line-number": 75,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readRatingSummaries",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/rating/service/type/RatingType;)Ljava/util/Map;",
      "class": "RatingServiceImpl",
      "package": "org/broadleafcommerce/core/rating/service",
      "file-name": "RatingServiceImpl.java",
      "line-number": 100,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "unregister",
      "description": "(Ljava/lang/String;)V",
      "class": "ReindexStateHolder",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "ReindexStateHolder.java",
      "line-number": 96,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "failFast",
      "description": "(Ljava/lang/Exception;)V",
      "class": "ReindexStateHolder",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "ReindexStateHolder.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;ZZ)Lorg/broadleafcommerce/core/search/service/solr/indexer/ReindexStateHolder;",
      "class": "ReindexStateHolder",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "ReindexStateHolder.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/service/solr/indexer/ReindexStateHolder;",
      "class": "ReindexStateHolder",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "ReindexStateHolder.java",
      "line-number": 67,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFailure",
      "description": "()Ljava/lang/Exception;",
      "class": "ReindexStateHolder",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "ReindexStateHolder.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isTotalitarian",
      "description": "()Z",
      "class": "PromotableOrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderAdjustmentImpl.java",
      "line-number": 153,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isCombinable",
      "description": "()Z",
      "class": "PromotableOrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderAdjustmentImpl.java",
      "line-number": 147,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeAdjustmentValue",
      "description": "()V",
      "class": "PromotableOrderAdjustmentImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableOrderAdjustmentImpl.java",
      "line-number": 81,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;",
      "class": "FulfillmentType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentType.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentType.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "FulfillmentType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentType.java",
      "line-number": 71,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionValidationType;",
      "class": "ProductOptionValidationType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionValidationType.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductOptionValidationType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionValidationType.java",
      "line-number": 67,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductOptionValidationType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionValidationType.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/CustomerMaxUsesStrategyType;",
      "class": "CustomerMaxUsesStrategyType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "CustomerMaxUsesStrategyType.java",
      "line-number": 40,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CustomerMaxUsesStrategyType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "CustomerMaxUsesStrategyType.java",
      "line-number": 80,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "CustomerMaxUsesStrategyType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "CustomerMaxUsesStrategyType.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentOption;)Lorg/broadleafcommerce/core/order/domain/FulfillmentOption;",
      "class": "FulfillmentOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentOptionDaoImpl.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFulfillmentOptionById",
      "description": "(Ljava/lang/Long;)Lorg/broadleafcommerce/core/order/domain/FulfillmentOption;",
      "class": "FulfillmentOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentOptionDaoImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllFulfillmentOptions",
      "description": "()Ljava/util/List;",
      "class": "FulfillmentOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentOptionDaoImpl.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readAllFulfillmentOptionsByFulfillmentType",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentType;)Ljava/util/List;",
      "class": "FulfillmentOptionDaoImpl",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "FulfillmentOptionDaoImpl.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductBundlePricingModelType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductBundlePricingModelType.java",
      "line-number": 64,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductBundlePricingModelType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductBundlePricingModelType.java",
      "line-number": 80,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/service/type/ProductBundlePricingModelType;",
      "class": "ProductBundlePricingModelType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductBundlePricingModelType.java",
      "line-number": 40,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "GiftWrapOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "GiftWrapOrderItemImpl.java",
      "line-number": 96,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/domain/OrderItem;",
      "class": "GiftWrapOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "GiftWrapOrderItemImpl.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "GiftWrapOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "GiftWrapOrderItemImpl.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductType.java",
      "line-number": 65,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest.testProductSiteMapGenerator(org.broadleafcommerce.core.catalog.service.ProductSiteMapGeneratorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductType.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/service/type/ProductType;",
      "class": "ProductType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductType.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductOptionType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionType.java",
      "line-number": 90,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductOptionType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionType.java",
      "line-number": 74,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionType;",
      "class": "ProductOptionType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionType.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCustomerPaymentFromPaymentTransaction",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)Lorg/broadleafcommerce/profile/core/domain/CustomerPayment;",
      "class": "OrderPaymentServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentServiceImpl.java",
      "line-number": 158,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createTransaction",
      "description": "()Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;",
      "class": "OrderPaymentServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentServiceImpl.java",
      "line-number": 102,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCustomerPaymentToken",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/CustomerPayment;Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)V",
      "class": "OrderPaymentServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentServiceImpl.java",
      "line-number": 172,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrderPaymentFromCustomerPayment",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;Lorg/broadleafcommerce/profile/core/domain/CustomerPayment;Lorg/broadleafcommerce/common/money/Money;)Lorg/broadleafcommerce/core/payment/domain/OrderPayment;",
      "class": "OrderPaymentServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderPaymentServiceImpl.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ReviewStatusType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "ReviewStatusType.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/rating/service/type/ReviewStatusType;",
      "class": "ReviewStatusType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "ReviewStatusType.java",
      "line-number": 35,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "ReviewStatusType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "ReviewStatusType.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/service/type/SkuFeeType;",
      "class": "SkuFeeType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "SkuFeeType.java",
      "line-number": 39,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "SkuFeeType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "SkuFeeType.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SkuFeeType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "SkuFeeType.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getEntriesSince",
      "description": "(J)Ljava/util/Set;",
      "class": "ResourcePurgeServiceImpl$PurgeErrorCache",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 511,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "add",
      "description": "(Ljava/lang/Long;)Ljava/lang/Long;",
      "class": "ResourcePurgeServiceImpl$PurgeErrorCache",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 504,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "0L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "DynamicSkuPrices",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DynamicSkuPrices.java",
      "line-number": 80,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen.testGetPrice1(org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen.testGetPrice2(org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen.testGetPrice2(org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen)",
            "org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen.testGetPrice1(org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen)",
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testZeroOrderSavings(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testDistributeOneDollarAcrossFiveItems(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistribution(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest.testBundleDistributionWithoutItemSum(org.broadleafcommerce.core.pricing.service.workflow.FulfillmentItemPricingActivityTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen.testGetPrice2(org.broadleafcommerce.core.catalog.service.dynamic.TestDynamicSkuPricesPanktiGen)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDidOverride",
      "description": "()Ljava/lang/Boolean;",
      "class": "DynamicSkuPrices",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DynamicSkuPrices.java",
      "line-number": 93,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/domain/TaxType;",
      "class": "TaxType",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxType.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "TaxType",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxType.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "TaxType",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "TaxType.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSkuMediaBySkuId",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "SkuMediaServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuMediaServiceImpl.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "sort",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "SkuMediaServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuMediaServiceImpl.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isOrderedSkuMediaEnabled",
      "description": "()Z",
      "class": "SkuMediaServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "SkuMediaServiceImpl.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferAdjustmentType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferAdjustmentType.java",
      "line-number": 95,
      "classification": "partially-tested",
      "detected": [
        "true"
      ],
      "not-detected": [
        "false"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "false",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferAdjustmentType;",
      "class": "OfferAdjustmentType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferAdjustmentType.java",
      "line-number": 55,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferAdjustmentType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferAdjustmentType.java",
      "line-number": 71,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/payment/service/type/OrderPaymentStatus;",
      "class": "OrderPaymentStatus",
      "package": "org/broadleafcommerce/core/payment/service/type",
      "file-name": "OrderPaymentStatus.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OrderPaymentStatus",
      "package": "org/broadleafcommerce/core/payment/service/type",
      "file-name": "OrderPaymentStatus.java",
      "line-number": 112,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderPaymentStatus",
      "package": "org/broadleafcommerce/core/payment/service/type",
      "file-name": "OrderPaymentStatus.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderStatus",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "OrderStatus.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/service/type/OrderStatus;",
      "class": "OrderStatus",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "OrderStatus.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OrderStatus",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "OrderStatus.java",
      "line-number": 98,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findStoreDistance",
      "description": "(Lorg/broadleafcommerce/core/store/domain/Store;Ljava/lang/Integer;)Ljava/lang/Double;",
      "class": "StoreServiceImpl",
      "package": "org/broadleafcommerce/core/store/service",
      "file-name": "StoreServiceImpl.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0.0",
        "1.0",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1.0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findStoresByAddress",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Address;D)Ljava/util/Map;",
      "class": "StoreServiceImpl",
      "package": "org/broadleafcommerce/core/store/service",
      "file-name": "StoreServiceImpl.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferRuleType;",
      "class": "OfferRuleType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferRuleType.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferRuleType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferRuleType.java",
      "line-number": 58,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferRuleType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferRuleType.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addFixedTarget",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferPriceData;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)V",
      "class": "CandidatePromotionItems",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "CandidatePromotionItems.java",
      "line-number": 61,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllCandidateTargets",
      "description": "()Ljava/util/Set;",
      "class": "CandidatePromotionItems",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "CandidatePromotionItems.java",
      "line-number": 98,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addQualifier",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)V",
      "class": "CandidatePromotionItems",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "CandidatePromotionItems.java",
      "line-number": 43,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addTarget",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/OfferItemCriteria;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)V",
      "class": "CandidatePromotionItems",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "CandidatePromotionItems.java",
      "line-number": 52,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLocked",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderLockImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderLockImpl.java",
      "line-number": 61,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setLocked",
      "description": "(Ljava/lang/Boolean;)V",
      "class": "OrderLockImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderLockImpl.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderToPaymentRequestDTOServiceImpl$NameResponse",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 345,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canEqual",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderToPaymentRequestDTOServiceImpl$NameResponse",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "OrderToPaymentRequestDTOServiceImpl.java",
      "line-number": 345,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/inventory/service/type/InventoryType;",
      "class": "InventoryType",
      "package": "org/broadleafcommerce/core/inventory/service/type",
      "file-name": "InventoryType.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "InventoryType",
      "package": "org/broadleafcommerce/core/inventory/service/type",
      "file-name": "InventoryType.java",
      "line-number": 73,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "InventoryType",
      "package": "org/broadleafcommerce/core/inventory/service/type",
      "file-name": "InventoryType.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderItemType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "OrderItemType.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OrderItemType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "OrderItemType.java",
      "line-number": 68,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/service/type/OrderItemType;",
      "class": "OrderItemType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "OrderItemType.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getNewOfferCodesFromCustomer",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "OfferActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "OfferActivity.java",
      "line-number": 103,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "OfferActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "OfferActivity.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOfferCount",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)I",
      "class": "OfferActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "OfferActivity.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateAddressInfo",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/AddressDTO;Lorg/broadleafcommerce/profile/core/domain/Address;)V",
      "class": "PaymentResponseDTOToEntityServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "PaymentResponseDTOToEntityServiceImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateBillingInfo",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/core/payment/domain/OrderPayment;Lorg/broadleafcommerce/profile/core/domain/Address;Z)V",
      "class": "PaymentResponseDTOToEntityServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "PaymentResponseDTOToEntityServiceImpl.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCustomerPaymentToken",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/profile/core/domain/CustomerPayment;)V",
      "class": "PaymentResponseDTOToEntityServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "PaymentResponseDTOToEntityServiceImpl.java",
      "line-number": 167,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateShippingInfo",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "PaymentResponseDTOToEntityServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "PaymentResponseDTOToEntityServiceImpl.java",
      "line-number": 89,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentGroupStatusType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentGroupStatusType.java",
      "line-number": 123,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/service/type/FulfillmentGroupStatusType;",
      "class": "FulfillmentGroupStatusType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentGroupStatusType.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "FulfillmentGroupStatusType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentGroupStatusType.java",
      "line-number": 107,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferItemRestrictionRuleType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferItemRestrictionRuleType.java",
      "line-number": 62,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferItemRestrictionRuleType;",
      "class": "OfferItemRestrictionRuleType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferItemRestrictionRuleType.java",
      "line-number": 46,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferItemRestrictionRuleType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferItemRestrictionRuleType.java",
      "line-number": 86,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsTarget(org.broadleafcommerce.core.order.domain.OrderItemTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.order.domain.OrderItemTest.testGetQuantityAvailableToBeUsedAsQualifier(org.broadleafcommerce.core.order.domain.OrderItemTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canCalculateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Lorg/broadleafcommerce/core/order/domain/FulfillmentOption;)Z",
      "class": "FixedPriceFulfillmentPricingProvider",
      "package": "org/broadleafcommerce/core/pricing/service/fulfillment/provider",
      "file-name": "FixedPriceFulfillmentPricingProvider.java",
      "line-number": 40,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.provider.TestFixedPriceFulfillmentPricingProviderPanktiGen"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.provider.TestFixedPriceFulfillmentPricingProviderPanktiGen"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.provider.TestFixedPriceFulfillmentPricingProviderPanktiGen"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.provider.TestFixedPriceFulfillmentPricingProviderPanktiGen",
            "org.broadleafcommerce.core.pricing.service.fulfillment.provider.TestFixedPriceFulfillmentPricingProviderPanktiGen"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "estimateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Ljava/util/Set;)Lorg/broadleafcommerce/core/pricing/service/fulfillment/provider/FulfillmentEstimationResponse;",
      "class": "FixedPriceFulfillmentPricingProvider",
      "package": "org/broadleafcommerce/core/pricing/service/fulfillment/provider",
      "file-name": "FixedPriceFulfillmentPricingProvider.java",
      "line-number": 60,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest.testNullFulfillmentOptionInEstimation(org.broadleafcommerce.core.pricing.service.fulfillment.FixedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FixedPriceFulfillmentPricingProvider",
      "package": "org/broadleafcommerce/core/pricing/service/fulfillment/provider",
      "file-name": "FixedPriceFulfillmentPricingProvider.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferDiscountType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferDiscountType.java",
      "line-number": 57,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateMaxUsesForItemCriteria(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferDiscountType;",
      "class": "OfferDiscountType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferDiscountType.java",
      "line-number": 41,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferDiscountType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferDiscountType.java",
      "line-number": 81,
      "classification": "tested",
      "detected": [
        "true",
        "false"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOffer",
      "description": "()Lorg/broadleafcommerce/core/offer/domain/Offer;",
      "class": "OrderItemQualifierImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemQualifierImpl.java",
      "line-number": 108,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setOffer",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OrderItemQualifierImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemQualifierImpl.java",
      "line-number": 102,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 3,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderItemQualifierImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderItemQualifierImpl.java",
      "line-number": 147,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/service/type/FulfillmentBandResultAmountType;",
      "class": "FulfillmentBandResultAmountType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentBandResultAmountType.java",
      "line-number": 41,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "FulfillmentBandResultAmountType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentBandResultAmountType.java",
      "line-number": 67,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentBandResultAmountType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "FulfillmentBandResultAmountType.java",
      "line-number": 83,
      "classification": "tested",
      "detected": [
        "false",
        "true"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "true",
          "tests-run": 4,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "onApplicationEvent",
      "description": "(Lorg/springframework/context/event/ContextRefreshedEvent;)V",
      "class": "BaseProcessor",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "BaseProcessor.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBeanDesc",
      "description": "()Ljava/lang/String;",
      "class": "BaseProcessor",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "BaseProcessor.java",
      "line-number": 189,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "RelatedProductTypeEnum",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "RelatedProductTypeEnum.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "RelatedProductTypeEnum",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "RelatedProductTypeEnum.java",
      "line-number": 68,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/domain/RelatedProductTypeEnum;",
      "class": "RelatedProductTypeEnum",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "RelatedProductTypeEnum.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "RatingType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "RatingType.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "RatingType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "RatingType.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/rating/service/type/RatingType;",
      "class": "RatingType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "RatingType.java",
      "line-number": 33,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/catalog/service/type/ProductOptionValidationStrategyType;",
      "class": "ProductOptionValidationStrategyType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionValidationStrategyType.java",
      "line-number": 43,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "ProductOptionValidationStrategyType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionValidationStrategyType.java",
      "line-number": 75,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductOptionValidationStrategyType",
      "package": "org/broadleafcommerce/core/catalog/service/type",
      "file-name": "ProductOptionValidationStrategyType.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isExcludedSearchFacet",
      "description": "(Lorg/broadleafcommerce/core/search/domain/CategorySearchFacet;)Z",
      "class": "CategoryImpl$1",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "evaluate",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryImpl$1",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1125,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "estimateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Ljava/util/Set;)Lorg/broadleafcommerce/core/pricing/service/fulfillment/provider/FulfillmentEstimationResponse;",
      "class": "BandedFulfillmentPricingProvider",
      "package": "org/broadleafcommerce/core/pricing/service/fulfillment/provider",
      "file-name": "BandedFulfillmentPricingProvider.java",
      "line-number": 96,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "BandedFulfillmentPricingProvider",
      "package": "org/broadleafcommerce/core/pricing/service/fulfillment/provider",
      "file-name": "BandedFulfillmentPricingProvider.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canCalculateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Lorg/broadleafcommerce/core/order/domain/FulfillmentOption;)Z",
      "class": "BandedFulfillmentPricingProvider",
      "package": "org/broadleafcommerce/core/pricing/service/fulfillment/provider",
      "file-name": "BandedFulfillmentPricingProvider.java",
      "line-number": 64,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 8,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "RatingSortType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "RatingSortType.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/rating/service/type/RatingSortType;",
      "class": "RatingSortType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "RatingSortType.java",
      "line-number": 36,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "RatingSortType",
      "package": "org/broadleafcommerce/core/rating/service/type",
      "file-name": "RatingSortType.java",
      "line-number": 66,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "MessageType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "MessageType.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/order/service/type/MessageType;",
      "class": "MessageType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "MessageType.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "MessageType",
      "package": "org/broadleafcommerce/core/order/service/type",
      "file-name": "MessageType.java",
      "line-number": 68,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setType",
      "description": "(Ljava/lang/String;)V",
      "class": "OfferTimeZoneType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferTimeZoneType.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferTimeZoneType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferTimeZoneType.java",
      "line-number": 94,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getInstance",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/offer/service/type/OfferTimeZoneType;",
      "class": "OfferTimeZoneType",
      "package": "org/broadleafcommerce/core/offer/service/type",
      "file-name": "OfferTimeZoneType.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getChildOrderItems",
      "description": "()Ljava/util/List;",
      "class": "OrderItemRequestDTO",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "OrderItemRequestDTO.java",
      "line-number": 156,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getHasConfigurationError",
      "description": "()Ljava/lang/Boolean;",
      "class": "OrderItemRequestDTO",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "OrderItemRequestDTO.java",
      "line-number": 191,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "null",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateAndConfirmPaymentActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateAndConfirmPaymentActivity.java",
      "line-number": 121,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createCustomerPaymentToken",
      "description": "(Lorg/broadleafcommerce/core/payment/domain/PaymentTransaction;)Lorg/broadleafcommerce/profile/core/domain/CustomerPayment;",
      "class": "ValidateAndConfirmPaymentActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateAndConfirmPaymentActivity.java",
      "line-number": 335,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleUnsuccessfulTransactions",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/workflow/ProcessContext;)V",
      "class": "ValidateAndConfirmPaymentActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateAndConfirmPaymentActivity.java",
      "line-number": 285,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSynonyms",
      "description": "()[Ljava/lang/String;",
      "class": "SearchSynonymImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchSynonymImpl.java",
      "line-number": 74,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "empty"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "empty",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSynonyms",
      "description": "([Ljava/lang/String;)V",
      "class": "SearchSynonymImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchSynonymImpl.java",
      "line-number": 78,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CategoryProductXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryProductXrefImpl.java",
      "line-number": 180,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryProductXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryProductXrefImpl.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "ProductOptionXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionXrefImpl.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "ProductOptionXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductOptionXrefImpl.java",
      "line-number": 131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "SearchFacetRangeImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetRangeImpl.java",
      "line-number": 169,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SearchFacetRangeImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetRangeImpl.java",
      "line-number": 156,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAbbreviation",
      "description": "()Ljava/lang/String;",
      "class": "SearchFacetDTO",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchFacetDTO.java",
      "line-number": 67,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderAttributeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderAttributeImpl.java",
      "line-number": 143,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderAttributeImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderAttributeImpl.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "cancelTax",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "TaxServiceImpl",
      "package": "org/broadleafcommerce/core/pricing/service",
      "file-name": "TaxServiceImpl.java",
      "line-number": 119,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateTaxForOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "TaxServiceImpl",
      "package": "org/broadleafcommerce/core/pricing/service",
      "file-name": "TaxServiceImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "commitTaxForOrder",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "TaxServiceImpl",
      "package": "org/broadleafcommerce/core/pricing/service",
      "file-name": "TaxServiceImpl.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "create",
      "description": "(Lorg/broadleafcommerce/common/payment/PaymentType;)Lorg/broadleafcommerce/core/payment/domain/secure/Referenced;",
      "class": "SecureOrderPaymentServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "SecureOrderPaymentServiceImpl.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSecurePaymentInfo",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/common/payment/PaymentType;)Lorg/broadleafcommerce/core/payment/domain/secure/Referenced;",
      "class": "SecureOrderPaymentServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "SecureOrderPaymentServiceImpl.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findAndRemoveSecurePaymentInfo",
      "description": "(Ljava/lang/String;Lorg/broadleafcommerce/common/payment/PaymentType;)V",
      "class": "SecureOrderPaymentServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "SecureOrderPaymentServiceImpl.java",
      "line-number": 98,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCurrentDateAfterFactoringInDateResolution",
      "description": "()Ljava/util/Date;",
      "class": "SearchRedirectDaoImpl",
      "package": "org/broadleafcommerce/core/search/redirect/dao",
      "file-name": "SearchRedirectDaoImpl.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSearchRedirectBySearchTerm",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/redirect/domain/SearchRedirect;",
      "class": "SearchRedirectDaoImpl",
      "package": "org/broadleafcommerce/core/search/redirect/dao",
      "file-name": "SearchRedirectDaoImpl.java",
      "line-number": 69,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildFindSearchRedirectBySearchTermCriteria",
      "description": "(Ljava/lang/String;)Ljavax/persistence/criteria/CriteriaQuery;",
      "class": "SearchRedirectDaoImpl",
      "package": "org/broadleafcommerce/core/search/redirect/dao",
      "file-name": "SearchRedirectDaoImpl.java",
      "line-number": 82,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Boolean;",
      "class": "ReentrantDistributedZookeeperLock$5",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 500,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Boolean;",
      "class": "ReentrantDistributedZookeeperLock$4",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 474,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/String;",
      "class": "ReentrantDistributedZookeeperLock$2",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 413,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "null",
        "\"A\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRollbackStateLocal",
      "description": "()Lorg/broadleafcommerce/core/workflow/state/RollbackStateLocal;",
      "class": "RollbackStateLocal",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "RollbackStateLocal.java",
      "line-number": 35,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRollbackStateLocal",
      "description": "(Lorg/broadleafcommerce/core/workflow/state/RollbackStateLocal;)V",
      "class": "RollbackStateLocal",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "RollbackStateLocal.java",
      "line-number": 39,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clearRollbackStateLocal",
      "description": "()V",
      "class": "RollbackStateLocal",
      "package": "org/broadleafcommerce/core/workflow/state",
      "file-name": "RollbackStateLocal.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "LegacyOfferUsesImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "LegacyOfferUsesImpl.java",
      "line-number": 101,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "LegacyOfferUsesImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "LegacyOfferUsesImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferItemCriteriaImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferItemCriteriaImpl.java",
      "line-number": 128,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferItemCriteriaImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferItemCriteriaImpl.java",
      "line-number": 142,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldApplyFeeToFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/SkuFee;Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Z",
      "class": "ConsolidateFulfillmentFeesActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "ConsolidateFulfillmentFeesActivity.java",
      "line-number": 109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ConsolidateFulfillmentFeesActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "ConsolidateFulfillmentFeesActivity.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transform",
      "description": "(Ljava/lang/Object;)Ljava/lang/String;",
      "class": "BLCPromotionMessageUtils$2",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 66,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transform",
      "description": "(Ljava/lang/Object;)Ljava/lang/String;",
      "class": "BLCPromotionMessageUtils$4",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transform",
      "description": "(Ljava/lang/Object;)Ljava/lang/String;",
      "class": "BLCPromotionMessageUtils$1",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"A\"",
        "null",
        "\"\""
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SkuProductOptionValueXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuProductOptionValueXrefImpl.java",
      "line-number": 136,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "SkuProductOptionValueXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuProductOptionValueXrefImpl.java",
      "line-number": 120,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferInfoImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferInfoImpl.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferInfoImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferInfoImpl.java",
      "line-number": 109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setFieldType",
      "description": "(Lorg/broadleafcommerce/core/search/domain/solr/FieldType;)V",
      "class": "IndexFieldTypeImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "IndexFieldTypeImpl.java",
      "line-number": 122,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getFieldType",
      "description": "()Lorg/broadleafcommerce/core/search/domain/solr/FieldType;",
      "class": "IndexFieldTypeImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "IndexFieldTypeImpl.java",
      "line-number": 117,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest.testConvert(org.broadleafcommerce.core.search.service.solr.MvelToSearchCriteriaConversionServiceImplTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "IndexFieldTypeImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "IndexFieldTypeImpl.java",
      "line-number": 137,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSingleField",
      "description": "(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;",
      "class": "DefaultDynamicSkuPricingInvocationHandler",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DefaultDynamicSkuPricingInvocationHandler.java",
      "line-number": 96,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "invoke",
      "description": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;",
      "class": "DefaultDynamicSkuPricingInvocationHandler",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DefaultDynamicSkuPricingInvocationHandler.java",
      "line-number": 113,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "reset",
      "description": "()V",
      "class": "DefaultDynamicSkuPricingInvocationHandler",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DefaultDynamicSkuPricingInvocationHandler.java",
      "line-number": 127,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "doActivities",
      "description": "()Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "SequenceProcessor",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "SequenceProcessor.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "processShouldStop",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;Lorg/broadleafcommerce/core/workflow/Activity;)Z",
      "class": "SequenceProcessor",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "SequenceProcessor.java",
      "line-number": 140,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CategoryXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryXrefImpl.java",
      "line-number": 152,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryXrefImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryXrefImpl.java",
      "line-number": 131,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "generateImageUrl",
      "description": "(Lorg/broadleafcommerce/common/sitemap/service/SiteMapBuilder;Lorg/broadleafcommerce/common/media/domain/Media;)Ljava/lang/String;",
      "class": "BroadleafSitemapUtils",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "BroadleafSitemapUtils.java",
      "line-number": 30,
      "classification": "tested",
      "detected": [
        "null",
        "\"A\"",
        "\"\""
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"A\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "\"\"",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest.testCategorySiteMapGenerator(org.broadleafcommerce.core.catalog.service.CategorySiteMapGeneratorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resolveJSONFacet",
      "description": "(Lorg/apache/solr/common/util/NamedList;)Lorg/broadleafcommerce/core/search/service/solr/SolrJSONFacet;",
      "class": "SolrJSONFacetServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacetServiceImpl.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resolveJSONFacetResponse",
      "description": "(Lorg/apache/solr/client/solrj/response/QueryResponse;)Ljava/util/Map;",
      "class": "SolrJSONFacetServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacetServiceImpl.java",
      "line-number": 39,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "resolveJSONFacetList",
      "description": "(Ljava/util/List;)Ljava/util/List;",
      "class": "SolrJSONFacetServiceImpl",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrJSONFacetServiceImpl.java",
      "line-number": 78,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "startRunning",
      "description": "()V",
      "class": "AbstractSolrIndexUpdateServiceImpl$CommandCoordinator",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 233,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "run",
      "description": "()V",
      "class": "AbstractSolrIndexUpdateServiceImpl$CommandCoordinator",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 181,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "stopRunning",
      "description": "()V",
      "class": "AbstractSolrIndexUpdateServiceImpl$CommandCoordinator",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateServiceImpl.java",
      "line-number": 229,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "PersonalMessageImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "PersonalMessageImpl.java",
      "line-number": 125,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "PersonalMessageImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "PersonalMessageImpl.java",
      "line-number": 149,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FeaturedProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "FeaturedProductImpl.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "FeaturedProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "FeaturedProductImpl.java",
      "line-number": 171,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuPrices",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/pricing/SkuPriceWrapper;Ljava/util/HashMap;)Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuPrices;",
      "class": "DefaultDynamicSkuPricingServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DefaultDynamicSkuPricingServiceImpl.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getSkuBundleItemPrice",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/SkuBundleItem;Ljava/util/HashMap;)Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuPrices;",
      "class": "DefaultDynamicSkuPricingServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DefaultDynamicSkuPricingServiceImpl.java",
      "line-number": 62,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getPriceAdjustment",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOptionValueImpl;Lorg/broadleafcommerce/common/money/Money;Ljava/util/HashMap;)Lorg/broadleafcommerce/core/catalog/service/dynamic/DynamicSkuPrices;",
      "class": "DefaultDynamicSkuPricingServiceImpl",
      "package": "org/broadleafcommerce/core/catalog/service/dynamic",
      "file-name": "DefaultDynamicSkuPricingServiceImpl.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldExecute",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/util/Map;)Z",
      "class": "DecrementInventoryRollbackHandler",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "DecrementInventoryRollbackHandler.java",
      "line-number": 116,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackState",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/util/Map;)V",
      "class": "DecrementInventoryRollbackHandler",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "DecrementInventoryRollbackHandler.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "lookupOrderForCustomer",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "AbstractCartRuleProcessor",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "AbstractCartRuleProcessor.java",
      "line-number": 38,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkItemCriteria",
      "description": "(Lorg/broadleafcommerce/common/structure/dto/ItemCriteriaDTO;Ljava/util/List;)Z",
      "class": "AbstractCartRuleProcessor",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "AbstractCartRuleProcessor.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transform",
      "description": "(Ljava/lang/Object;)Ljava/lang/Long;",
      "class": "SolrIndexServiceImpl$3",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 423,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1L",
        "0L",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0L",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OfferRuleImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferRuleImpl.java",
      "line-number": 140,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferRuleImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferRuleImpl.java",
      "line-number": 118,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategorySearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "CategorySearchFacetImpl.java",
      "line-number": 134,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CategorySearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "CategorySearchFacetImpl.java",
      "line-number": 154,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "releaseLock",
      "description": "()V",
      "class": "GlobalSolrFullReIndexOperation",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "GlobalSolrFullReIndexOperation.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "obtainLock",
      "description": "()Z",
      "class": "GlobalSolrFullReIndexOperation",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "GlobalSolrFullReIndexOperation.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "CategoryExcludedSearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "CategoryExcludedSearchFacetImpl.java",
      "line-number": 144,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryExcludedSearchFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "CategoryExcludedSearchFacetImpl.java",
      "line-number": 121,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "UpSaleProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "UpSaleProductImpl.java",
      "line-number": 157,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "UpSaleProductImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "UpSaleProductImpl.java",
      "line-number": 184,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Integer;",
      "class": "ZookeeperDistributedQueue$1",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 247,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "copyProperties",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/AbstractOrderItemRequest;)V",
      "class": "AbstractOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "AbstractOrderItemRequest.java",
      "line-number": 127,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "AbstractOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "AbstractOrderItemRequest.java",
      "line-number": 141,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getBasePrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableCandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateFulfillmentGroupOfferImpl.java",
      "line-number": 56,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "computeDiscountedAmount",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableCandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateFulfillmentGroupOfferImpl.java",
      "line-number": 68,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getDiscountedPrice",
      "description": "()Lorg/broadleafcommerce/common/money/Money;",
      "class": "PromotableCandidateFulfillmentGroupOfferImpl",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "PromotableCandidateFulfillmentGroupOfferImpl.java",
      "line-number": 88,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Boolean;",
      "class": "ZookeeperUtil$2",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ZookeeperUtil.java",
      "line-number": 149,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null",
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "canHandle",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCloneable;)Z",
      "class": "OfferDuplicateModifier",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferDuplicateModifier.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "modifyInitialDuplicateState",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)V",
      "class": "OfferDuplicateModifier",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferDuplicateModifier.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getKey",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchFacetDTO;)Ljava/lang/String;",
      "class": "SolrHelperServiceImpl$2",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 890,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "\"\"",
        "\"A\"",
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "\"\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "\"A\"",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Product;Lorg/broadleafcommerce/core/catalog/domain/Product;)I",
      "class": "SolrSearchServiceImpl$1",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrSearchServiceImpl.java",
      "line-number": 557,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OrderLockImpl$OrderLockPk",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderLockImpl.java",
      "line-number": 126,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "SiteReindexCommand",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "SiteReindexCommand.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CustomerOfferImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "CustomerOfferImpl.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "matches",
      "description": "(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Z",
      "class": "ImportSQLConfig$GiftCardAndCustomerCreditExistCondition",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 92,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CatalogReindexCommand",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogReindexCommand.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateProductCatalogStructure",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/search/dao/CatalogStructure;)V",
      "class": "SolrIndexDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SolrIndexDaoImpl.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readFullCategoryHierarchy",
      "description": "(Ljava/util/Map;Ljava/util/Set;)V",
      "class": "SolrIndexDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SolrIndexDaoImpl.java",
      "line-number": 130,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findBestZipCode",
      "description": "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Long;)Lorg/broadleafcommerce/core/store/domain/ZipCode;",
      "class": "ZipCodeDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "ZipCodeDaoImpl.java",
      "line-number": 46,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findZipCodeByZipCode",
      "description": "(Ljava/lang/Integer;)Lorg/broadleafcommerce/core/store/domain/ZipCode;",
      "class": "ZipCodeDaoImpl",
      "package": "org/broadleafcommerce/core/store/dao",
      "file-name": "ZipCodeDaoImpl.java",
      "line-number": 36,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkForMatch",
      "description": "(Lorg/broadleafcommerce/common/page/dto/PageDTO;Ljava/util/Map;)Z",
      "class": "PageCartRuleProcessor",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "PageCartRuleProcessor.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getReviewFeedback",
      "description": "()Ljava/util/List;",
      "class": "ReviewDetailImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "ReviewDetailImpl.java",
      "line-number": 184,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getStatus",
      "description": "()Lorg/broadleafcommerce/core/rating/service/type/ReviewStatusType;",
      "class": "ReviewDetailImpl",
      "package": "org/broadleafcommerce/core/rating/domain",
      "file-name": "ReviewDetailImpl.java",
      "line-number": 154,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "checkForMatch",
      "description": "(Lorg/broadleafcommerce/common/structure/dto/StructuredContentDTO;Ljava/util/Map;)Z",
      "class": "StructuredContentCartRuleProcessor",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "StructuredContentCartRuleProcessor.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getGeolocationAPI",
      "description": "()Lorg/broadleafcommerce/core/geolocation/GeolocationAPI;",
      "class": "GeolocationServiceImpl",
      "package": "org/broadleafcommerce/core/geolocation",
      "file-name": "GeolocationServiceImpl.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getLocationData",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/geolocation/GeolocationDTO;",
      "class": "GeolocationServiceImpl",
      "package": "org/broadleafcommerce/core/geolocation",
      "file-name": "GeolocationServiceImpl.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/promotionMessage/dto/PromotionMessageDTO;Lorg/broadleafcommerce/core/promotionMessage/dto/PromotionMessageDTO;)I",
      "class": "BLCPromotionMessageUtils$3",
      "package": "org/broadleafcommerce/core/promotionMessage/util",
      "file-name": "BLCPromotionMessageUtils.java",
      "line-number": 93,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "shouldExecute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Z",
      "class": "AbstractCheckAvailabilityActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "AbstractCheckAvailabilityActivity.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "GiftWrapOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "GiftWrapOrderItemRequest.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getAllSynonyms",
      "description": "()Ljava/util/List;",
      "class": "SearchSynonymDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchSynonymDaoImpl.java",
      "line-number": 37,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "updateSynonym",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchSynonym;)V",
      "class": "SearchSynonymDaoImpl",
      "package": "org/broadleafcommerce/core/search/dao",
      "file-name": "SearchSynonymDaoImpl.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItemPriceDetail;)I",
      "class": "OfferServiceUtilitiesImpl$1",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceUtilitiesImpl.java",
      "line-number": 95,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "0",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getWeightUnitOfMeasure",
      "description": "()Lorg/broadleafcommerce/common/util/WeightUnitOfMeasureType;",
      "class": "FulfillmentWeightBandImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FulfillmentWeightBandImpl.java",
      "line-number": 115,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setWeightUnitOfMeasure",
      "description": "(Lorg/broadleafcommerce/common/util/WeightUnitOfMeasureType;)V",
      "class": "FulfillmentWeightBandImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FulfillmentWeightBandImpl.java",
      "line-number": 120,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "void",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "readSkuMediaBySkuId",
      "description": "(Ljava/lang/Long;)Ljava/util/List;",
      "class": "SkuMediaDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuMediaDaoImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "save",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/SkuMediaXref;)Lorg/broadleafcommerce/core/catalog/domain/SkuMediaXref;",
      "class": "SkuMediaDaoImpl",
      "package": "org/broadleafcommerce/core/catalog/dao",
      "file-name": "SkuMediaDaoImpl.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setResultAmountType",
      "description": "(Lorg/broadleafcommerce/core/order/service/type/FulfillmentBandResultAmountType;)V",
      "class": "FulfillmentBandImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FulfillmentBandImpl.java",
      "line-number": 62,
      "classification": "tested",
      "detected": [
        "void"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "void",
          "tests-run": 5,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesExclusive(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getResultAmountType",
      "description": "()Lorg/broadleafcommerce/core/order/service/type/FulfillmentBandResultAmountType;",
      "class": "FulfillmentBandImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "FulfillmentBandImpl.java",
      "line-number": 57,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
        "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testFlatRatesWithBands(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testMinimumAmountsWithZero(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandPercentage(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRate(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testWeightBandsWithQuantities(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)",
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testPriceBandRatesWithPercentages(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest.testLowestPriceSelection(org.broadleafcommerce.core.pricing.service.fulfillment.BandedPriceFulfillmentTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "TotalActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "TotalActivity.java",
      "line-number": 52,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setTaxSums",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "TotalActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "TotalActivity.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/ProductOptionXref;Lorg/broadleafcommerce/core/catalog/domain/ProductOptionXref;)I",
      "class": "ProductImpl$1",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "ProductImpl.java",
      "line-number": 965,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FullReindexCommand",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "FullReindexCommand.java",
      "line-number": 38,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;Lorg/broadleafcommerce/core/order/service/call/OrderItemRequestDTO;)I",
      "class": "OrderItemRequestDTO$1",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "OrderItemRequestDTO.java",
      "line-number": 159,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackRefund",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;",
      "class": "PassthroughPaymentRollbackServiceImpl",
      "package": "org/broadleafcommerce/core/checkout/service/gateway",
      "file-name": "PassthroughPaymentRollbackServiceImpl.java",
      "line-number": 105,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackCapture",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;)Lorg/broadleafcommerce/common/payment/dto/PaymentResponseDTO;",
      "class": "PassthroughPaymentRollbackServiceImpl",
      "package": "org/broadleafcommerce/core/checkout/service/gateway",
      "file-name": "PassthroughPaymentRollbackServiceImpl.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "OfferAuditImpl",
      "package": "org/broadleafcommerce/core/offer/domain",
      "file-name": "OfferAuditImpl.java",
      "line-number": 166,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "init",
      "description": "()V",
      "class": "MergeOrdersByEmailPostRegistrationObserver",
      "package": "org/broadleafcommerce/core/registration",
      "file-name": "MergeOrdersByEmailPostRegistrationObserver.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "processRegistrationEvent",
      "description": "(Lorg/broadleafcommerce/profile/core/domain/Customer;)V",
      "class": "MergeOrdersByEmailPostRegistrationObserver",
      "package": "org/broadleafcommerce/core/registration",
      "file-name": "MergeOrdersByEmailPostRegistrationObserver.java",
      "line-number": 60,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "isActive",
      "description": "()Z",
      "class": "SearchRedirectImpl",
      "package": "org/broadleafcommerce/core/search/redirect/domain",
      "file-name": "SearchRedirectImpl.java",
      "line-number": 181,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryMediaMap$CategoryMediaMapPK",
      "package": "org/broadleafcommerce/core/media/domain",
      "file-name": "CategoryMediaMap.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setQuantityRequested",
      "description": "(I)V",
      "class": "InventoryUnavailableException",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryUnavailableException.java",
      "line-number": 67,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setQuantityAvailable",
      "description": "(I)V",
      "class": "InventoryUnavailableException",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryUnavailableException.java",
      "line-number": 75,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)I",
      "class": "OrderItemPriceComparator",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "OrderItemPriceComparator.java",
      "line-number": 40,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "0",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 19,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testQualifyingQuantity(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOrderItemMeetOfferRequirement(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testCouldOfferApplyToOrder(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest.testFilterOrderLevelOffer(org.broadleafcommerce.core.offer.service.processor.OrderOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testCouldOfferApplyToOrderItems(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testFilterFulfillmentGroupLevelOffer(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testFilterItemLevelOffer(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "UserConnectionImpl$UserConnectionPK",
      "package": "org/broadleafcommerce/core/social/domain",
      "file-name": "UserConnectionImpl.java",
      "line-number": 220,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "RemoveOrderItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/remove",
      "file-name": "RemoveOrderItemActivity.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "removeItemAndChildren",
      "description": "(Ljava/util/List;Lorg/broadleafcommerce/core/order/domain/OrderItem;)V",
      "class": "RemoveOrderItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/remove",
      "file-name": "RemoveOrderItemActivity.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "FulfillmentGroupOfferPotential",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "FulfillmentGroupOfferPotential.java",
      "line-number": 69,
      "classification": "partially-tested",
      "detected": [
        "false"
      ],
      "not-detected": [
        "true"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "false",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "true",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "eval",
      "description": "(Lorg/broadleafcommerce/core/order/domain/OrderItem;)Z",
      "class": "OrderServiceImpl$1",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceImpl.java",
      "line-number": 557,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setProductId",
      "description": "(J)V",
      "class": "AddToCartItems",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "AddToCartItems.java",
      "line-number": 39,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCategoryId",
      "description": "(J)V",
      "class": "AddToCartItems",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "AddToCartItems.java",
      "line-number": 46,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchFacetRange;Lorg/broadleafcommerce/core/search/domain/SearchFacetRange;)I",
      "class": "DatabaseSearchServiceImpl$1",
      "package": "org/broadleafcommerce/core/search/service",
      "file-name": "DatabaseSearchServiceImpl.java",
      "line-number": 256,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "saveOfferIds",
      "description": "(Ljava/util/Set;Ljava/util/Map;Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/List;",
      "class": "RecordOfferUsageActivity",
      "package": "org/broadleafcommerce/core/offer/service/workflow",
      "file-name": "RecordOfferUsageActivity.java",
      "line-number": 97,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "RecordOfferUsageActivity",
      "package": "org/broadleafcommerce/core/offer/service/workflow",
      "file-name": "RecordOfferUsageActivity.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCustomerInfo",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;Lorg/broadleafcommerce/profile/core/domain/Customer;Ljava/lang/String;)Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;",
      "class": "PaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "PaymentRequestDTOServiceImpl.java",
      "line-number": 36,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "populateCustomerInfo",
      "description": "(Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;Lorg/broadleafcommerce/profile/core/domain/Customer;)Lorg/broadleafcommerce/common/payment/dto/PaymentRequestDTO;",
      "class": "PaymentRequestDTOServiceImpl",
      "package": "org/broadleafcommerce/core/payment/service",
      "file-name": "PaymentRequestDTOServiceImpl.java",
      "line-number": 31,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)I",
      "class": "ItemOfferComparator",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "ItemOfferComparator.java",
      "line-number": 35,
      "classification": "tested",
      "detected": [
        "0",
        "1"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        },
        {
          "status": "KILLED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "matches",
      "description": "(Lorg/springframework/context/annotation/ConditionContext;Lorg/springframework/core/type/AnnotatedTypeMetadata;)Z",
      "class": "ImportSQLConfig$AssetFoldersExistCondition",
      "package": "org/broadleafcommerce/core/demo",
      "file-name": "ImportSQLConfig.java",
      "line-number": 83,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "stopProcess",
      "description": "()Z",
      "class": "DefaultProcessContextImpl",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "DefaultProcessContextImpl.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "estimateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;Ljava/util/Set;)Lorg/broadleafcommerce/core/pricing/service/fulfillment/provider/FulfillmentEstimationResponse;",
      "class": "FulfillmentPricingServiceImpl",
      "package": "org/broadleafcommerce/core/pricing/service",
      "file-name": "FulfillmentPricingServiceImpl.java",
      "line-number": 71,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "calculateCostForFulfillmentGroup",
      "description": "(Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;)Lorg/broadleafcommerce/core/order/domain/FulfillmentGroup;",
      "class": "FulfillmentPricingServiceImpl",
      "package": "org/broadleafcommerce/core/pricing/service",
      "file-name": "FulfillmentPricingServiceImpl.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateItemOffer;)I",
      "class": "ItemOfferQtyOneComparator",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "ItemOfferQtyOneComparator.java",
      "line-number": 36,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "0",
          "tests-run": 2,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "BundleOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "BundleOrderItemRequest.java",
      "line-number": 108,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getRoundingMode",
      "description": "()Ljava/math/RoundingMode;",
      "class": "AbstractPromotionRounding",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "AbstractPromotionRounding.java",
      "line-number": 52,
      "classification": "tested",
      "detected": [
        "null"
      ],
      "not-detected": [],
      "tests": [
        "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "KILLED",
          "mutator": "null",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [
            "org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest.testCalculateSavingsForOrderItem(org.broadleafcommerce.core.offer.domain.CandidateItemOfferTest)"
          ],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setRoundingScale",
      "description": "(I)V",
      "class": "AbstractPromotionRounding",
      "package": "org/broadleafcommerce/core/offer/service/discount/domain",
      "file-name": "AbstractPromotionRounding.java",
      "line-number": 36,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getCache",
      "description": "()Lorg/broadleafcommerce/core/search/dao/CatalogStructure;",
      "class": "SolrIndexCachedOperation",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexCachedOperation.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setCache",
      "description": "(Lorg/broadleafcommerce/core/search/dao/CatalogStructure;)V",
      "class": "SolrIndexCachedOperation",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexCachedOperation.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "evaluate",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableOrderItem;)Z",
      "class": "AbstractBaseProcessor$1",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "AbstractBaseProcessor.java",
      "line-number": 251,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createContext",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Ljava/util/Map;",
      "class": "NotificationOrderSubmittedEventListener",
      "package": "org/broadleafcommerce/core/order/event",
      "file-name": "NotificationOrderSubmittedEventListener.java",
      "line-number": 87,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleApplicationEvent",
      "description": "(Lorg/broadleafcommerce/common/event/OrderSubmittedEvent;)V",
      "class": "NotificationOrderSubmittedEventListener",
      "package": "org/broadleafcommerce/core/order/event",
      "file-name": "NotificationOrderSubmittedEventListener.java",
      "line-number": 64,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/search/domain/CategorySearchFacet;Lorg/broadleafcommerce/core/search/domain/CategorySearchFacet;)I",
      "class": "CategoryImpl$4",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1352,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "evaluate",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategoryImpl$3",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1176,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "false",
        "true"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Ljava/lang/Object;Ljava/lang/Object;)I",
      "class": "CategoryImpl$5",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1361,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "equals",
      "description": "(Ljava/lang/Object;)Z",
      "class": "CategorySiteMapGeneratorConfigurationImpl",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategorySiteMapGeneratorConfigurationImpl.java",
      "line-number": 91,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "true",
        "false"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "true",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "false",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;Lorg/broadleafcommerce/core/offer/service/discount/domain/PromotableCandidateOrderOffer;)I",
      "class": "OrderOfferComparator",
      "package": "org/broadleafcommerce/core/offer/service/discount",
      "file-name": "OrderOfferComparator.java",
      "line-number": 35,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "1",
        "0"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "1",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "SURVIVED",
          "mutator": "0",
          "tests-run": 1,
          "tests": [
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "compare",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchFacetResultDTO;Lorg/broadleafcommerce/core/search/domain/SearchFacetResultDTO;)I",
      "class": "SolrHelperServiceImpl$1",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SolrHelperServiceImpl.java",
      "line-number": 691,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "0",
        "1"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "0",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        },
        {
          "status": "NO_COVERAGE",
          "mutator": "1",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "UpdateOrderItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/update",
      "file-name": "UpdateOrderItemActivity.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CheckUpdateAvailabilityActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "CheckUpdateAvailabilityActivity.java",
      "line-number": 66,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/service/call/DiscreteOrderItemRequest;",
      "class": "DiscreteOrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "DiscreteOrderItemRequest.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "BandedWeightFulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "BandedWeightFulfillmentOptionImpl.java",
      "line-number": 67,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createContext",
      "description": "(Lorg/broadleafcommerce/core/checkout/service/workflow/CheckoutSeed;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CheckoutProcessContextFactory",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CheckoutProcessContextFactory.java",
      "line-number": 29,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "UpdateOrderMultishipOptionActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/update",
      "file-name": "UpdateOrderMultishipOptionActivity.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "reviewOffers",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)V",
      "class": "ShippingOfferServiceImpl",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "ShippingOfferServiceImpl.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "afterCommit",
      "description": "()V",
      "class": "InventoryServiceImpl$1",
      "package": "org/broadleafcommerce/core/inventory/service",
      "file-name": "InventoryServiceImpl.java",
      "line-number": 335,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ReentrantDistributedZookeeperLock$6",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 545,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/util/List;",
      "class": "ReentrantDistributedZookeeperLock$3",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 429,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ReentrantDistributedZookeeperLock$1",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 306,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createContext",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "PricingProcessContextFactory",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "PricingProcessContextFactory.java",
      "line-number": 30,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "orderUpdated",
      "description": "(Ljava/lang/Object;)V",
      "class": "OrderPersistedEntityListener",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderPersistedEntityListener.java",
      "line-number": 54,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager$1",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager$3",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 56,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager$2",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "DecrementInventoryActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "DecrementInventoryActivity.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager$5",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 70,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager$4",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 63,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager$7",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 84,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OrderServiceExtensionManager$6",
      "package": "org/broadleafcommerce/core/order/service",
      "file-name": "OrderServiceExtensionManager.java",
      "line-number": 77,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackState",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/util/Map;)V",
      "class": "ConfirmPaymentsRollbackHandler",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ConfirmPaymentsRollbackHandler.java",
      "line-number": 81,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleError",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/lang/Throwable;)V",
      "class": "DefaultErrorHandler",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "DefaultErrorHandler.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "RemoveOrderMultishipOptionActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/remove",
      "file-name": "RemoveOrderMultishipOptionActivity.java",
      "line-number": 48,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$10",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 743,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$11",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 761,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateCheckoutActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateCheckoutActivity.java",
      "line-number": 48,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "executePricing",
      "description": "(Lorg/broadleafcommerce/core/order/domain/Order;)Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "PricingServiceImpl",
      "package": "org/broadleafcommerce/core/pricing/service",
      "file-name": "PricingServiceImpl.java",
      "line-number": 39,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildActiveFacetFilter",
      "description": "(Lorg/broadleafcommerce/core/search/domain/SearchFacet;[Ljava/lang/String;Ljava/util/List;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "AbstractSolrSearchServiceExtensionHandler",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "AbstractSolrSearchServiceExtensionHandler.java",
      "line-number": 115,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateUpdateProductOptionsRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/update/options",
      "file-name": "ValidateUpdateProductOptionsRequestActivity.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "FulfillmentGroupMerchandiseTotalActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentGroupMerchandiseTotalActivity.java",
      "line-number": 50,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateAvailabilityActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "ValidateAvailabilityActivity.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "afterCompletion",
      "description": "(I)V",
      "class": "OrderPersistedEntityListener$1",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderPersistedEntityListener.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$6",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 86,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$7",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 93,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOfferContext",
      "description": "()Lorg/broadleafcommerce/core/offer/service/OfferContext;",
      "class": "OfferContext",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferContext.java",
      "line-number": 28,
      "classification": "pseudo-tested",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
        "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
        "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)"
      ],
      "mutations": [
        {
          "status": "SURVIVED",
          "mutator": "null",
          "tests-run": 6,
          "tests": [
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAllItemOffers(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyItemQualifiersAndTargets(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest.testApplyAllFulfillmentGroupOffersWithOrderItemOffers(org.broadleafcommerce.core.offer.service.processor.FulfillmentGroupOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Order(org.broadleafcommerce.core.offer.service.OfferServiceTest)",
            "org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest.testApplyAdjustments(org.broadleafcommerce.core.offer.service.processor.ItemOfferProcessorTest)",
            "org.broadleafcommerce.core.offer.service.OfferServiceTest.testApplyOffersToOrder_Items(org.broadleafcommerce.core.offer.service.OfferServiceTest)"
          ],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$4",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 72,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$5",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$2",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 58,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$3",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$1",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 51,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "VerifyCustomerMaxOfferUsesActivity",
      "package": "org/broadleafcommerce/core/offer/service/workflow",
      "file-name": "VerifyCustomerMaxOfferUsesActivity.java",
      "line-number": 61,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$8",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 100,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$9",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 107,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "get",
      "description": "(Ljava/lang/String;)Ljava/lang/Object;",
      "class": "SearchContextDTO",
      "package": "org/broadleafcommerce/core/search/service/solr",
      "file-name": "SearchContextDTO.java",
      "line-number": 35,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "process",
      "description": "(Lorg/apache/zookeeper/WatchedEvent;)V",
      "class": "ReentrantDistributedZookeeperLock$3$1",
      "package": "org/broadleafcommerce/core/util/lock",
      "file-name": "ReentrantDistributedZookeeperLock.java",
      "line-number": 432,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "process",
      "description": "(Lorg/apache/zookeeper/WatchedEvent;)V",
      "class": "ZookeeperDistributedQueue$5$1",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 621,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()V",
      "class": "OfferServiceImpl$1",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 325,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateUpdateRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/update",
      "file-name": "ValidateUpdateRequestActivity.java",
      "line-number": 53,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transform",
      "description": "(Ljava/lang/Object;)Ljava/lang/Object;",
      "class": "OfferServiceImpl$2",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceImpl.java",
      "line-number": 578,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "clone",
      "description": "()Lorg/broadleafcommerce/core/order/service/call/OrderItemRequest;",
      "class": "OrderItemRequest",
      "package": "org/broadleafcommerce/core/order/service/call",
      "file-name": "OrderItemRequest.java",
      "line-number": 39,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ValidateRemoveRequestActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/remove",
      "file-name": "ValidateRemoveRequestActivity.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "PricingServiceActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "PricingServiceActivity.java",
      "line-number": 34,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "get",
      "description": "(Ljava/lang/String;)Ljava/lang/Object;",
      "class": "CatalogContextDTO",
      "package": "org/broadleafcommerce/core/catalog/service",
      "file-name": "CatalogContextDTO.java",
      "line-number": 33,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "UpdateFulfillmentGroupItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/update",
      "file-name": "UpdateFulfillmentGroupItemActivity.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "setSku",
      "description": "(Lorg/broadleafcommerce/core/catalog/domain/Sku;)V",
      "class": "DynamicPriceDiscreteOrderItemImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "DynamicPriceDiscreteOrderItemImpl.java",
      "line-number": 45,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "UpdateWorkflowVerifyFulfillmentGroupItemsActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "UpdateWorkflowVerifyFulfillmentGroupItemsActivity.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "BandedPriceFulfillmentOptionImpl",
      "package": "org/broadleafcommerce/core/order/fulfillment/domain",
      "file-name": "BandedPriceFulfillmentOptionImpl.java",
      "line-number": 67,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "AdjustOrderPaymentsActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "AdjustOrderPaymentsActivity.java",
      "line-number": 79,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "RequiredFacetImpl",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "RequiredFacetImpl.java",
      "line-number": 109,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createOrRetrieveCopyInstance",
      "description": "(Lorg/broadleafcommerce/common/copy/MultiTenantCopyContext;)Lorg/broadleafcommerce/common/copy/CreateResponse;",
      "class": "OrderMultishipOptionImpl",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderMultishipOptionImpl.java",
      "line-number": 130,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackState",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/util/Map;)V",
      "class": "CompleteOrderRollbackHandler",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CompleteOrderRollbackHandler.java",
      "line-number": 44,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "UpdateProductOptionsOrderItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/update/options",
      "file-name": "UpdateProductOptionsOrderItemActivity.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "TaxActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "TaxActivity.java",
      "line-number": 48,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ShippingOfferActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "ShippingOfferActivity.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()V",
      "class": "SolrIndexServiceImpl$2",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 260,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "buildPage",
      "description": "(Ljava/util/List;)V",
      "class": "SolrIndexServiceImpl$1",
      "package": "org/broadleafcommerce/core/search/service/solr/index",
      "file-name": "SolrIndexServiceImpl.java",
      "line-number": 229,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "process",
      "description": "(Lorg/apache/zookeeper/WatchedEvent;)V",
      "class": "ZookeeperDistributedQueue$11$1",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 771,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CompositeActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "CompositeActivity.java",
      "line-number": 31,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "invoke",
      "description": "()Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CustomerPurgeParams;",
      "class": "ResourcePurgeServiceImpl$CustomerPurgeParams",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 467,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transform",
      "description": "(Ljava/lang/Object;)Ljava/lang/Object;",
      "class": "BaseProcessor$1",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "BaseProcessor.java",
      "line-number": 174,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getOrder",
      "description": "()Lorg/broadleafcommerce/core/order/domain/Order;",
      "class": "OrderPersistedEvent",
      "package": "org/broadleafcommerce/core/order/domain",
      "file-name": "OrderPersistedEvent.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "handleError",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/lang/Throwable;)V",
      "class": "SilentErrorHandler",
      "package": "org/broadleafcommerce/core/workflow",
      "file-name": "SilentErrorHandler.java",
      "line-number": 32,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$11",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 121,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/common/extension/ExtensionHandler;[Ljava/lang/Object;)Lorg/broadleafcommerce/common/extension/ExtensionResultStatusType;",
      "class": "OfferServiceExtensionManager$10",
      "package": "org/broadleafcommerce/core/offer/service",
      "file-name": "OfferServiceExtensionManager.java",
      "line-number": 114,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackState",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/util/Map;)V",
      "class": "CommitTaxRollbackHandler",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CommitTaxRollbackHandler.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CheckAddAvailabilityActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "CheckAddAvailabilityActivity.java",
      "line-number": 65,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "getTimeZone",
      "description": "(Lorg/broadleafcommerce/core/offer/domain/Offer;)Ljava/util/TimeZone;",
      "class": "OfferTimeZoneProcessorImpl",
      "package": "org/broadleafcommerce/core/offer/service/processor",
      "file-name": "OfferTimeZoneProcessorImpl.java",
      "line-number": 36,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "createContext",
      "description": "(Lorg/broadleafcommerce/core/order/service/workflow/CartOperationRequest;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CartOperationProcessContextFactory",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "CartOperationProcessContextFactory.java",
      "line-number": 38,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "invoke",
      "description": "(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;",
      "class": "SkuImpl$1",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "SkuImpl.java",
      "line-number": 1079,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "rollbackState",
      "description": "(Lorg/broadleafcommerce/core/workflow/Activity;Lorg/broadleafcommerce/core/workflow/ProcessContext;Ljava/util/Map;)V",
      "class": "RecordOfferUsageRollbackHandler",
      "package": "org/broadleafcommerce/core/offer/service/workflow",
      "file-name": "RecordOfferUsageRollbackHandler.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "RemoveFulfillmentGroupItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/remove",
      "file-name": "RemoveFulfillmentGroupItemActivity.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "AddWorkflowVerifyFulfillmentGroupItemsActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "AddWorkflowVerifyFulfillmentGroupItemsActivity.java",
      "line-number": 41,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CompositeActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CompositeActivity.java",
      "line-number": 33,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "FulfillmentGroupPricingActivity",
      "package": "org/broadleafcommerce/core/pricing/service/workflow",
      "file-name": "FulfillmentGroupPricingActivity.java",
      "line-number": 59,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()V",
      "class": "OrderDaoImpl$1",
      "package": "org/broadleafcommerce/core/order/dao",
      "file-name": "OrderDaoImpl.java",
      "line-number": 421,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$9",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 734,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "ThirdPartyInteractionLatencySimulationActivity",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ThirdPartyInteractionLatencySimulationActivity.java",
      "line-number": 36,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/util/List;",
      "class": "ZookeeperDistributedQueue$5",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 618,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/io/Serializable;",
      "class": "ZookeeperDistributedQueue$6",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 639,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$7",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 716,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$8",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 725,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "transform",
      "description": "(Ljava/lang/Object;)Ljava/lang/Object;",
      "class": "CategoryImpl$2",
      "package": "org/broadleafcommerce/core/catalog/domain",
      "file-name": "CategoryImpl.java",
      "line-number": 1164,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$2",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 340,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$3",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 455,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperDistributedQueue$4",
      "package": "org/broadleafcommerce/core/util/queue",
      "file-name": "ZookeeperDistributedQueue.java",
      "line-number": 540,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "RemoveWorkflowVerifyFulfillmentGroupItemsActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow",
      "file-name": "RemoveWorkflowVerifyFulfillmentGroupItemsActivity.java",
      "line-number": 49,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "AddOrderItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "AddOrderItemActivity.java",
      "line-number": 57,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "CatalogDocumentBuilderImpl$1",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "CatalogDocumentBuilderImpl.java",
      "line-number": 88,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "addFilterQuery",
      "description": "(Ljava/lang/String;)V",
      "class": "SearchCriteria",
      "package": "org/broadleafcommerce/core/search/domain",
      "file-name": "SearchCriteria.java",
      "line-number": 146,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "void"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "void",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "invoke",
      "description": "()Lorg/broadleafcommerce/core/util/service/ResourcePurgeServiceImpl$CartPurgeParams;",
      "class": "ResourcePurgeServiceImpl$CartPurgeParams",
      "package": "org/broadleafcommerce/core/util/service",
      "file-name": "ResourcePurgeServiceImpl.java",
      "line-number": 389,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "ZookeeperUtil$1",
      "package": "org/broadleafcommerce/core/util",
      "file-name": "ZookeeperUtil.java",
      "line-number": 133,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "AddFulfillmentGroupItemActivity",
      "package": "org/broadleafcommerce/core/order/service/workflow/add",
      "file-name": "AddFulfillmentGroupItemActivity.java",
      "line-number": 42,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "findSearchRedirectBySearchTerm",
      "description": "(Ljava/lang/String;)Lorg/broadleafcommerce/core/search/redirect/domain/SearchRedirect;",
      "class": "SearchRedirectServiceImpl",
      "package": "org/broadleafcommerce/core/search/redirect/service",
      "file-name": "SearchRedirectServiceImpl.java",
      "line-number": 47,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "(Lorg/broadleafcommerce/core/workflow/ProcessContext;)Lorg/broadleafcommerce/core/workflow/ProcessContext;",
      "class": "CommitTaxActivity",
      "package": "org/broadleafcommerce/core/checkout/service/workflow",
      "file-name": "CommitTaxActivity.java",
      "line-number": 55,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl$3",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 178,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl$2",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 162,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl$1",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 144,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl$6",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 252,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl$5",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 216,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    },
    {
      "name": "execute",
      "description": "()Ljava/lang/Void;",
      "class": "AbstractSolrIndexUpdateCommandHandlerImpl$4",
      "package": "org/broadleafcommerce/core/search/service/solr/indexer",
      "file-name": "AbstractSolrIndexUpdateCommandHandlerImpl.java",
      "line-number": 196,
      "classification": "not-covered",
      "detected": [],
      "not-detected": [
        "null"
      ],
      "tests": [],
      "mutations": [
        {
          "status": "NO_COVERAGE",
          "mutator": "null",
          "tests-run": 0,
          "tests": [],
          "killing-tests": [],
          "succeeding-tests": []
        }
      ]
    }
  ],
  "analysis": {
    "time": 87569,
    "mutators": [
      "void",
      "null",
      "empty",
      "true",
      "false",
      "0",
      "1",
      "(short)0",
      "(short)1",
      "(byte)0",
      "(byte)1",
      "0L",
      "1L",
      "0.0",
      "1.0",
      "0.0f",
      "1.0f",
      "'\\40'",
      "'A'",
      "\"\"",
      "\"A\""
    ]
  }
}