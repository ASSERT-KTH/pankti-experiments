<com.hs.mail.imap.message.response.FetchResponse>
  <msgnum>39</msgnum>
  <content>
    <name>RFC822</name>
    <contents class="java.nio.HeapByteBuffer">
      <mark>-1</mark>
      <position>0</position>
      <limit>16530</limit>
      <capacity>16530</capacity>
      <address>16</address>
      <hb></hb>
      <offset>0</offset>
      <isReadOnly>false</isReadOnly>
      <bigEndian>true</bigEndian>
      <nativeByteOrder>false</nativeByteOrder>
    </contents>
    <size>16530</size>
  </content>
</com.hs.mail.imap.message.response.FetchResponse>
<com.hs.mail.imap.message.response.FetchResponse>
  <msgnum>40</msgnum>
  <content>
    <name>RFC822</name>
    <contents class="java.nio.HeapByteBuffer">
      <mark>-1</mark>
      <position>0</position>
      <limit>10317</limit>
      <capacity>10317</capacity>
      <address>16</address>
      <hb></hb>
      <offset>0</offset>
      <isReadOnly>false</isReadOnly>
      <bigEndian>true</bigEndian>
      <nativeByteOrder>false</nativeByteOrder>
    </contents>
    <size>10317</size>
  </content>
</com.hs.mail.imap.message.response.FetchResponse>
