package org.apache.fontbox.ttf;
import com.thoughtworks.xstream.XStream;
import java.lang.reflect.Method;
import org.junit.Assert;
import org.junit.Test;
public class TestGlyphRendererPanktiGen {
    static XStream xStream = new XStream();

    @Test
    public void testMidValue1() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>788</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>880</int><int>696</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue2() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>841</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>782</int><int>900</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue3() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>694</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>649</int><int>739</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue4() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>807</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>744</int><int>871</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue5() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>936</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>787</int><int>1086</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue6() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>50</int><int>54</int><int>4</int><int>1</int><int>42</int><int>4</int><int>32</int><int>16</int><int>32</int><int>17</int><int>89</int><int>4</int><int>128</int><int>24</int><int>5</int><int>8</int><int>4</int><int>191</int><int>24</int><int>2</int><int>21</int><int>22</int><int>17</int><int>2</int><int>20</int><int>18</int><int>22</int><int>17</int><int>14</int><int>19</int><int>15</int><int>0</int><int>16</int><int>14</int><int>19</int><int>1</int><int>0</int><int>16</int><int>2</int><int>20</int><int>9</int><int>8</int><int>15</int><int>11</int><int>1</int><int>95</int><int>11</int><int>255</int><int>11</int><int>2</int><int>11</int><int>184</int><int>2</int><int>116</int><int>64</int><int>10</int><int>6</int><int>1</int><int>17</int><int>15</int><int>22</int><int>1</int><int>255</int><int>22</int><int>1</int><int>22</int><int>184</int><int>2</int><int>116</int><int>64</int><int>30</int><int>16</int><int>0</int><int>0</int><int>1</int><int>240</int><int>0</int><int>1</int><int>0</int><int>6</int><int>19</int><int>20</int><int>10</int><int>9</int><int>51</int><int>63</int><int>8</int><int>79</int><int>8</int><int>80</int><int>8</int><int>3</int><int>8</int><int>40</int><int>16</int><int>47</int><int>17</int><int>95</int><int>17</int><int>2</int><int>17</int><int>184</int><int>1</int><int>4</int><int>64</int><int>13</int><int>14</int><int>19</int><int>38</int><int>2</int><int>20</int><int>95</int><int>0</int><int>160</int><int>22</int><int>192</int><int>22</int><int>2</int><int>22</int><int>184</int><int>255</int><int>192</int><int>182</int><int>9</int><int>12</int><int>52</int><int>22</int><int>25</int><int>23</int><int>120</int><int>185</int><int>2</int><int>105</int><int>0</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>113</int><int>60</int><int>77</int><int>252</int><int>60</int><int>253</int><int>60</int><int>252</int><int>93</int><int>60</int><int>244</int><int>93</int><int>25</int><int>228</int><int>0</int><int>24</int><int>63</int><int>60</int><int>63</int><int>93</int><int>113</int><int>60</int><int>253</int><int>93</int><int>113</int><int>60</int><int>63</int><int>253</int><int>93</int><int>113</int><int>57</int><int>50</int><int>15</int><int>15</int><int>15</int><int>15</int><int>49</int><int>48</int><int>1</int><int>113</int><int>93</int><int>0</int><int>93</int></instructions><contourCount>1</contourCount><endPtsOfContours><int>22</int></endPtsOfContours><flags>EzM1NDY2MzIXByYjIgYVFTMVIxEhESM=</flags><xCoordinates><short>24</short><short>180</short><short>180</short><short>180</short><short>237</short><short>390</short><short>507</short><short>627</short><short>742</short><short>704</short><short>637</short><short>575</short><short>514</short><short>461</short><short>461</short><short>461</short><short>671</short><short>671</short><short>461</short><short>461</short><short>180</short><short>180</short><short>24</short></xCoordinates><yCoordinates><short>1062</short><short>1062</short><short>1142</short><short>1276</short><short>1408</short><short>1491</short><short>1491</short><short>1491</short><short>1455</short><short>1259</short><short>1275</short><short>1275</short><short>1275</short><short>1218</short><short>1137</short><short>1062</short><short>1062</short><short>841</short><short>841</short><short>0</short><short>0</short><short>841</short><short>841</short></yCoordinates><pointCount>23</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1342</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1276</int><int>1408</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue7() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1066</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1206</int><int>925</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue8() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>50</int><int>54</int><int>4</int><int>1</int><int>42</int><int>4</int><int>32</int><int>16</int><int>32</int><int>17</int><int>89</int><int>4</int><int>128</int><int>24</int><int>5</int><int>8</int><int>4</int><int>191</int><int>24</int><int>2</int><int>21</int><int>22</int><int>17</int><int>2</int><int>20</int><int>18</int><int>22</int><int>17</int><int>14</int><int>19</int><int>15</int><int>0</int><int>16</int><int>14</int><int>19</int><int>1</int><int>0</int><int>16</int><int>2</int><int>20</int><int>9</int><int>8</int><int>15</int><int>11</int><int>1</int><int>95</int><int>11</int><int>255</int><int>11</int><int>2</int><int>11</int><int>184</int><int>2</int><int>116</int><int>64</int><int>10</int><int>6</int><int>1</int><int>17</int><int>15</int><int>22</int><int>1</int><int>255</int><int>22</int><int>1</int><int>22</int><int>184</int><int>2</int><int>116</int><int>64</int><int>30</int><int>16</int><int>0</int><int>0</int><int>1</int><int>240</int><int>0</int><int>1</int><int>0</int><int>6</int><int>19</int><int>20</int><int>10</int><int>9</int><int>51</int><int>63</int><int>8</int><int>79</int><int>8</int><int>80</int><int>8</int><int>3</int><int>8</int><int>40</int><int>16</int><int>47</int><int>17</int><int>95</int><int>17</int><int>2</int><int>17</int><int>184</int><int>1</int><int>4</int><int>64</int><int>13</int><int>14</int><int>19</int><int>38</int><int>2</int><int>20</int><int>95</int><int>0</int><int>160</int><int>22</int><int>192</int><int>22</int><int>2</int><int>22</int><int>184</int><int>255</int><int>192</int><int>182</int><int>9</int><int>12</int><int>52</int><int>22</int><int>25</int><int>23</int><int>120</int><int>185</int><int>2</int><int>105</int><int>0</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>113</int><int>60</int><int>77</int><int>252</int><int>60</int><int>253</int><int>60</int><int>252</int><int>93</int><int>60</int><int>244</int><int>93</int><int>25</int><int>228</int><int>0</int><int>24</int><int>63</int><int>60</int><int>63</int><int>93</int><int>113</int><int>60</int><int>253</int><int>93</int><int>113</int><int>60</int><int>63</int><int>253</int><int>93</int><int>113</int><int>57</int><int>50</int><int>15</int><int>15</int><int>15</int><int>15</int><int>49</int><int>48</int><int>1</int><int>113</int><int>93</int><int>0</int><int>93</int></instructions><contourCount>1</contourCount><endPtsOfContours><int>22</int></endPtsOfContours><flags>EzM1NDY2MzIXByYjIgYVFTMVIxEhESM=</flags><xCoordinates><short>24</short><short>180</short><short>180</short><short>180</short><short>237</short><short>390</short><short>507</short><short>627</short><short>742</short><short>704</short><short>637</short><short>575</short><short>514</short><short>461</short><short>461</short><short>461</short><short>671</short><short>671</short><short>461</short><short>461</short><short>180</short><short>180</short><short>24</short></xCoordinates><yCoordinates><short>1062</short><short>1062</short><short>1142</short><short>1276</short><short>1408</short><short>1491</short><short>1491</short><short>1491</short><short>1455</short><short>1259</short><short>1275</short><short>1275</short><short>1275</short><short>1218</short><short>1137</short><short>1062</short><short>1062</short><short>841</short><short>841</short><short>0</short><short>0</short><short>841</short><short>841</short></yCoordinates><pointCount>23</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>208</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>180</int><int>237</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue9() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1041</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1011</int><int>1071</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue10() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1143</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1091</int><int>1195</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue11() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>644</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>696</int><int>591</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue12() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>957</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1011</int><int>903</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue13() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>203</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>65</int><int>341</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue14() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>50</int><int>54</int><int>4</int><int>1</int><int>42</int><int>4</int><int>32</int><int>16</int><int>32</int><int>17</int><int>89</int><int>4</int><int>128</int><int>24</int><int>5</int><int>8</int><int>4</int><int>191</int><int>24</int><int>2</int><int>21</int><int>22</int><int>17</int><int>2</int><int>20</int><int>18</int><int>22</int><int>17</int><int>14</int><int>19</int><int>15</int><int>0</int><int>16</int><int>14</int><int>19</int><int>1</int><int>0</int><int>16</int><int>2</int><int>20</int><int>9</int><int>8</int><int>15</int><int>11</int><int>1</int><int>95</int><int>11</int><int>255</int><int>11</int><int>2</int><int>11</int><int>184</int><int>2</int><int>116</int><int>64</int><int>10</int><int>6</int><int>1</int><int>17</int><int>15</int><int>22</int><int>1</int><int>255</int><int>22</int><int>1</int><int>22</int><int>184</int><int>2</int><int>116</int><int>64</int><int>30</int><int>16</int><int>0</int><int>0</int><int>1</int><int>240</int><int>0</int><int>1</int><int>0</int><int>6</int><int>19</int><int>20</int><int>10</int><int>9</int><int>51</int><int>63</int><int>8</int><int>79</int><int>8</int><int>80</int><int>8</int><int>3</int><int>8</int><int>40</int><int>16</int><int>47</int><int>17</int><int>95</int><int>17</int><int>2</int><int>17</int><int>184</int><int>1</int><int>4</int><int>64</int><int>13</int><int>14</int><int>19</int><int>38</int><int>2</int><int>20</int><int>95</int><int>0</int><int>160</int><int>22</int><int>192</int><int>22</int><int>2</int><int>22</int><int>184</int><int>255</int><int>192</int><int>182</int><int>9</int><int>12</int><int>52</int><int>22</int><int>25</int><int>23</int><int>120</int><int>185</int><int>2</int><int>105</int><int>0</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>113</int><int>60</int><int>77</int><int>252</int><int>60</int><int>253</int><int>60</int><int>252</int><int>93</int><int>60</int><int>244</int><int>93</int><int>25</int><int>228</int><int>0</int><int>24</int><int>63</int><int>60</int><int>63</int><int>93</int><int>113</int><int>60</int><int>253</int><int>93</int><int>113</int><int>60</int><int>63</int><int>253</int><int>93</int><int>113</int><int>57</int><int>50</int><int>15</int><int>15</int><int>15</int><int>15</int><int>49</int><int>48</int><int>1</int><int>113</int><int>93</int><int>0</int><int>93</int></instructions><contourCount>1</contourCount><endPtsOfContours><int>22</int></endPtsOfContours><flags>EzM1NDY2MzIXByYjIgYVFTMVIxEhESM=</flags><xCoordinates><short>24</short><short>180</short><short>180</short><short>180</short><short>237</short><short>390</short><short>507</short><short>627</short><short>742</short><short>704</short><short>637</short><short>575</short><short>514</short><short>461</short><short>461</short><short>461</short><short>671</short><short>671</short><short>461</short><short>461</short><short>180</short><short>180</short><short>24</short></xCoordinates><yCoordinates><short>1062</short><short>1062</short><short>1142</short><short>1276</short><short>1408</short><short>1491</short><short>1491</short><short>1491</short><short>1455</short><short>1259</short><short>1275</short><short>1275</short><short>1275</short><short>1218</short><short>1137</short><short>1062</short><short>1062</short><short>841</short><short>841</short><short>0</short><short>0</short><short>841</short><short>841</short></yCoordinates><pointCount>23</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>488</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>514</int><int>461</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue15() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>322</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>279</int><int>365</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue16() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>50</int><int>54</int><int>4</int><int>1</int><int>42</int><int>4</int><int>32</int><int>16</int><int>32</int><int>17</int><int>89</int><int>4</int><int>128</int><int>24</int><int>5</int><int>8</int><int>4</int><int>191</int><int>24</int><int>2</int><int>21</int><int>22</int><int>17</int><int>2</int><int>20</int><int>18</int><int>22</int><int>17</int><int>14</int><int>19</int><int>15</int><int>0</int><int>16</int><int>14</int><int>19</int><int>1</int><int>0</int><int>16</int><int>2</int><int>20</int><int>9</int><int>8</int><int>15</int><int>11</int><int>1</int><int>95</int><int>11</int><int>255</int><int>11</int><int>2</int><int>11</int><int>184</int><int>2</int><int>116</int><int>64</int><int>10</int><int>6</int><int>1</int><int>17</int><int>15</int><int>22</int><int>1</int><int>255</int><int>22</int><int>1</int><int>22</int><int>184</int><int>2</int><int>116</int><int>64</int><int>30</int><int>16</int><int>0</int><int>0</int><int>1</int><int>240</int><int>0</int><int>1</int><int>0</int><int>6</int><int>19</int><int>20</int><int>10</int><int>9</int><int>51</int><int>63</int><int>8</int><int>79</int><int>8</int><int>80</int><int>8</int><int>3</int><int>8</int><int>40</int><int>16</int><int>47</int><int>17</int><int>95</int><int>17</int><int>2</int><int>17</int><int>184</int><int>1</int><int>4</int><int>64</int><int>13</int><int>14</int><int>19</int><int>38</int><int>2</int><int>20</int><int>95</int><int>0</int><int>160</int><int>22</int><int>192</int><int>22</int><int>2</int><int>22</int><int>184</int><int>255</int><int>192</int><int>182</int><int>9</int><int>12</int><int>52</int><int>22</int><int>25</int><int>23</int><int>120</int><int>185</int><int>2</int><int>105</int><int>0</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>113</int><int>60</int><int>77</int><int>252</int><int>60</int><int>253</int><int>60</int><int>252</int><int>93</int><int>60</int><int>244</int><int>93</int><int>25</int><int>228</int><int>0</int><int>24</int><int>63</int><int>60</int><int>63</int><int>93</int><int>113</int><int>60</int><int>253</int><int>93</int><int>113</int><int>60</int><int>63</int><int>253</int><int>93</int><int>113</int><int>57</int><int>50</int><int>15</int><int>15</int><int>15</int><int>15</int><int>49</int><int>48</int><int>1</int><int>113</int><int>93</int><int>0</int><int>93</int></instructions><contourCount>1</contourCount><endPtsOfContours><int>22</int></endPtsOfContours><flags>EzM1NDY2MzIXByYjIgYVFTMVIxEhESM=</flags><xCoordinates><short>24</short><short>180</short><short>180</short><short>180</short><short>237</short><short>390</short><short>507</short><short>627</short><short>742</short><short>704</short><short>637</short><short>575</short><short>514</short><short>461</short><short>461</short><short>461</short><short>671</short><short>671</short><short>461</short><short>461</short><short>180</short><short>180</short><short>24</short></xCoordinates><yCoordinates><short>1062</short><short>1062</short><short>1142</short><short>1276</short><short>1408</short><short>1491</short><short>1491</short><short>1491</short><short>1455</short><short>1259</short><short>1275</short><short>1275</short><short>1275</short><short>1218</short><short>1137</short><short>1062</short><short>1062</short><short>841</short><short>841</short><short>0</short><short>0</short><short>841</short><short>841</short></yCoordinates><pointCount>23</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1449</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1408</int><int>1491</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue17() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>930</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1086</int><int>773</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue18() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1329</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1281</int><int>1377</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue19() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>963</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>916</int><int>1011</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue20() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>222</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>186</int><int>258</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue21() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1099</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1174</int><int>1023</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue22() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1301</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1411</int><int>1190</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue23() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1041</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1071</int><int>1011</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue24() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1017</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>948</int><int>1086</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue25() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1303</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1400</int><int>1206</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue26() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>817</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>686</int><int>948</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue27() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1223</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1272</int><int>1174</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue28() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>256</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>325</int><int>186</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue29() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>920</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>967</int><int>873</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue30() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1135</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1084</int><int>1186</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue31() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>897</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>848</int><int>946</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue32() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>151</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>82</int><int>220</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue33() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1023</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1178</int><int>867</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue34() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1024</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>870</int><int>1178</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue35() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>993</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>902</int><int>1084</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue36() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>715</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>775</int><int>655</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue37() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>825</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>802</int><int>848</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue38() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>926</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>789</int><int>1063</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue39() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>57</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>137</int><int>-24</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue40() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>135</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>293</int><int>-24</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue41() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>933</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>900</int><int>967</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue42() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>50</int><int>54</int><int>4</int><int>1</int><int>42</int><int>4</int><int>32</int><int>16</int><int>32</int><int>17</int><int>89</int><int>4</int><int>128</int><int>24</int><int>5</int><int>8</int><int>4</int><int>191</int><int>24</int><int>2</int><int>21</int><int>22</int><int>17</int><int>2</int><int>20</int><int>18</int><int>22</int><int>17</int><int>14</int><int>19</int><int>15</int><int>0</int><int>16</int><int>14</int><int>19</int><int>1</int><int>0</int><int>16</int><int>2</int><int>20</int><int>9</int><int>8</int><int>15</int><int>11</int><int>1</int><int>95</int><int>11</int><int>255</int><int>11</int><int>2</int><int>11</int><int>184</int><int>2</int><int>116</int><int>64</int><int>10</int><int>6</int><int>1</int><int>17</int><int>15</int><int>22</int><int>1</int><int>255</int><int>22</int><int>1</int><int>22</int><int>184</int><int>2</int><int>116</int><int>64</int><int>30</int><int>16</int><int>0</int><int>0</int><int>1</int><int>240</int><int>0</int><int>1</int><int>0</int><int>6</int><int>19</int><int>20</int><int>10</int><int>9</int><int>51</int><int>63</int><int>8</int><int>79</int><int>8</int><int>80</int><int>8</int><int>3</int><int>8</int><int>40</int><int>16</int><int>47</int><int>17</int><int>95</int><int>17</int><int>2</int><int>17</int><int>184</int><int>1</int><int>4</int><int>64</int><int>13</int><int>14</int><int>19</int><int>38</int><int>2</int><int>20</int><int>95</int><int>0</int><int>160</int><int>22</int><int>192</int><int>22</int><int>2</int><int>22</int><int>184</int><int>255</int><int>192</int><int>182</int><int>9</int><int>12</int><int>52</int><int>22</int><int>25</int><int>23</int><int>120</int><int>185</int><int>2</int><int>105</int><int>0</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>113</int><int>60</int><int>77</int><int>252</int><int>60</int><int>253</int><int>60</int><int>252</int><int>93</int><int>60</int><int>244</int><int>93</int><int>25</int><int>228</int><int>0</int><int>24</int><int>63</int><int>60</int><int>63</int><int>93</int><int>113</int><int>60</int><int>253</int><int>93</int><int>113</int><int>60</int><int>63</int><int>253</int><int>93</int><int>113</int><int>57</int><int>50</int><int>15</int><int>15</int><int>15</int><int>15</int><int>49</int><int>48</int><int>1</int><int>113</int><int>93</int><int>0</int><int>93</int></instructions><contourCount>1</contourCount><endPtsOfContours><int>22</int></endPtsOfContours><flags>EzM1NDY2MzIXByYjIgYVFTMVIxEhESM=</flags><xCoordinates><short>24</short><short>180</short><short>180</short><short>180</short><short>237</short><short>390</short><short>507</short><short>627</short><short>742</short><short>704</short><short>637</short><short>575</short><short>514</short><short>461</short><short>461</short><short>461</short><short>671</short><short>671</short><short>461</short><short>461</short><short>180</short><short>180</short><short>24</short></xCoordinates><yCoordinates><short>1062</short><short>1062</short><short>1142</short><short>1276</short><short>1408</short><short>1491</short><short>1491</short><short>1491</short><short>1455</short><short>1259</short><short>1275</short><short>1275</short><short>1275</short><short>1218</short><short>1137</short><short>1062</short><short>1062</short><short>841</short><short>841</short><short>0</short><short>0</short><short>841</short><short>841</short></yCoordinates><pointCount>23</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>313</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>237</int><int>390</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue43() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>346</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>220</int><int>473</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue44() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>463</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>365</int><int>562</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue45() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>51</int><int>40</int><int>5</int><int>40</int><int>10</int><int>71</int><int>23</int><int>101</int><int>4</int><int>101</int><int>12</int><int>5</int><int>42</int><int>23</int><int>57</int><int>23</int><int>72</int><int>22</int><int>89</int><int>22</int><int>104</int><int>22</int><int>5</int><int>57</int><int>23</int><int>54</int><int>27</int><int>135</int><int>27</int><int>153</int><int>5</int><int>150</int><int>11</int><int>5</int><int>31</int><int>17</int><int>37</int><int>1</int><int>0</int><int>2</int><int>19</int><int>18</int><int>37</int><int>15</int><int>16</int><int>8</int><int>25</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>19</int><int>128</int><int>33</int><int>1</int><int>32</int><int>33</int><int>48</int><int>33</int><int>2</int><int>33</int><int>17</int><int>18</int><int>32</int><int>0</int><int>32</int><int>16</int><int>48</int><int>16</int><int>2</int><int>16</int><int>184</int><int>2</int><int>139</int><int>179</int><int>32</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>93</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>253</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>16</int><int>31</int></endPtsOfContours><flags>EyEyFxYWEhUUBwYHBgcGIyEBETMyNz4+PjU0JiYnJiM=</flags><xCoordinates><short>148</short><short>689</short><short>872</short><short>968</short><short>1097</short><short>1281</short><short>1377</short><short>1377</short><short>1377</short><short>1332</short><short>1277</short><short>1175</short><short>1098</short><short>967</short><short>869</short><short>705</short><short>148</short><short>444</short><short>444</short><short>665</short><short>789</short><short>844</short><short>916</short><short>1011</short><short>1071</short><short>1071</short><short>1071</short><short>1011</short><short>903</short><short>820</short><short>758</short><short>577</short></xCoordinates><yCoordinates><short>1466</short><short>1466</short><short>1466</short><short>1438</short><short>1400</short><short>1206</short><short>925</short><short>719</short><short>538</short><short>407</short><short>247</short><short>148</short><short>73</short><short>31</short><short>0</short><short>0</short><short>0</short><short>1218</short><short>247</short><short>247</short><short>247</short><short>261</short><short>279</short><short>365</short><short>562</short><short>732</short><short>902</short><short>1084</short><short>1186</short><short>1204</short><short>1218</short><short>1218</short></yCoordinates><pointCount>32</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1189</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1097</int><int>1281</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue46() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>872</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>988</int><int>755</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue47() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>50</int><int>54</int><int>4</int><int>1</int><int>42</int><int>4</int><int>32</int><int>16</int><int>32</int><int>17</int><int>89</int><int>4</int><int>128</int><int>24</int><int>5</int><int>8</int><int>4</int><int>191</int><int>24</int><int>2</int><int>21</int><int>22</int><int>17</int><int>2</int><int>20</int><int>18</int><int>22</int><int>17</int><int>14</int><int>19</int><int>15</int><int>0</int><int>16</int><int>14</int><int>19</int><int>1</int><int>0</int><int>16</int><int>2</int><int>20</int><int>9</int><int>8</int><int>15</int><int>11</int><int>1</int><int>95</int><int>11</int><int>255</int><int>11</int><int>2</int><int>11</int><int>184</int><int>2</int><int>116</int><int>64</int><int>10</int><int>6</int><int>1</int><int>17</int><int>15</int><int>22</int><int>1</int><int>255</int><int>22</int><int>1</int><int>22</int><int>184</int><int>2</int><int>116</int><int>64</int><int>30</int><int>16</int><int>0</int><int>0</int><int>1</int><int>240</int><int>0</int><int>1</int><int>0</int><int>6</int><int>19</int><int>20</int><int>10</int><int>9</int><int>51</int><int>63</int><int>8</int><int>79</int><int>8</int><int>80</int><int>8</int><int>3</int><int>8</int><int>40</int><int>16</int><int>47</int><int>17</int><int>95</int><int>17</int><int>2</int><int>17</int><int>184</int><int>1</int><int>4</int><int>64</int><int>13</int><int>14</int><int>19</int><int>38</int><int>2</int><int>20</int><int>95</int><int>0</int><int>160</int><int>22</int><int>192</int><int>22</int><int>2</int><int>22</int><int>184</int><int>255</int><int>192</int><int>182</int><int>9</int><int>12</int><int>52</int><int>22</int><int>25</int><int>23</int><int>120</int><int>185</int><int>2</int><int>105</int><int>0</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>113</int><int>60</int><int>77</int><int>252</int><int>60</int><int>253</int><int>60</int><int>252</int><int>93</int><int>60</int><int>244</int><int>93</int><int>25</int><int>228</int><int>0</int><int>24</int><int>63</int><int>60</int><int>63</int><int>93</int><int>113</int><int>60</int><int>253</int><int>93</int><int>113</int><int>60</int><int>63</int><int>253</int><int>93</int><int>113</int><int>57</int><int>50</int><int>15</int><int>15</int><int>15</int><int>15</int><int>49</int><int>48</int><int>1</int><int>113</int><int>93</int><int>0</int><int>93</int></instructions><contourCount>1</contourCount><endPtsOfContours><int>22</int></endPtsOfContours><flags>EzM1NDY2MzIXByYjIgYVFTMVIxEhESM=</flags><xCoordinates><short>24</short><short>180</short><short>180</short><short>180</short><short>237</short><short>390</short><short>507</short><short>627</short><short>742</short><short>704</short><short>637</short><short>575</short><short>514</short><short>461</short><short>461</short><short>461</short><short>671</short><short>671</short><short>461</short><short>461</short><short>180</short><short>180</short><short>24</short></xCoordinates><yCoordinates><short>1062</short><short>1062</short><short>1142</short><short>1276</short><short>1408</short><short>1491</short><short>1491</short><short>1491</short><short>1455</short><short>1259</short><short>1275</short><short>1275</short><short>1275</short><short>1218</short><short>1137</short><short>1062</short><short>1062</short><short>841</short><short>841</short><short>0</short><short>0</short><short>841</short><short>841</short></yCoordinates><pointCount>23</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1247</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1275</int><int>1218</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue48() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>72</int><int>232</int><int>1</int><int>231</int><int>8</int><int>247</int><int>19</int><int>247</int><int>21</int><int>4</int><int>199</int><int>2</int><int>232</int><int>5</int><int>2</int><int>18</int><int>25</int><int>5</int><int>25</int><int>9</int><int>2</int><int>89</int><int>16</int><int>86</int><int>19</int><int>86</int><int>22</int><int>89</int><int>24</int><int>151</int><int>2</int><int>152</int><int>6</int><int>152</int><int>8</int><int>151</int><int>12</int><int>184</int><int>9</int><int>213</int><int>2</int><int>219</int><int>5</int><int>220</int><int>9</int><int>213</int><int>12</int><int>231</int><int>5</int><int>231</int><int>6</int><int>232</int><int>13</int><int>16</int><int>167</int><int>8</int><int>203</int><int>2</int><int>204</int><int>6</int><int>195</int><int>8</int><int>198</int><int>12</int><int>5</int><int>117</int><int>8</int><int>137</int><int>6</int><int>132</int><int>8</int><int>3</int><int>17</int><int>184</int><int>2</int><int>116</int><int>178</int><int>10</int><int>11</int><int>23</int><int>184</int><int>2</int><int>116</int><int>64</int><int>20</int><int>4</int><int>7</int><int>20</int><int>57</int><int>7</int><int>26</int><int>96</int><int>27</int><int>112</int><int>27</int><int>2</int><int>27</int><int>14</int><int>33</int><int>0</int><int>25</int><int>26</int><int>88</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>77</int><int>237</int><int>78</int><int>16</int><int>113</int><int>246</int><int>77</int><int>237</int><int>0</int><int>63</int><int>237</int><int>63</int><int>237</int><int>49</int><int>48</int><int>0</int><int>113</int><int>93</int><int>1</int><int>93</int><int>113</int><int>67</int><int>88</int><int>64</int><int>9</int><int>105</int><int>16</int><int>102</int><int>18</int><int>102</int><int>22</int><int>105</int><int>24</int><int>4</int><int>1</int><int>93</int><int>89</int><int>0</int><int>93</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>13</int><int>25</int></endPtsOfContours><flags>EzQSNjMyABUUACMiJCYlFBYzMjY1NCYjIgY=</flags><xCoordinates><short>82</short><short>82</short><short>220</short><short>473</short><short>629</short><short>870</short><short>1178</short><short>1178</short><short>1178</short><short>867</short><short>631</short><short>485</short><short>220</short><short>82</short><short>370</short><short>370</short><short>520</short><short>630</short><short>740</short><short>889</short><short>889</short><short>889</short><short>740</short><short>630</short><short>520</short><short>370</short></xCoordinates><yCoordinates><short>546</short><short>686</short><short>948</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>534</short><short>293</short><short>-24</short><short>-24</short><short>-24</short><short>108</short><short>363</short><short>531</short><short>373</short><short>205</short><short>205</short><short>205</short><short>373</short><short>533</short><short>689</short><short>857</short><short>857</short><short>857</short><short>689</short></yCoordinates><pointCount>26</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>930</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1086</int><int>773</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue49() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>185</int><int>0</int><int>16</int><int>255</int><int>248</int><int>64</int><int>70</int><int>11</int><int>57</int><int>153</int><int>9</int><int>154</int><int>13</int><int>150</int><int>16</int><int>168</int><int>5</int><int>167</int><int>10</int><int>187</int><int>9</int><int>187</int><int>13</int><int>184</int><int>26</int><int>8</int><int>8</int><int>20</int><int>1</int><int>72</int><int>2</int><int>71</int><int>6</int><int>70</int><int>10</int><int>79</int><int>30</int><int>168</int><int>13</int><int>182</int><int>6</int><int>182</int><int>26</int><int>199</int><int>10</int><int>200</int><int>12</int><int>214</int><int>10</int><int>216</int><int>12</int><int>248</int><int>7</int><int>247</int><int>13</int><int>13</int><int>28</int><int>15</int><int>28</int><int>21</int><int>64</int><int>27</int><int>29</int><int>52</int><int>21</int><int>64</int><int>14</int><int>17</int><int>52</int><int>15</int><int>21</int><int>191</int><int>21</int><int>207</int><int>21</int><int>3</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>15</int><int>30</int><int>63</int><int>21</int><int>184</int><int>255</int><int>192</int><int>179</int><int>14</int><int>23</int><int>63</int><int>21</int><int>184</int><int>2</int><int>141</int><int>64</int><int>12</int><int>15</int><int>14</int><int>18</int><int>80</int><int>14</int><int>96</int><int>14</int><int>2</int><int>14</int><int>24</int><int>18</int><int>1</int><int>184</int><int>255</int><int>192</int><int>182</int><int>25</int><int>27</int><int>52</int><int>1</int><int>51</int><int>18</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>29</int><int>32</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>34</int><int>41</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>43</int><int>45</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>179</int><int>24</int><int>28</int><int>52</int><int>0</int><int>184</int><int>255</int><int>192</int><int>64</int><int>15</int><int>14</int><int>15</int><int>52</int><int>160</int><int>0</int><int>1</int><int>0</int><int>0</int><int>16</int><int>0</int><int>2</int><int>0</int><int>95</int><int>18</int><int>18</int><int>184</int><int>2</int><int>116</int><int>179</int><int>4</int><int>11</int><int>18</int><int>24</int><int>184</int><int>2</int><int>116</int><int>64</int><int>36</int><int>11</int><int>7</int><int>0</int><int>33</int><int>1</int><int>47</int><int>21</int><int>33</int><int>79</int><int>14</int><int>1</int><int>14</int><int>26</int><int>47</int><int>30</int><int>95</int><int>30</int><int>111</int><int>30</int><int>159</int><int>30</int><int>4</int><int>30</int><int>15</int><int>33</int><int>8</int><int>64</int><int>13</int><int>15</int><int>52</int><int>8</int><int>25</int><int>29</int><int>105</int><int>65</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>43</int><int>77</int><int>237</int><int>78</int><int>16</int><int>93</int><int>246</int><int>93</int><int>77</int><int>237</int><int>244</int><int>237</int><int>0</int><int>63</int><int>237</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>24</int><int>64</int><int>40</int><int>20</int><int>63</int><int>24</int><int>64</int><int>30</int><int>15</int><int>63</int><int>24</int><int>64</int><int>27</int><int>16</int><int>63</int><int>24</int><int>64</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>63</int><int>253</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>18</int><int>255</int><int>192</int><int>179</int><int>40</int><int>20</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>30</int><int>15</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>179</int><int>27</int><int>16</int><int>63</int><int>18</int><int>184</int><int>255</int><int>192</int><int>178</int><int>28</int><int>17</int><int>63</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>244</int><int>93</int><int>113</int><int>43</int><int>43</int><int>43</int><int>43</int><int>43</int><int>67</int><int>92</int><int>88</int><int>185</int><int>0</int><int>0</int><int>255</int><int>192</int><int>178</int><int>18</int><int>57</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>23</int><int>57</int><int>0</int><int>184</int><int>255</int><int>176</int><int>179</int><int>9</int><int>10</int><int>62</int><int>0</int><int>184</int><int>255</int><int>192</int><int>178</int><int>65</int><int>33</int><int>63</int><int>43</int><int>0</int><int>43</int><int>43</int><int>43</int><int>89</int><int>228</int><int>43</int><int>17</int><int>18</int><int>57</int><int>93</int><int>67</int><int>92</int><int>88</int><int>64</int><int>20</int><int>14</int><int>64</int><int>15</int><int>30</int><int>63</int><int>14</int><int>64</int><int>28</int><int>17</int><int>63</int><int>14</int><int>64</int><int>27</int><int>16</int><int>63</int><int>14</int><int>64</int><int>14</int><int>23</int><int>63</int><int>0</int><int>43</int><int>43</int><int>43</int><int>43</int><int>89</int><int>47</int><int>60</int><int>253</int><int>43</int><int>43</int><int>114</int><int>43</int><int>43</int><int>60</int><int>1</int><int>17</int><int>51</int><int>49</int><int>48</int><int>1</int><int>93</int><int>113</int><int>0</int><int>93</int><int>43</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>20</int><int>28</int></endPtsOfContours><flags>AQUGBiMgJyY1EAAzMgADIRYWMzI2EyYmIyIHBhc=</flags><xCoordinates><short>762</short><short>1042</short><short>988</short><short>755</short><short>580</short><short>303</short><short>170</short><short>65</short><short>65</short><short>65</short><short>341</short><short>552</short><short>789</short><short>1063</short><short>1057</short><short>353</short><short>356</short><short>486</short><short>583</short><short>649</short><short>739</short><short>778</short><short>775</short><short>655</short><short>569</short><short>477</short><short>417</short><short>357</short><short>358</short></xCoordinates><yCoordinates><short>338</short><short>291</short><short>137</short><short>-24</short><short>-24</short><short>-24</short><short>157</short><short>302</short><short>523</short><short>787</short><short>1086</short><short>1086</short><short>1086</short><short>773</short><short>450</short><short>450</short><short>325</short><short>186</short><short>186</short><short>186</short><short>258</short><short>622</short><short>744</short><short>871</short><short>871</short><short>871</short><short>804</short><short>737</short><short>622</short></yCoordinates><pointCount>29</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>421</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>356</int><int>486</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }

    @Test
    public void testMidValue50() {
        try {
            String receivingXML = "<org.apache.fontbox.ttf.GlyphRenderer><glyphDescription class=\"org.apache.fontbox.ttf.GlyfSimpleDescript\"><instructions><int>64</int><int>37</int><int>6</int><int>5</int><int>185</int><int>20</int><int>185</int><int>24</int><int>3</int><int>71</int><int>5</int><int>1</int><int>103</int><int>5</int><int>214</int><int>5</int><int>2</int><int>18</int><int>17</int><int>37</int><int>13</int><int>14</int><int>14</int><int>0</int><int>27</int><int>16</int><int>37</int><int>2</int><int>1</int><int>2</int><int>15</int><int>0</int><int>8</int><int>22</int><int>39</int><int>175</int><int>7</int><int>1</int><int>7</int><int>184</int><int>255</int><int>192</int><int>179</int><int>9</int><int>11</int><int>52</int><int>7</int><int>184</int><int>2</int><int>140</int><int>64</int><int>22</int><int>31</int><int>29</int><int>48</int><int>29</int><int>96</int><int>29</int><int>112</int><int>29</int><int>128</int><int>29</int><int>5</int><int>29</int><int>16</int><int>15</int><int>32</int><int>1</int><int>32</int><int>0</int><int>48</int><int>0</int><int>2</int><int>0</int><int>184</int><int>2</int><int>139</int><int>179</int><int>28</int><int>49</int><int>83</int><int>24</int><int>43</int><int>78</int><int>16</int><int>244</int><int>93</int><int>60</int><int>77</int><int>253</int><int>60</int><int>77</int><int>16</int><int>113</int><int>246</int><int>43</int><int>113</int><int>77</int><int>237</int><int>0</int><int>63</int><int>60</int><int>63</int><int>60</int><int>253</int><int>60</int><int>18</int><int>57</int><int>47</int><int>60</int><int>253</int><int>60</int><int>49</int><int>48</int><int>0</int><int>93</int><int>113</int><int>1</int><int>93</int></instructions><contourCount>2</contourCount><endPtsOfContours><int>15</int><int>27</int></endPtsOfContours><flags>MxEhIBcWFhUUBgYHBiMjGRkZMzI2NjU0JicmIw==</flags><xCoordinates><short>149</short><short>149</short><short>624</short><short>894</short><short>976</short><short>1102</short><short>1272</short><short>1272</short><short>1272</short><short>1174</short><short>1023</short><short>945</short><short>839</short><short>638</short><short>445</short><short>445</short><short>445</short><short>445</short><short>607</short><short>782</short><short>900</short><short>967</short><short>967</short><short>967</short><short>873</short><short>801</short><short>748</short><short>588</short></xCoordinates><yCoordinates><short>0</short><short>1466</short><short>1466</short><short>1466</short><short>1444</short><short>1411</short><short>1190</short><short>1015</short><short>880</short><short>696</short><short>591</short><short>574</short><short>553</short><short>553</short><short>553</short><short>0</short><short>1218</short><short>802</short><short>802</short><short>802</short><short>848</short><short>946</short><short>1011</short><short>1091</short><short>1195</short><short>1208</short><short>1218</short><short>1218</short></yCoordinates><pointCount>28</pointCount></glyphDescription></org.apache.fontbox.ttf.GlyphRenderer>";
            GlyphRenderer receivingObject = (GlyphRenderer) xStream.fromXML(receivingXML);
            String returnedXML = "<int>1187</int>";
            int returnedObject = (Integer) xStream.fromXML(returnedXML);
            String paramsXML = "<object-array><int>1102</int><int>1272</int></object-array>";
            Object[] paramObjects = (Object[]) xStream.fromXML(paramsXML);
            int paramObject1 = (Integer) paramObjects[0];
            int paramObject2 = (Integer) paramObjects[1];
            Class Clazz = Class.forName("org.apache.fontbox.ttf.GlyphRenderer");
            Method midValue = Clazz.getDeclaredMethod("midValue", int.class, int.class);
            midValue.setAccessible(true);
            Assert.assertEquals(returnedObject, midValue.invoke(receivingObject, paramObject1, paramObject2));
        } catch (Exception e) {
            Assert.fail();
            e.printStackTrace();
        }
    }
}